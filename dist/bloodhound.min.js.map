{"version":3,"sources":["webpack:///bloodhound.min.js","webpack:///webpack/bootstrap 958cfb913c9a0c9b726a","webpack:///./lib/utils.js","webpack:///./node_modules/object-assign/index.js","webpack:///./node_modules/es6-promise/dist/es6-promise.js","webpack:///./lib/transport.js","webpack:///./node_modules/superagent/lib/is-object.js","webpack:///./index.js","webpack:///./lib/bloodhound.js","webpack:///./node_modules/process/browser.js","webpack:///(webpack)/buildin/global.js","webpack:///./lib/remote.js","webpack:///./lib/lru_cache.js","webpack:///./lib/prefetch.js","webpack:///./lib/persistent_storage.js","webpack:///./node_modules/storage2/lib/client.js","webpack:///./node_modules/storage2/lib/storage.js","webpack:///./node_modules/storage2/lib/num-keys.js","webpack:///./node_modules/storage2/lib/cookie.js","webpack:///./lib/tokenizers.js","webpack:///./lib/options_parser.js","webpack:///./lib/ajax.js","webpack:///./node_modules/superagent/lib/client.js","webpack:///./node_modules/component-emitter/index.js","webpack:///./node_modules/reduce-component/index.js","webpack:///./node_modules/superagent/lib/request-base.js","webpack:///./node_modules/superagent/lib/request.js","webpack:///./lib/version.js","webpack:///./lib/search_index.js","webpack:///./node_modules/immutable/dist/immutable.js"],"names":["Bloodhound","modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","assign","_","isMsie","test","navigator","userAgent","match","isBlankString","str","escapeRegExChars","replace","isString","obj","isNumber","isArray","Array","isFunction","isObject","isUndefined","isElement","nodeType","isJQuery","$","toStr","bind","fn","context","each","collection","cb","forEach","map","array","filter","every","result","key","val","some","mixin","identity","x","clone","getIdGenerator","counter","templatify","template","String","defer","setTimeout","debounce","func","wait","immediate","timeout","later","callNow","this","args","arguments","apply","clearTimeout","throttle","previous","Date","now","remaining","stringify","JSON","noop","error","msg","Error","toObject","undefined","TypeError","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","test1","getOwnPropertyNames","test2","fromCharCode","join","test3","split","letter","keys","err","target","source","from","symbols","to","length","process","global","factory","objectOrFunction","setScheduler","scheduleFn","customSchedulerFn","setAsap","asapFn","asap","useVertxTimer","vertxNext","flush","useSetTimeout","globalSetTimeout","len","callback","queue","then","onFulfillment","onRejection","_arguments","parent","child","constructor","PROMISE_ID","makePromise","_state","invokeCallback","_result","subscribe","resolve","Constructor","promise","_resolve","selfFulfillment","cannotReturnOwn","getThen","GET_THEN_ERROR","tryThen","value","fulfillmentHandler","rejectionHandler","e","handleForeignThenable","thenable","sealed","fulfill","reason","_reject","_label","handleOwnThenable","FULFILLED","REJECTED","handleMaybeThenable","maybeThenable","then$$","publishRejection","_onerror","publish","PENDING","_subscribers","subscribers","settled","detail","ErrorObject","tryCatch","TRY_CATCH_ERROR","hasCallback","succeeded","failed","initializePromise","resolver","nextId","id","Enumerator","input","_instanceConstructor","_input","_remaining","_enumerate","validationError","all","entries","race","reject","needsResolver","needsNew","Promise","polyfill","local","self","Function","P","promiseToString","toString","cast","_isArray","arg","scheduleFlush","browserWindow","window","browserGlobal","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","isNode","isWorker","Uint8ClampedArray","importScripts","MessageChannel","nextTick","iterations","observer","node","document","createTextNode","observe","characterData","data","channel","port1","onmessage","port2","postMessage","vertx","runOnLoop","runOnContext","Math","random","substring","_eachEntry","entry","resolve$$","_then","_settledAt","_willSettleAt","state","enumerator","_setScheduler","_setAsap","_asap","catch","Transport","cancelled","lastReq","_send","transport","_get","limiter","_cache","cache","LruCache","sharedCache","pendingRequestsCount","pendingRequests","maxPendingRequests","setMaxPendingRequests","num","resetCache","reset","_fingerprint","url","type","done","resp","that","set","fingerprint","fail","always","onDeckRequestArgs","jqXhr","slice","cancel","oParser","sorter","identify","sufficient","remote","Remote","prefetch","Prefetch","index","SearchIndex","datumTokenizer","queryTokenizer","initialize","tokenizers","__ttAdapter","withAsync","query","sync","async","search","withoutAsync","_loadPrefetch","serialized","fromCache","bootstrap","fromNetwork","add","store","serialize","_initialize","addLocalToIndex","clear","initPromise","force","remove","ids","processRemote","nonDuplicates","r","push","cancelLastRequest","clearPrefetchCache","clearRemoteCache","ttAdapter","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","concat","queueIndex","drainQueue","run","Item","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","g","eval","prepare","transform","_settings","dataType","onResponse","settings","maxSize","List","head","tail","Node","prev","next","tailItem","list","size","hash","moveToFront","ttl","thumbprint","storage","PersistentStorage","cacheKey","protocol","location","isExpired","stored","onError","namespace","override","prefix","ttlKey","keyMatcher","RegExp","ls","LOCAL_STORAGE","_noop","getTime","encode","decode","parse","gatherMatchingKeys","storage2","localStorage","setItem","removeItem","_prefix","_ttlKey","_safeSet","getItem","Storage","cookie","_storage_support","sessionStorage","lsCookie","read","create","ss","_obj","_set","_clear","numKeys","proto","k","v","encodeURIComponent","_updateLength","ctr","decodeURIComponent","createCookie","days","date","expires","setTime","toGMTString","readCookie","nameEQ","ca","charAt","indexOf","whitespace","nonword","getObjTokenizer","tokenizer","tokens","parsePrefetch","defaults","VERSION","callbackToDeferred","ajax","parseRemote","wildcard","rateLimitBy","rateLimitWait","toRemotePrepare","toLimiter","prepareByReplace","prepareByWildcard","idenityPrepare","method","sort","request","end","res","body","isHost","pairs","pushEncodedKeyValuePair","parseString","parts","pair","parseHeader","line","field","lines","fields","pop","toLowerCase","trim","isJSON","mime","shift","params","reduce","Response","req","options","xhr","text","responseType","responseText","statusText","setStatusProperties","status","header","headers","getAllResponseHeaders","getResponseHeader","setHeaderProperties","parseBody","response","Request","_query","_header","original","rawResponse","statusCode","new_err","del","root","Emitter","requestBase","getXHR","XMLHttpRequest","ActiveXObject","serializeObject","types","html","json","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","ct","statusType","info","ok","clientError","serverError","toError","accepted","noContent","badRequest","unauthorized","notAcceptable","notFound","forbidden","abort","aborted","_responseType","accept","auth","user","pass","btoa","username","password","attach","file","filename","_getFormData","append","_formData","FormData","send","_data","console","warn","_parser","_callback","crossDomainError","crossDomain","timeoutError","_timeout","withCredentials","_withCredentials","onreadystatechange","readyState","timedout","handleProgress","total","percent","loaded","direction","hasListeners","onprogress","upload","_timer","open","contentType","setRequestHeader","patch","post","put","addEventListener","event","_callbacks","removeEventListener","callbacks","splice","arr","initial","idx","curr","ms","use","getHeader","unset","RequestConstructor","normalizeTokens","token","newNode","IDS","CHILDREN","unique","seen","uniques","getIntersection","arrayA","arrayB","ai","bi","intersection","lenArrayA","lenArrayB","Immutable","datums","trie","isList","datum","chars","ch","lastNode","item","matches","values","createClass","ctor","superClass","Iterable","isIterable","Seq","KeyedIterable","isKeyed","KeyedSeq","IndexedIterable","isIndexed","IndexedSeq","SetIterable","isAssociative","SetSeq","maybeIterable","IS_ITERABLE_SENTINEL","maybeKeyed","IS_KEYED_SENTINEL","maybeIndexed","IS_INDEXED_SENTINEL","maybeAssociative","isOrdered","maybeOrdered","IS_ORDERED_SENTINEL","MakeRef","ref","SetRef","OwnerID","arrCopy","offset","max","newArr","ii","ensureSize","iter","__iterate","returnTrue","wrapIndex","uint32Index","NaN","wholeSlice","begin","resolveBegin","resolveIndex","resolveEnd","defaultIndex","min","Iterator","iteratorValue","iteratorResult","iteratorDone","hasIterator","getIteratorFn","isIterator","maybeIterator","getIterator","iterable","iteratorFn","REAL_ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","isArrayLike","emptySequence","toSeq","seqFromValue","toKeyedSeq","fromEntrySeq","keyedSeqFromValue","entrySeq","toIndexedSeq","indexedSeqFromValue","toSetSeq","ArraySeq","_array","ObjectSeq","_object","_keys","IterableSeq","_iterable","IteratorSeq","iterator","_iterator","_iteratorCache","isSeq","maybeSeq","IS_SEQ_SENTINEL","EMPTY_SEQ","seq","maybeIndexedSeqFromValue","seqIterate","reverse","useKeys","maxIndex","__iterateUncached","seqIterator","__iteratorUncached","fromJS","converter","fromJSWith","","fromJSDefault","parentJSON","isPlainObj","toList","toMap","is","valueA","valueB","valueOf","equals","deepEqual","a","b","__hash","notAssociative","flipped","cacheResult","allEqual","bSize","has","NOT_SET","Repeat","times","_value","Infinity","EMPTY_REPEAT","invariant","condition","Range","start","step","abs","_start","_end","_step","ceil","EMPTY_RANGE","Collection","KeyedCollection","IndexedCollection","SetCollection","smi","i32","h","STRING_HASH_CACHE_MIN_STRLEN","cachedHashString","hashString","hashCode","hashJSObj","string","stringHashCache","STRING_HASH_CACHE_SIZE","STRING_HASH_CACHE_MAX_SIZE","charCodeAt","usingWeakMap","weakMap","UID_HASH_KEY","canDefineProperty","getIENodeHash","objHashUID","isExtensible","writable","uniqueID","documentElement","assertNotInfinite","Map","emptyMap","isMap","withMutations","maybeMap","IS_MAP_SENTINEL","ArrayMapNode","ownerID","BitmapIndexedNode","bitmap","nodes","HashArrayMapNode","count","HashCollisionNode","keyHash","ValueNode","MapIterator","_type","_reverse","_stack","_root","mapIteratorFrame","mapIteratorValue","__prev","makeMap","MapPrototype","__ownerID","__altered","EMPTY_MAP","updateMap","newRoot","newSize","didChangeSize","CHANGE_LENGTH","didAlter","DID_ALTER","updateNode","update","isLeafNode","mergeIntoNode","idx1","MASK","idx2","SHIFT","createNodes","packNodes","excluding","packedII","packedNodes","bit","expandNodes","including","expandedNodes","SIZE","mergeIntoMapWith","merger","iterables","iters","mergeIntoCollectionWith","deepMerger","existing","mergeDeep","deepMergerWith","mergeDeepWith","nextValue","mergeIntoMap","updateInDeepMap","keyPathIter","notSetValue","updater","isNotSet","existingValue","newValue","nextExisting","nextUpdated","popCount","setIn","canEdit","newArray","spliceIn","newLen","after","spliceOut","empty","emptyList","makeList","VNode","toArray","setSize","maybeList","IS_LIST_SENTINEL","iterateList","iterateNodeOrLeaf","level","iterateLeaf","iterateNode","tailPos","left","right","DONE","_origin","_capacity","getTailOffset","_tail","_level","origin","capacity","ListPrototype","EMPTY_LIST","updateList","setListBounds","newTail","updateVNode","nodeHas","lowerNode","newLowerNode","editableVNode","listNodeFor","rawIndex","owner","oldOrigin","oldCapacity","newOrigin","newCapacity","newLevel","offsetShift","oldTailOffset","newTailOffset","oldTail","removeAfter","removeBefore","beginIndex","mergeIntoListWith","OrderedMap","emptyOrderedMap","isOrderedMap","maybeOrderedMap","makeOrderedMap","omap","_map","_list","EMPTY_ORDERED_MAP","updateOrderedMap","newMap","newList","flip","ToKeyedSequence","indexed","_iter","_useKeys","ToIndexedSequence","ToSetSequence","FromEntriesSequence","flipFactory","flipSequence","makeSequence","reversedSequence","includes","cacheResultThrough","this$0","ITERATE_ENTRIES","__iterator","ITERATE_VALUES","ITERATE_KEYS","mapFactory","mapper","mappedSequence","reverseFactory","filterFactory","predicate","filterSequence","countByFactory","grouper","groups","asMutable","asImmutable","groupByFactory","isKeyedIter","coerce","iterableClass","reify","sliceFactory","originalSize","resolvedBegin","resolvedEnd","sliceSize","resolvedSize","sliceSeq","skipped","isSkipping","takeWhileFactory","takeSequence","iterating","skipWhileFactory","skipSequence","skipping","concatFactory","isKeyedIterable","singleton","concatSeq","flatten","sum","flattenFactory","depth","flatSequence","flatDeep","currentDepth","stopped","stack","flatMapFactory","interposeFactory","separator","interposedSequence","sortFactory","comparator","defaultComparator","maxFactory","maxCompare","comp","zipWithFactory","keyIter","zipper","zipSequence","iterators","isDone","steps","validateEntry","resolveSize","forceIterator","keyPath","Record","defaultValues","hasInitialized","RecordType","setProps","RecordTypePrototype","_name","_defaultValues","RecordPrototype","makeRecord","likeRecord","record","getPrototypeOf","recordName","names","setProp","Set","emptySet","isSet","maybeSet","IS_SET_SENTINEL","updateSet","__empty","__make","makeSet","SetPrototype","EMPTY_SET","OrderedSet","emptyOrderedSet","isOrderedSet","maybeOrderedSet","makeOrderedSet","OrderedSetPrototype","EMPTY_ORDERED_SET","Stack","emptyStack","isStack","unshiftAll","maybeStack","IS_STACK_SENTINEL","makeStack","StackPrototype","_head","EMPTY_STACK","methods","keyCopier","keyMapper","entryMapper","not","neg","quoteString","defaultZipper","defaultNegComparator","hashIterable","ordered","keyed","murmurHashOfSize","hashMerge","imul","SLICE$0","Keyed","Indexed","Symbol","ITERATOR_SYMBOL","KEYS","VALUES","ENTRIES","inspect","toSource","of","__toString","searchValue","lastIndexOf","other","possibleIndex","floor","offsetValue","WeakMap","keyValues","updateIn","deleteIn","updatedValue","merge","mergeWith","mergeIn","mergeDeepIn","sortBy","mutable","wasAltered","__ensureOwner","iterate","removeIn","removed","exists","MAX_ARRAY_MAP_SIZE","isEditable","newEntries","keyHashFrag","MAX_BITMAP_INDEXED_SIZE","newBitmap","newNodes","newCount","MIN_HASH_ARRAY_MAP_SIZE","keyMatch","subNode","insert","oldSize","unshift","originIndex","newChild","removingFirst","oldChild","editable","sizeIndex","valueSeq","indexedIterable","defaultVal","_empty","fromKeys","keySeq","union","intersect","originalSet","subtract","peek","pushAll","toJS","__toJS","toJSON","toOrderedMap","toOrderedSet","toSet","toStack","__toStringMapper","returnValue","find","findEntry","sideEffect","joined","isFirst","reducer","initialReduction","reduction","useFirst","reduceRight","reversed","butLast","isEmpty","countBy","entriesSequence","filterNot","found","findKey","findLast","findLastEntry","findLastKey","first","flatMap","searchKey","getIn","searchKeyPath","nested","groupBy","hasIn","isSubset","isSuperset","keyOf","last","lastKeyOf","maxBy","minBy","rest","skip","amount","skipLast","skipWhile","skipUntil","take","takeLast","takeWhile","takeUntil","IterablePrototype","chain","contains","mapEntries","mapKeys","KeyedIterablePrototype","findIndex","removeNum","numArgs","spliced","findLastIndex","interpose","interleave","zipped","interleaved","zip","zipWith"],"mappings":"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","file":"bloodhound.min.js","sourcesContent":["var Bloodhound =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * typeahead.js\n * https://github.com/twitter/typeahead.js\n * Copyright 2013-2014 Twitter, Inc. and other contributors; Licensed MIT\n */\n\nvar assign = __webpack_require__(1);\n\nvar _ = {\n  isMsie: function () {\n    // from https://github.com/ded/bowser/blob/master/bowser.js\n    return (/(msie|trident)/i.test(navigator.userAgent) ? navigator.userAgent.match(/(msie |rv:)(\\d+(.\\d+)?)/i)[2] : false\n    );\n  },\n\n  isBlankString: function (str) {\n    return !str || /^\\s*$/.test(str);\n  },\n\n  // http://stackoverflow.com/a/6969486\n  escapeRegExChars: function (str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n  },\n\n  isString: function (obj) {\n    return typeof obj === 'string';\n  },\n\n  isNumber: function (obj) {\n    return typeof obj === 'number';\n  },\n\n  isArray: Array.isArray,\n\n  isFunction: function (obj) {\n    return typeof obj === 'function';\n  },\n\n  isObject: function (obj) {\n    return typeof obj === 'object';\n  },\n\n  isUndefined: function (obj) {\n    return typeof obj === 'undefined';\n  },\n\n  isElement: function (obj) {\n    return !!(obj && obj.nodeType === 1);\n  },\n\n  isJQuery: function (obj) {\n    return obj instanceof $;\n  },\n\n  toStr: function toStr(s) {\n    return _.isUndefined(s) || s === null ? '' : s + '';\n  },\n\n  bind: function (fn, context) {\n    return fn.bind(context);\n  },\n\n  each: function (collection, cb) {\n    collection.forEach(cb);\n  },\n\n  map: function (array, fn) {\n    return array.map(fn);\n  },\n\n  filter: function (array, fn) {\n    return array.filter(fn);\n  },\n\n  every: function (obj, test) {\n    var result = true;\n\n    if (!obj) {\n      return result;\n    }\n\n    // $.each(obj, function(key, val) {\n    //   if (!(result = test.call(null, val, key, obj))) {\n    //     return false;\n    //   }\n    // });\n\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        var val = obj[key];\n        if (!(result = test.call(null, val, key, obj))) {\n          return false;\n        }\n      }\n    }\n\n    return !!result;\n  },\n\n  some: function (obj, test) {\n    var result = false;\n\n    if (!obj) {\n      return result;\n    }\n\n    // $.each(obj, function(key, val) {\n    //   if (result = test.call(null, val, key, obj)) {\n    //     return false;\n    //   }\n    // });\n\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        var val = obj[key];\n        if (result = test.call(null, val, key, obj)) {\n          return false;\n        }\n      }\n    }\n\n    return !!result;\n  },\n\n  mixin: __webpack_require__(1),\n\n  identity: function (x) {\n    return x;\n  },\n\n  clone: function (obj) {\n    return assign({}, obj);\n  },\n\n  getIdGenerator: function () {\n    var counter = 0;\n    return function () {\n      return counter++;\n    };\n  },\n\n  templatify: function templatify(obj) {\n    return _.isFunction(obj) ? obj : template;\n\n    function template() {\n      return String(obj);\n    }\n  },\n\n  defer: function (fn) {\n    setTimeout(fn, 0);\n  },\n\n  debounce: function (func, wait, immediate) {\n    var timeout, result;\n\n    return function () {\n      var context = this,\n          args = arguments,\n          later,\n          callNow;\n\n      later = function () {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n        }\n      };\n\n      callNow = immediate && !timeout;\n\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n\n      if (callNow) {\n        result = func.apply(context, args);\n      }\n\n      return result;\n    };\n  },\n\n  throttle: function (func, wait) {\n    var context, args, timeout, result, previous, later;\n\n    previous = 0;\n    later = function () {\n      previous = new Date();\n      timeout = null;\n      result = func.apply(context, args);\n    };\n\n    return function () {\n      var now = new Date(),\n          remaining = wait - (now - previous);\n\n      context = this;\n      args = arguments;\n\n      if (remaining <= 0) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n      } else if (!timeout) {\n        timeout = setTimeout(later, remaining);\n      }\n\n      return result;\n    };\n  },\n\n  stringify: function (val) {\n    return _.isString(val) ? val : JSON.stringify(val);\n  },\n\n  noop: function () {},\n\n  error: function (msg) {\n    throw new Error(msg);\n  }\n};\n\nmodule.exports = _;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process, global) {var require;/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   3.3.1\n */\n\n(function (global, factory) {\n     true ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  return typeof x === 'function' || typeof x === 'object' && x !== null;\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nvar _isArray = undefined;\nif (!Array.isArray) {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n} else {\n  _isArray = Array.isArray;\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = undefined;\nvar customSchedulerFn = undefined;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  return function () {\n    vertxNext(flush);\n  };\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = __webpack_require__(9);\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && \"function\" === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var _arguments = arguments;\n\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n  if (_state) {\n    (function () {\n      var callback = _arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  _resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        _resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      _reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      _reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    _reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return _resolve(promise, value);\n    }, function (reason) {\n      return _reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$) {\n  if (maybeThenable.constructor === promise.constructor && then$$ === then && maybeThenable.constructor.resolve === resolve) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$ === GET_THEN_ERROR) {\n      _reject(promise, GET_THEN_ERROR.error);\n    } else if (then$$ === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$)) {\n      handleForeignThenable(promise, maybeThenable, then$$);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction _resolve(promise, value) {\n  if (promise === value) {\n    _reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction _reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      _reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      _resolve(promise, value);\n    } else if (failed) {\n      _reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      _reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      _resolve(promise, value);\n    }, function rejectPromise(reason) {\n      _reject(promise, reason);\n    });\n  } catch (e) {\n    _reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction Enumerator(Constructor, input) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop);\n\n  if (!this.promise[PROMISE_ID]) {\n    makePromise(this.promise);\n  }\n\n  if (isArray(input)) {\n    this._input = input;\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._result = new Array(this.length);\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate();\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    _reject(this.promise, validationError());\n  }\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n};\n\nEnumerator.prototype._enumerate = function () {\n  var length = this.length;\n  var _input = this._input;\n\n  for (var i = 0; this._state === PENDING && i < length; i++) {\n    this._eachEntry(_input[i], i);\n  }\n};\n\nEnumerator.prototype._eachEntry = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve$$ = c.resolve;\n\n  if (resolve$$ === resolve) {\n    var _then = getThen(entry);\n\n    if (_then === then && entry._state !== PENDING) {\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof _then !== 'function') {\n      this._remaining--;\n      this._result[i] = entry;\n    } else if (c === Promise) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, _then);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve$$) {\n        return resolve$$(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve$$(entry), i);\n  }\n};\n\nEnumerator.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (state === REJECTED) {\n      _reject(promise, value);\n    } else {\n      this._result[i] = value;\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  _reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise(resolver) {\n  this[PROMISE_ID] = nextId();\n  this._result = this._state = undefined;\n  this._subscribers = [];\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = resolve;\nPromise.reject = reject;\nPromise._setScheduler = setScheduler;\nPromise._setAsap = setAsap;\nPromise._asap = asap;\n\nPromise.prototype = {\n  constructor: Promise,\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\nfunction polyfill() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise;\n}\n\npolyfill();\n// Strange compat..\nPromise.polyfill = polyfill;\nPromise.Promise = Promise;\n\nreturn Promise;\n\n})));\n//# sourceMappingURL=es6-promise.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7), __webpack_require__(8)))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LruCache = __webpack_require__(11);\nvar _ = __webpack_require__(0);\n\nvar pendingRequestsCount = 0;\nvar pendingRequests = {};\nvar maxPendingRequests = 6;\nvar sharedCache = new LruCache(10);\n\nfunction Transport(o) {\n  o = o || {};\n\n  this.cancelled = false;\n  this.lastReq = null;\n\n  this._send = o.transport;\n  this._get = o.limiter ? o.limiter(this._get) : this._get;\n\n  this._cache = o.cache === false ? new LruCache(0) : sharedCache;\n}\n\nTransport.setMaxPendingRequests = function setMaxPendingRequests(num) {\n  maxPendingRequests = num;\n};\n\nTransport.resetCache = function resetCache() {\n  sharedCache.reset();\n};\n\n_.mixin(Transport.prototype, {\n\n  _fingerprint: function (o) {\n    o = o || {};\n    return o.url + o.type + JSON.stringify(o.data || {});\n  },\n\n  _get: function (o, cb) {\n    var that = this,\n        fingerprint,\n        jqXhr;\n\n    fingerprint = this._fingerprint(o);\n\n    // #149: don't make a network request if there has been a cancellation\n    // or if the url doesn't match the last url Transport#get was invoked with\n    if (this.cancelled || fingerprint !== this.lastReq) {\n      return;\n    }\n\n    // a request is already in progress, piggyback off of it\n    if (jqXhr = pendingRequests[fingerprint]) {\n      // jqXhr.done(done).fail(fail);\n      jqXhr.then(done, fail);\n    }\n\n    // under the pending request threshold, so fire off a request\n    else if (pendingRequestsCount < maxPendingRequests) {\n        pendingRequestsCount++;\n        pendingRequests[fingerprint] =\n        // this._send(o).done(done).fail(fail).always(always);\n        this._send(o).then(function (resp) {\n          done(resp);\n          always();\n        }, function () {\n          fail();\n          always();\n        });\n      }\n\n      // at the pending request threshold, so hang out in the on deck circle\n      else {\n          this.onDeckRequestArgs = [].slice.call(arguments, 0);\n        }\n\n    function done(resp) {\n      cb(null, resp);\n      that._cache.set(fingerprint, resp);\n    }\n\n    function fail() {\n      cb(true);\n    }\n\n    function always() {\n      pendingRequestsCount--;\n      delete pendingRequests[fingerprint];\n\n      // ensures request is always made for the last query\n      if (that.onDeckRequestArgs) {\n        that._get.apply(that, that.onDeckRequestArgs);\n        that.onDeckRequestArgs = null;\n      }\n    }\n  },\n\n  get: function (o, cb) {\n    var resp, fingerprint;\n\n    cb = cb || _.noop;\n    o = _.isString(o) ? { url: o } : o || {};\n\n    fingerprint = this._fingerprint(o);\n\n    this.cancelled = false;\n    this.lastReq = fingerprint;\n\n    // in-memory cache hit\n    if (resp = this._cache.get(fingerprint)) {\n      cb(null, resp);\n    }\n\n    // go to network\n    else {\n        this._get(o, cb);\n      }\n  },\n\n  cancel: function () {\n    this.cancelled = true;\n  }\n});\n\nmodule.exports = Transport;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null != obj && 'object' == typeof obj;\n}\n\nmodule.exports = isObject;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(6);\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0);\nvar Promise = __webpack_require__(2).Promise;\nvar Remote = __webpack_require__(10);\nvar Prefetch = __webpack_require__(12);\nvar tokenizers = __webpack_require__(18);\nvar oParser = __webpack_require__(19);\nvar SearchIndex = __webpack_require__(27);\nvar Transport = __webpack_require__(3);\n\nfunction Bloodhound(o) {\n  o = oParser(o);\n\n  this.sorter = o.sorter;\n  this.identify = o.identify;\n  this.sufficient = o.sufficient;\n\n  this.local = o.local;\n  this.remote = o.remote ? new Remote(o.remote) : null;\n  this.prefetch = o.prefetch ? new Prefetch(o.prefetch) : null;\n\n  // the backing data structure used for fast pattern matching\n  this.index = new SearchIndex({\n    identify: this.identify,\n    datumTokenizer: o.datumTokenizer,\n    queryTokenizer: o.queryTokenizer\n  });\n\n  // hold off on intialization if the intialize option was explicitly false\n  o.initialize !== false && this.initialize();\n}\n\nBloodhound.tokenizers = tokenizers;\n\n_.mixin(Bloodhound.prototype, {\n\n  // ### super secret stuff used for integration with jquery plugin\n\n  __ttAdapter: function ttAdapter() {\n    var that = this;\n\n    return this.remote ? withAsync : withoutAsync;\n\n    function withAsync(query, sync, async) {\n      return that.search(query, sync, async);\n    }\n\n    function withoutAsync(query, sync) {\n      return that.search(query, sync);\n    }\n  },\n\n  _loadPrefetch: function loadPrefetch() {\n    var that = this,\n        promise,\n        serialized;\n\n    if (!this.prefetch) {\n      return new Promise(function (resolve, reject) {\n        resolve();\n      });\n    } else if (serialized = this.prefetch.fromCache()) {\n      this.index.bootstrap(serialized);\n      return new Promise(function (resolve, reject) {\n        resolve();\n      });\n    } else {\n      // this.prefetch.fromNetwork(done);\n      return new Promise(function (resolve, reject) {\n\n        // todo: promise\n        that.prefetch.fromNetwork(function (err, data) {\n          if (err) return reject(err);\n\n          try {\n            that.add(data);\n            that.prefetch.store(that.index.serialize());\n            resolve();\n          } catch (e) {\n            reject(e);\n          }\n        });\n      });\n    }\n  },\n\n  _initialize: function () {\n    var that = this,\n        deferred;\n\n    // in case this is a reinitialization, clear previous data\n    this.clear();\n\n    (this.initPromise = this._loadPrefetch()).then(addLocalToIndex); // local must be added to index after prefetch\n\n    return this.initPromise;\n\n    function addLocalToIndex() {\n      that.add(that.local);\n    }\n  },\n\n  // ### public\n\n  initialize: function (force) {\n    return !this.initPromise || force ? this._initialize() : this.initPromise;\n  },\n\n  // TODO: before initialize what happens?\n  add: function (data) {\n    this.index.add(data);\n    return this;\n  },\n\n  remove: function (data) {\n    this.index.remove(data);\n    return this;\n  },\n\n  get: function (ids) {\n    ids = _.isArray(ids) ? ids : [].slice.call(arguments);\n    return this.index.get(ids);\n  },\n\n  search: function (query, sync, async) {\n    var that = this,\n        local;\n\n    local = this.sorter(this.index.search(query));\n\n    // return a copy to guarantee no changes within this scope\n    // as this array will get used when processing the remote results\n    sync(this.remote ? local.slice() : local);\n\n    if (this.remote && local.length < this.sufficient) {\n      this.remote.get(query, processRemote);\n    } else if (this.remote) {\n      // #149: prevents outdated rate-limited requests from being sent\n      this.remote.cancelLastRequest();\n    }\n\n    return this;\n\n    function processRemote(remote) {\n      var nonDuplicates = [];\n\n      // exclude duplicates\n      _.each(remote, function (r) {\n        !_.some(local, function (l) {\n          return that.identify(r) === that.identify(l);\n        }) && nonDuplicates.push(r);\n      });\n\n      async && async(nonDuplicates);\n    }\n  },\n\n  all: function () {\n    return this.index.all();\n  },\n\n  clear: function () {\n    this.index.reset();\n    return this;\n  },\n\n  clearPrefetchCache: function () {\n    this.prefetch && this.prefetch.clear();\n    return this;\n  },\n\n  clearRemoteCache: function () {\n    Transport.resetCache();\n    return this;\n  },\n\n  // DEPRECATED: will be removed in v1\n  ttAdapter: function () {\n    return this.__ttAdapter();\n  }\n});\n\nmodule.exports = Bloodhound;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * typeahead.js\n * https://github.com/twitter/typeahead.js\n * Copyright 2013-2014 Twitter, Inc. and other contributors; Licensed MIT\n */\n\nvar _ = __webpack_require__(0);\nvar Transport = __webpack_require__(3);\n\nfunction Remote(o) {\n  this.url = o.url;\n  this.prepare = o.prepare;\n  this.transform = o.transform;\n\n  this.transport = new Transport({\n    cache: o.cache,\n    limiter: o.limiter,\n    transport: o.transport\n  });\n}\n\n_.mixin(Remote.prototype, {\n  // ### private\n\n  _settings: function settings() {\n    return {\n      url: this.url,\n      type: 'GET',\n      dataType: 'json'\n    };\n  },\n\n  get: function get(query, cb) {\n    var that = this,\n        settings;\n\n    if (!cb) {\n      return;\n    }\n\n    query = query || '';\n    settings = this.prepare(query, this._settings());\n\n    return this.transport.get(settings, onResponse);\n\n    function onResponse(err, resp) {\n      err ? cb([]) : cb(that.transform(resp));\n    }\n  },\n\n  cancelLastRequest: function cancelLastRequest() {\n    this.transport.cancel();\n  }\n});\n\nmodule.exports = Remote;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * typeahead.js\n * https://github.com/twitter/typeahead.js\n * Copyright 2013-2014 Twitter, Inc. and other contributors; Licensed MIT\n */\n\n// inspired by https://github.com/jharding/lru-cache\n\nvar _ = __webpack_require__(0);\n\nfunction LruCache(maxSize) {\n  this.maxSize = _.isNumber(maxSize) ? maxSize : 100;\n  this.reset();\n\n  // if max size is less than 0, provide a noop cache\n  if (this.maxSize <= 0) {\n    this.set = this.get = _.noop;\n  }\n}\n\n_.mixin(LruCache.prototype, {\n  set: function set(key, val) {\n    var tailItem = this.list.tail,\n        node;\n\n    // at capacity\n    if (this.size >= this.maxSize) {\n      this.list.remove(tailItem);\n      delete this.hash[tailItem.key];\n\n      this.size--;\n    }\n\n    // writing over existing key\n    if (node = this.hash[key]) {\n      node.val = val;\n      this.list.moveToFront(node);\n    }\n\n    // new key\n    else {\n        node = new Node(key, val);\n\n        this.list.add(node);\n        this.hash[key] = node;\n\n        this.size++;\n      }\n  },\n\n  get: function get(key) {\n    var node = this.hash[key];\n\n    if (node) {\n      this.list.moveToFront(node);\n      return node.val;\n    }\n  },\n\n  reset: function reset() {\n    this.size = 0;\n    this.hash = {};\n    this.list = new List();\n  }\n});\n\nfunction List() {\n  this.head = this.tail = null;\n}\n\n_.mixin(List.prototype, {\n  add: function add(node) {\n    if (this.head) {\n      node.next = this.head;\n      this.head.prev = node;\n    }\n\n    this.head = node;\n    this.tail = this.tail || node;\n  },\n\n  remove: function remove(node) {\n    node.prev ? node.prev.next = node.next : this.head = node.next;\n    node.next ? node.next.prev = node.prev : this.tail = node.prev;\n  },\n\n  moveToFront: function (node) {\n    this.remove(node);\n    this.add(node);\n  }\n});\n\nfunction Node(key, val) {\n  this.key = key;\n  this.val = val;\n  this.prev = this.next = null;\n}\n\nmodule.exports = LruCache;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PersistentStorage = __webpack_require__(13);\nvar _ = __webpack_require__(0);\n\nvar keys = { data: 'data', protocol: 'protocol', thumbprint: 'thumbprint' };\nvar location = null;\n\nif (typeof window !== 'undefined') {\n  location = window.location;\n} else {\n  location = {\n    protocol: 'https:'\n  };\n}\n\n// constructor\n// -----------\n\n// defaults for options are handled in options_parser\nfunction Prefetch(o) {\n  this.url = o.url;\n  this.ttl = o.ttl;\n  this.cache = o.cache;\n  this.prepare = o.prepare;\n  this.transform = o.transform;\n  this.transport = o.transport;\n  this.thumbprint = o.thumbprint;\n\n  this.storage = new PersistentStorage(o.cacheKey);\n}\n\n_.mixin(Prefetch.prototype, {\n\n  _settings: function () {\n    return { url: this.url, type: 'GET', dataType: 'json' };\n  },\n\n  store: function (data) {\n    if (!this.cache) {\n      return;\n    }\n\n    this.storage.set(keys.data, data, this.ttl);\n    this.storage.set(keys.protocol, location.protocol, this.ttl);\n    this.storage.set(keys.thumbprint, this.thumbprint, this.ttl);\n  },\n\n  fromCache: function () {\n    var stored = {},\n        isExpired;\n\n    if (!this.cache) {\n      return null;\n    }\n\n    stored.data = this.storage.get(keys.data);\n    stored.protocol = this.storage.get(keys.protocol);\n    stored.thumbprint = this.storage.get(keys.thumbprint);\n\n    // the stored data is considered expired if the thumbprints\n    // don't match or if the protocol it was originally stored under\n    // has changed\n    isExpired = stored.thumbprint !== this.thumbprint || stored.protocol !== location.protocol;\n\n    // TODO: if expired, remove from local storage\n\n    return stored.data && !isExpired ? stored.data : null;\n  },\n\n  fromNetwork: function (cb) {\n    var that = this,\n        settings;\n\n    if (!cb) {\n      return;\n    }\n\n    settings = this.prepare(this._settings());\n\n    // this.transport(settings).fail(onError).done(onResponse);\n    this.transport(settings).then(onResponse, onError);\n\n    function onError() {\n      cb(true);\n    }\n    function onResponse(resp) {\n      cb(null, that.transform(resp));\n    }\n  },\n\n  clear: function () {\n    this.storage.clear();\n    return this;\n  }\n});\n\nmodule.exports = Prefetch;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar storage2 = __webpack_require__(14);\nvar _ = __webpack_require__(0);\n\nvar LOCAL_STORAGE;\n\ntry {\n  LOCAL_STORAGE = storage2.localStorage;\n\n  // while in private browsing mode, some browsers make\n  // localStorage available, but throw an error when used\n  LOCAL_STORAGE.setItem('~~~', '!');\n  LOCAL_STORAGE.removeItem('~~~');\n} catch (err) {\n  LOCAL_STORAGE = null;\n}\n\n// constructor\n// -----------\n\nfunction PersistentStorage(namespace, override) {\n  this.prefix = ['__', namespace, '__'].join('');\n  this.ttlKey = '__ttl__';\n  this.keyMatcher = new RegExp('^' + _.escapeRegExChars(this.prefix));\n\n  // for testing purpose\n  this.ls = override || LOCAL_STORAGE;\n\n  // if local storage isn't available, everything becomes a noop\n  !this.ls && this._noop();\n}\n\n// instance methods\n// ----------------\n\n_.mixin(PersistentStorage.prototype, {\n  // ### private\n\n  _prefix: function (key) {\n    return this.prefix + key;\n  },\n\n  _ttlKey: function (key) {\n    return this._prefix(key) + this.ttlKey;\n  },\n\n  _noop: function () {\n    this.get = this.set = this.remove = this.clear = this.isExpired = _.noop;\n  },\n\n  _safeSet: function (key, val) {\n    try {\n      this.ls.setItem(key, val);\n    } catch (err) {\n      // hit the localstorage limit so clean up and better luck next time\n      if (err.name === 'QuotaExceededError') {\n        this.clear();\n        this._noop();\n      }\n    }\n  },\n\n  // ### public\n\n  get: function (key) {\n    if (this.isExpired(key)) {\n      this.remove(key);\n    }\n\n    return decode(this.ls.getItem(this._prefix(key)));\n  },\n\n  set: function (key, val, ttl) {\n    if (_.isNumber(ttl)) {\n      this._safeSet(this._ttlKey(key), encode(now() + ttl));\n    } else {\n      this.ls.removeItem(this._ttlKey(key));\n    }\n\n    return this._safeSet(this._prefix(key), encode(val));\n  },\n\n  remove: function (key) {\n    this.ls.removeItem(this._ttlKey(key));\n    this.ls.removeItem(this._prefix(key));\n\n    return this;\n  },\n\n  clear: function () {\n    var i,\n        keys = gatherMatchingKeys(this.keyMatcher);\n\n    for (i = keys.length; i--;) {\n      this.remove(keys[i]);\n    }\n\n    return this;\n  },\n\n  isExpired: function (key) {\n    var ttl = decode(this.ls.getItem(this._ttlKey(key)));\n\n    return _.isNumber(ttl) && now() > ttl ? true : false;\n  }\n});\n\n// helper functions\n// ----------------\n\nfunction now() {\n  return new Date().getTime();\n}\n\nfunction encode(val) {\n  // convert undefined to null to avoid issues with JSON.parse\n  return JSON.stringify(_.isUndefined(val) ? null : val);\n}\n\nfunction decode(val) {\n  return JSON.parse(val);\n  // return $.parseJSON(val);\n}\n\nfunction gatherMatchingKeys(keyMatcher) {\n  var i,\n      key,\n      keys = [],\n      len = LOCAL_STORAGE.length;\n\n  for (i = 0; i < len; i++) {\n    if ((key = LOCAL_STORAGE.key(i)).match(keyMatcher)) {\n      keys.push(key.replace(keyMatcher, ''));\n    }\n  }\n\n  return keys;\n}\n\nmodule.exports = PersistentStorage;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Storage = __webpack_require__(15);\nvar cookie = __webpack_require__(17);\n\nvar _storage_support = true;\n\ntry {\n  window.localStorage.setItem('test', '42');\n  window.sessionStorage.setItem('test', '42');\n} catch (e) {\n  _storage_support = false;\n}\n\nif (_storage_support) {\n  module.exports = {\n    localStorage: window.localStorage,\n    sessionStorage: window.sessionStorage\n  };\n} else {\n  var lsCookie = cookie.read('localStorage');\n\n  var ls = new Storage(\n    lsCookie ? JSON.parse(lsCookie) : {}, // init\n    function(data) {\n      // set\n      cookie.create('localStorage', JSON.stringify(data), 365);\n    },\n    function() {\n      // clear\n      cookie.create('localStorage', '', 365);\n    }\n  );\n\n  var ss = new Storage();\n\n  module.exports = {\n    localStorage: ls,\n    sessionStorage: ss\n  };\n}\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numKeys = __webpack_require__(16);\n\nfunction Storage(obj, set, clear) {\n  this._obj = obj || {};\n  this._set = set;\n  this._clear = clear;\n\n  this.length = 0;\n}\n\nvar proto = Storage.prototype;\n\n// html5 storage api\n\nproto.setItem = function(k, v) {\n  k = encodeURIComponent(k);\n  this._obj[k] = v;\n\n  this._updateLength();\n  if (this._set) this._set(this._obj);\n};\n\nproto.getItem = function(k) {\n  k = encodeURIComponent(k);\n  return this._obj[k] === undefined ? null : this._obj[k];\n};\n\nproto.removeItem = function(k) {\n  k = encodeURIComponent(k);\n  delete this._obj[k];\n\n  this._updateLength();\n  if (this._set) this._set(this._obj);\n};\n\nproto.key = function(i) {\n  var ctr = 0;\n  for (var k in this._obj) {\n    if (ctr === i) return decodeURIComponent(k);\n    else ctr++;\n  }\n\n  return null;\n};\n\nproto.clear = function() {\n  delete this['_obj'];\n\n  if (this._clear) this._clear();\n};\n\n// private\nproto._updateLength = function() {\n  this.length = numKeys(this._obj);\n};\n\nmodule.exports = Storage;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(obj) {\n  var n = 0;\n  for (var k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      n += 1;\n    }\n  }\n\n  return n;\n};\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\nfunction createCookie(name, value, days) {\n  var date, expires;\n\n  if (days) {\n    date = new Date();\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    expires = '; expires=' + date.toGMTString();\n  } else {\n    expires = '';\n  }\n  document.cookie = name + '=' + value + expires + '; path=/';\n}\n\nfunction readCookie(name) {\n  var nameEQ = name + '=',\n    ca = document.cookie.split(';'),\n    i,\n    c;\n\n  for (i = 0; i < ca.length; i++) {\n    c = ca[i];\n    while (c.charAt(0) === ' ') {\n      c = c.substring(1, c.length);\n    }\n\n    if (c.indexOf(nameEQ) === 0) {\n      return c.substring(nameEQ.length, c.length);\n    }\n  }\n  return null;\n}\n\nmodule.exports = {\n  create: createCookie,\n  read: readCookie\n};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * typeahead.js\n * https://github.com/twitter/typeahead.js\n * Copyright 2013-2014 Twitter, Inc. and other contributors; Licensed MIT\n */\n\nvar _ = __webpack_require__(0);\n\nfunction whitespace(str) {\n  str = _.toStr(str);\n  return str ? str.split(/\\s+/) : [];\n}\n\nfunction nonword(str) {\n  str = _.toStr(str);\n  return str ? str.split(/\\W+/) : [];\n}\n\nfunction getObjTokenizer(tokenizer) {\n  return function setKey(keys) {\n    keys = _.isArray(keys) ? keys : [].slice.call(arguments, 0);\n\n    return function tokenize(o) {\n      var tokens = [];\n\n      _.each(keys, function (k) {\n        tokens = tokens.concat(tokenizer(_.toStr(o[k])));\n      });\n\n      return tokens;\n    };\n  };\n}\n\nmodule.exports = {\n  nonword: nonword,\n  whitespace: whitespace,\n  obj: {\n    nonword: getObjTokenizer(nonword),\n    whitespace: getObjTokenizer(whitespace)\n  }\n};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0);\nvar ajax = __webpack_require__(20);\nvar VERSION = __webpack_require__(26);\n\nmodule.exports = function (o) {\n  var defaults, sorter;\n\n  defaults = {\n    initialize: true,\n    identify: _.stringify,\n    datumTokenizer: null,\n    queryTokenizer: null,\n    sufficient: 5,\n    sorter: null,\n    local: [],\n    prefetch: null,\n    remote: null\n  };\n\n  o = _.mixin(defaults, o || {});\n\n  // throw error if required options are not set\n  !o.datumTokenizer && _.error('datumTokenizer is required');\n  !o.queryTokenizer && _.error('queryTokenizer is required');\n\n  sorter = o.sorter;\n  o.sorter = sorter ? function (x) {\n    return x.sort(sorter);\n  } : _.identity;\n\n  o.local = _.isFunction(o.local) ? o.local() : o.local;\n  o.prefetch = parsePrefetch(o.prefetch);\n  o.remote = parseRemote(o.remote);\n\n  return o;\n};\n\nfunction parsePrefetch(o) {\n  var defaults;\n\n  if (!o) {\n    return null;\n  }\n\n  defaults = {\n    url: null,\n    ttl: 24 * 60 * 60 * 1000, // 1 day\n    cache: true,\n    cacheKey: null,\n    thumbprint: '',\n    prepare: _.identity,\n    transform: _.identity,\n    transport: null\n  };\n\n  // support basic (url) and advanced configuration\n  o = _.isString(o) ? { url: o } : o;\n  o = _.mixin(defaults, o);\n\n  // throw error if required options are not set\n  !o.url && _.error('prefetch requires url to be set');\n\n  // DEPRECATED: filter will be dropped in v1\n  o.transform = o.filter || o.transform;\n\n  o.cacheKey = o.cacheKey || o.url;\n  o.thumbprint = VERSION + o.thumbprint;\n  o.transport = o.transport ? callbackToDeferred(o.transport) : ajax;\n\n  return o;\n}\n\nfunction parseRemote(o) {\n  var defaults;\n\n  if (!o) {\n    return;\n  }\n\n  defaults = {\n    url: null,\n    cache: true, // leave undocumented\n    prepare: null,\n    replace: null,\n    wildcard: null,\n    limiter: null,\n    rateLimitBy: 'debounce',\n    rateLimitWait: 300,\n    transform: _.identity,\n    transport: null\n  };\n\n  // support basic (url) and advanced configuration\n  o = _.isString(o) ? { url: o } : o;\n  o = _.mixin(defaults, o);\n\n  // throw error if required options are not set\n  !o.url && _.error('remote requires url to be set');\n\n  // DEPRECATED: filter will be dropped in v1\n  o.transform = o.filter || o.transform;\n\n  o.prepare = toRemotePrepare(o);\n  o.limiter = toLimiter(o);\n  o.transport = o.transport ? callbackToDeferred(o.transport) : ajax;\n\n  delete o.replace;\n  delete o.wildcard;\n  delete o.rateLimitBy;\n  delete o.rateLimitWait;\n\n  return o;\n}\n\nfunction toRemotePrepare(o) {\n  var prepare, replace, wildcard;\n\n  prepare = o.prepare;\n  replace = o.replace;\n  wildcard = o.wildcard;\n\n  if (prepare) {\n    return prepare;\n  }\n\n  if (replace) {\n    prepare = prepareByReplace;\n  } else if (o.wildcard) {\n    prepare = prepareByWildcard;\n  } else {\n    prepare = idenityPrepare;\n  }\n\n  return prepare;\n\n  function prepareByReplace(query, settings) {\n    settings.url = replace(settings.url, query);\n    return settings;\n  }\n\n  function prepareByWildcard(query, settings) {\n    settings.url = settings.url.replace(wildcard, encodeURIComponent(query));\n    return settings;\n  }\n\n  function idenityPrepare(query, settings) {\n    return settings;\n  }\n}\n\nfunction toLimiter(o) {\n  var limiter, method, wait;\n\n  limiter = o.limiter;\n  method = o.rateLimitBy;\n  wait = o.rateLimitWait;\n\n  if (!limiter) {\n    limiter = /^throttle$/i.test(method) ? throttle(wait) : debounce(wait);\n  }\n\n  return limiter;\n\n  function debounce(wait) {\n    return function (fn) {\n      return _.debounce(fn, wait);\n    };\n  }\n\n  function throttle(wait) {\n    return function (fn) {\n      return _.throttle(fn, wait);\n    };\n  }\n}\n\nfunction callbackToDeferred(fn) {\n  return function (o) {\n    // var deferred = $.Deferred();\n\n    // fn(o, onSuccess, onError);\n\n    // return deferred;\n\n    // function onSuccess(resp) {\n    //   // defer in case fn is synchronous, otherwise done\n    //   // and always handlers will be attached after the resolution\n    //   _.defer(function() { deferred.resolve(resp); });\n    // }\n\n    // function onError(err) {\n    //   // defer in case fn is synchronous, otherwise done\n    //   // and always handlers will be attached after the resolution\n    //   _.defer(function() { deferred.reject(err); });\n    // }\n  };\n}\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Promise = __webpack_require__(2).Promise;\nvar request = __webpack_require__(21);\n\nmodule.exports = function (o) {\n  return new Promise(function (resolve, reject) {\n    request.get(o.url).end(function (err, res) {\n      if (err) return reject(err);\n      resolve(res.body);\n    });\n  });\n};\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Module dependencies.\n */\n\nvar Emitter = __webpack_require__(22);\nvar reduce = __webpack_require__(23);\nvar requestBase = __webpack_require__(24);\nvar isObject = __webpack_require__(4);\n\n/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  root = this;\n}\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * TODO: future proof, move to compoent land\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isHost(obj) {\n  var str = {}.toString.call(obj);\n\n  switch (str) {\n    case '[object File]':\n    case '[object Blob]':\n    case '[object FormData]':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Expose `request`.\n */\n\nvar request = module.exports = __webpack_require__(25).bind(null, Request);\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  return false;\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    if (null != obj[key]) {\n      pushEncodedKeyValuePair(pairs, key, obj[key]);\n        }\n      }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (Array.isArray(val)) {\n    return val.forEach(function(v) {\n      pushEncodedKeyValuePair(pairs, key, v);\n    });\n  }\n  pairs.push(encodeURIComponent(key)\n    + '=' + encodeURIComponent(val));\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var parts;\n  var pair;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    parts = pair.split('=');\n    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction type(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction params(str){\n  return reduce(str.split(/ *; */), function(obj, str){\n    var parts = str.split(/ *= */)\n      , key = parts.shift()\n      , val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req, options) {\n  options = options || {};\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  this.setStatusProperties(this.xhr.status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this.setHeaderProperties(this.header);\n  this.body = this.req.method != 'HEAD'\n    ? this.parseBody(this.text ? this.text : this.xhr.response)\n    : null;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponse.prototype.get = function(field){\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponse.prototype.setHeaderProperties = function(header){\n  // content-type\n  var ct = this.header['content-type'] || '';\n  this.type = type(ct);\n\n  // params\n  var obj = params(ct);\n  for (var key in obj) this[key] = obj[key];\n};\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype.parseBody = function(str){\n  var parse = request.parse[this.type];\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponse.prototype.setStatusProperties = function(status){\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  var type = status / 100 | 0;\n\n  // status / class\n  this.status = this.statusCode = status;\n  this.statusType = type;\n\n  // basics\n  this.info = 1 == type;\n  this.ok = 2 == type;\n  this.clientError = 4 == type;\n  this.serverError = 5 == type;\n  this.error = (4 == type || 5 == type)\n    ? this.toError()\n    : false;\n\n  // sugar\n  this.accepted = 202 == status;\n  this.noContent = 204 == status;\n  this.badRequest = 400 == status;\n  this.unauthorized = 401 == status;\n  this.notAcceptable = 406 == status;\n  this.notFound = 404 == status;\n  this.forbidden = 403 == status;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;\n      // issue #876: return the http status code if the response parsing fails\n      err.statusCode = self.xhr && self.xhr.status ? self.xhr.status : null;\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    if (err) {\n      return self.callback(err, res);\n    }\n\n    if (res.status >= 200 && res.status < 300) {\n      return self.callback(err, res);\n    }\n\n    var new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n    new_err.original = err;\n    new_err.response = res;\n    new_err.status = res.status;\n\n    self.callback(new_err, res);\n  });\n}\n\n/**\n * Mixin `Emitter` and `requestBase`.\n */\n\nEmitter(Request.prototype);\nfor (var key in requestBase) {\n  Request.prototype[key] = requestBase[key];\n}\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  if (this.aborted) return;\n  this.aborted = true;\n  this.xhr && this.xhr.abort();\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set responseType to `val`. Presently valid responseTypes are 'blob' and \n * 'arraybuffer'.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @param {Object} options with 'type' property 'auto' or 'basic' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (!options) {\n    options = {\n      type: 'basic'\n    }\n  }\n\n  switch (options.type) {\n    case 'basic':\n      var str = btoa(user + ':' + pass);\n      this.set('Authorization', 'Basic ' + str);\n    break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n    break;\n  }\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `filename`.\n *\n * ``` js\n * request.post('/upload')\n *   .attach(new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String} filename\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, filename){\n  this._getFormData().append(field, file, filename || file.name);\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n  *      request.post('/user')\n  *        .send('name=tobi')\n  *        .send('species=ferret')\n  *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.send = function(data){\n  var obj = isObject(data);\n  var type = this._header['content-type'];\n\n  // merge\n  if (obj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!obj || isHost(data)) return this;\n  if (!type) this.type('json');\n  return this;\n};\n\n/**\n * @deprecated\n */\nResponse.prototype.parse = function serialize(fn){\n  if (root.console) {\n    console.warn(\"Client-side parse() method has been renamed to serialize(). This method is not compatible with superagent v2.0\");\n  }\n  this.serialize(fn);\n  return this;\n};\n\nResponse.prototype.serialize = function serialize(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  this.clearTimeout();\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequest.prototype.timeoutError = function(){\n  var timeout = this._timeout;\n  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  this.callback(err);\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequest.prototype.withCredentials = function(){\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var query = this._query.join('&');\n  var timeout = this._timeout;\n  var data = this._formData || this._data;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    if (4 != xhr.readyState) return;\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (0 == status) {\n      if (self.timedout) return self.timeoutError();\n      if (self.aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(e){\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = 'download';\n    self.emit('progress', e);\n  };\n  if (this.hasListeners('progress')) {\n    xhr.onprogress = handleProgress;\n  }\n  try {\n    if (xhr.upload && this.hasListeners('progress')) {\n      xhr.upload.onprogress = handleProgress;\n    }\n  } catch(e) {\n    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n    // Reported here:\n    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n  }\n\n  // timeout\n  if (timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self.timedout = true;\n      self.abort();\n    }, timeout);\n  }\n\n  // querystring\n  if (query) {\n    query = request.serializeObject(query);\n    this.url += ~this.url.indexOf('?')\n      ? '&' + query\n      : '?' + query;\n  }\n\n  // initiate request\n  if (this.username && this.password) {\n    xhr.open(this.method, this.url, true, this.username, this.password);\n  } else {\n    xhr.open(this.method, this.url, true);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._parser || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) serialize = request.serialize['application/json'];\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n\n/**\n * Expose `Request`.\n */\n\nrequest.Request = Request;\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nfunction del(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (true) {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\n\n/**\n * Reduce `arr` with `fn`.\n *\n * @param {Array} arr\n * @param {Function} fn\n * @param {Mixed} initial\n *\n * TODO: combatible error handling?\n */\n\nmodule.exports = function(arr, fn, initial){  \n  var idx = 0;\n  var len = arr.length;\n  var curr = arguments.length == 3\n    ? initial\n    : arr[idx++];\n\n  while (idx < len) {\n    curr = fn.call(null, curr, arr[idx], ++idx, arr);\n  }\n  \n  return curr;\n};\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = __webpack_require__(4);\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nexports.clearTimeout = function _clearTimeout(){\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n\n/**\n * Force given parser\n *\n * Sets the body parser no matter type.\n *\n * @param {Function}\n * @api public\n */\n\nexports.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\nexports.timeout = function timeout(ms){\n  this._timeout = ms;\n  return this;\n};\n\n/**\n * Faux promise support\n *\n * @param {Function} fulfill\n * @param {Function} reject\n * @return {Request}\n */\n\nexports.then = function then(fulfill, reject) {\n  return this.end(function(err, res) {\n    err ? reject(err) : fulfill(res);\n  });\n}\n\n/**\n * Allow for extension\n */\n\nexports.use = function use(fn) {\n  fn(this);\n  return this;\n}\n\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nexports.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nexports.getHeader = exports.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nexports.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nexports.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val` for \"multipart/form-data\"\n * request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n * ```\n *\n * @param {String} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nexports.field = function(name, val) {\n  this._getFormData().append(name, val);\n  return this;\n};\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\n// The node and browser modules expose versions of this with the\n// appropriate constructor function bound as first argument\n/**\n * Issue a request:\n *\n * Examples:\n *\n *    request('GET', '/users').end(callback)\n *    request('/users').end(callback)\n *    request('/users', callback)\n *\n * @param {String} method\n * @param {String|Function} url or callback\n * @return {Request}\n * @api public\n */\n\nfunction request(RequestConstructor, method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new RequestConstructor('GET', method).end(url);\n  }\n\n  // url first\n  if (2 == arguments.length) {\n    return new RequestConstructor('GET', method);\n  }\n\n  return new RequestConstructor(method, url);\n}\n\nmodule.exports = request;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\n/*\n * typeahead.js\n * https://github.com/twitter/typeahead.js\n * Copyright 2013-2014 Twitter, Inc. and other contributors; Licensed MIT\n */\n\nmodule.exports = '1.0.0';\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0);\nvar Immutable = __webpack_require__(28);\n\nvar CHILDREN = 'c';\nvar IDS = 'i';\n\nfunction SearchIndex(o) {\n  o = o || {};\n\n  if (!o.datumTokenizer || !o.queryTokenizer) {\n    throw new Error('datumTokenizer and queryTokenizer are both required');\n  }\n\n  this.identify = o.identify || _.stringify;\n  this.datumTokenizer = o.datumTokenizer;\n  this.queryTokenizer = o.queryTokenizer;\n\n  this.reset();\n}\n\n_.mixin(SearchIndex.prototype, {\n\n  bootstrap: function (o) {\n    this.datums = o.datums;\n    this.trie = o.trie;\n  },\n\n  add: function (data) {\n    var that = this;\n\n    data = Immutable.List.isList(data) ? data : [data];\n\n    data.forEach(function (datum) {\n      var id, tokens;\n\n      that.datums[id = that.identify(datum)] = datum;\n      tokens = normalizeTokens(that.datumTokenizer(datum));\n\n      _.each(tokens, function (token) {\n        var node, chars, ch;\n\n        node = that.trie;\n        chars = token.split('');\n\n        while (ch = chars.shift()) {\n          node = node[CHILDREN][ch] || (node[CHILDREN][ch] = newNode());\n          node[IDS].push(id);\n        }\n      });\n    });\n  },\n\n  remove: function (data) {\n    var that = this;\n\n    data = Immutable.List.isList(data) ? data : [data];\n\n    data.forEach(function (datum) {\n      var tokens = normalizeTokens(that.datumTokenizer(datum));\n      var id = that.identify(datum);\n\n      _.each(tokens, function (token) {\n        var node, chars, ch, parent;\n\n        node = that.trie;\n        lastNode = null;\n        chars = token.split('');\n\n        while (ch = chars.shift()) {\n          node = node[CHILDREN][ch];\n\n          if (node) {\n            node[IDS] = _.filter(node[IDS], function (item) {\n              return item !== id;\n            });\n\n            if (node[IDS] && node[IDS].length === 0) {\n              lastNode[CHILDREN][ch] = undefined;\n              break;\n            }\n          }\n\n          lastNode = node;\n        }\n      });\n\n      delete that.datums[id];\n    });\n  },\n\n  get: function (ids) {\n    var that = this;\n\n    return _.map(ids, function (id) {\n      return that.datums[id];\n    });\n  },\n\n  search: function (query) {\n    var that = this,\n        tokens,\n        matches;\n\n    tokens = normalizeTokens(this.queryTokenizer(query));\n\n    _.each(tokens, function (token) {\n      var node, chars, ch, ids;\n\n      // previous tokens didn't share any matches\n      if (matches && matches.length === 0) {\n        return false;\n      }\n\n      node = that.trie;\n      chars = token.split('');\n\n      while (node && (ch = chars.shift())) {\n        node = node[CHILDREN][ch];\n      }\n\n      if (node && chars.length === 0) {\n        ids = node[IDS].slice(0);\n        matches = matches ? getIntersection(matches, ids) : ids;\n      }\n\n      // break early if we find out there are no possible matches\n      else {\n          matches = [];\n          return false;\n        }\n    });\n\n    return matches ? _.map(unique(matches), function (id) {\n      return that.datums[id];\n    }) : [];\n  },\n\n  all: function () {\n    var values = [];\n\n    for (var key in this.datums) {\n      values.push(this.datums[key]);\n    }\n\n    return values;\n  },\n\n  reset: function () {\n    this.datums = {};\n    this.trie = newNode();\n  },\n\n  serialize: function serialize() {\n    return { datums: this.datums, trie: this.trie };\n  }\n});\n\nfunction normalizeTokens(tokens) {\n  // filter out falsy tokens\n  tokens = _.filter(tokens, function (token) {\n    return !!token;\n  });\n\n  // normalize tokens\n  tokens = _.map(tokens, function (token) {\n    return token.toLowerCase();\n  });\n\n  return tokens;\n}\n\nfunction newNode() {\n  var node = {};\n\n  node[IDS] = [];\n  node[CHILDREN] = {};\n\n  return node;\n}\n\nfunction unique(array) {\n  var seen = {},\n      uniques = [];\n\n  for (var i = 0, len = array.length; i < len; i++) {\n    if (!seen[array[i]]) {\n      seen[array[i]] = true;\n      uniques.push(array[i]);\n    }\n  }\n\n  return uniques;\n}\n\nfunction getIntersection(arrayA, arrayB) {\n  var ai = 0,\n      bi = 0,\n      intersection = [];\n\n  arrayA = arrayA.sort();\n  arrayB = arrayB.sort();\n\n  var lenArrayA = arrayA.length,\n      lenArrayB = arrayB.length;\n\n  while (ai < lenArrayA && bi < lenArrayB) {\n    if (arrayA[ai] < arrayB[bi]) {\n      ai++;\n    } else if (arrayA[ai] > arrayB[bi]) {\n      bi++;\n    } else {\n      intersection.push(arrayA[ai]);\n      ai++;\n      bi++;\n    }\n  }\n\n  return intersection;\n}\n\nmodule.exports = SearchIndex;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n *  Copyright (c) 2014-2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n(function (global, factory) {\n   true ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Immutable = factory());\n}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n\n  function Iterable(value) {\n      return isIterable(value) ? value : Seq(value);\n    }\n\n\n  createClass(KeyedIterable, Iterable);\n    function KeyedIterable(value) {\n      return isKeyed(value) ? value : KeyedSeq(value);\n    }\n\n\n  createClass(IndexedIterable, Iterable);\n    function IndexedIterable(value) {\n      return isIndexed(value) ? value : IndexedSeq(value);\n    }\n\n\n  createClass(SetIterable, Iterable);\n    function SetIterable(value) {\n      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n    }\n\n\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = { value: false };\n  var DID_ALTER = { value: false };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32−1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n      index = uint32Index;\n    }\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || (size !== undefined && begin <= -size)) &&\n      (end === undefined || (size !== undefined && end >= size));\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ?\n      defaultIndex :\n      index < 0 ?\n        Math.max(0, size + index) :\n        size === undefined ?\n          index :\n          Math.min(size, index);\n  }\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n\n  function Iterator(next) {\n      this.next = next;\n    }\n\n    Iterator.prototype.toString = function() {\n      return '[Iterator]';\n    };\n\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect =\n  Iterator.prototype.toSource = function () { return this.toString(); }\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n      value: value, done: false\n    });\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return { value: undefined, done: true };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (\n      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]\n    );\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n    function Seq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        isIterable(value) ? value.toSeq() : seqFromValue(value);\n    }\n\n    Seq.of = function(/*...values*/) {\n      return Seq(arguments);\n    };\n\n    Seq.prototype.toSeq = function() {\n      return this;\n    };\n\n    Seq.prototype.toString = function() {\n      return this.__toString('Seq {', '}');\n    };\n\n    Seq.prototype.cacheResult = function() {\n      if (!this._cache && this.__iterateUncached) {\n        this._cache = this.entrySeq().toArray();\n        this.size = this._cache.length;\n      }\n      return this;\n    };\n\n    // abstract __iterateUncached(fn, reverse)\n\n    Seq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, true);\n    };\n\n    // abstract __iteratorUncached(type, reverse)\n\n    Seq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, true);\n    };\n\n\n\n  createClass(KeyedSeq, Seq);\n    function KeyedSeq(value) {\n      return value === null || value === undefined ?\n        emptySequence().toKeyedSeq() :\n        isIterable(value) ?\n          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :\n          keyedSeqFromValue(value);\n    }\n\n    KeyedSeq.prototype.toKeyedSeq = function() {\n      return this;\n    };\n\n\n\n  createClass(IndexedSeq, Seq);\n    function IndexedSeq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n    }\n\n    IndexedSeq.of = function(/*...values*/) {\n      return IndexedSeq(arguments);\n    };\n\n    IndexedSeq.prototype.toIndexedSeq = function() {\n      return this;\n    };\n\n    IndexedSeq.prototype.toString = function() {\n      return this.__toString('Seq [', ']');\n    };\n\n    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, false);\n    };\n\n    IndexedSeq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, false);\n    };\n\n\n\n  createClass(SetSeq, Seq);\n    function SetSeq(value) {\n      return (\n        value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value\n      ).toSetSeq();\n    }\n\n    SetSeq.of = function(/*...values*/) {\n      return SetSeq(arguments);\n    };\n\n    SetSeq.prototype.toSetSeq = function() {\n      return this;\n    };\n\n\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\n\n\n  createClass(ArraySeq, IndexedSeq);\n    function ArraySeq(array) {\n      this._array = array;\n      this.size = array.length;\n    }\n\n    ArraySeq.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n    };\n\n    ArraySeq.prototype.__iterate = function(fn, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ArraySeq.prototype.__iterator = function(type, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}\n      );\n    };\n\n\n\n  createClass(ObjectSeq, KeyedSeq);\n    function ObjectSeq(object) {\n      var keys = Object.keys(object);\n      this._object = object;\n      this._keys = keys;\n      this.size = keys.length;\n    }\n\n    ObjectSeq.prototype.get = function(key, notSetValue) {\n      if (notSetValue !== undefined && !this.has(key)) {\n        return notSetValue;\n      }\n      return this._object[key];\n    };\n\n    ObjectSeq.prototype.has = function(key) {\n      return this._object.hasOwnProperty(key);\n    };\n\n    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        if (fn(object[key], key, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ObjectSeq.prototype.__iterator = function(type, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, key, object[key]);\n      });\n    };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(IterableSeq, IndexedSeq);\n    function IterableSeq(iterable) {\n      this._iterable = iterable;\n      this.size = iterable.length || iterable.size;\n    }\n\n    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      var iterations = 0;\n      if (isIterator(iterator)) {\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (fn(step.value, iterations++, this) === false) {\n            break;\n          }\n        }\n      }\n      return iterations;\n    };\n\n    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      if (!isIterator(iterator)) {\n        return new Iterator(iteratorDone);\n      }\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step : iteratorValue(type, iterations++, step.value);\n      });\n    };\n\n\n\n  createClass(IteratorSeq, IndexedSeq);\n    function IteratorSeq(iterator) {\n      this._iterator = iterator;\n      this._iteratorCache = [];\n    }\n\n    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      while (iterations < cache.length) {\n        if (fn(cache[iterations], iterations++, this) === false) {\n          return iterations;\n        }\n      }\n      var step;\n      while (!(step = iterator.next()).done) {\n        var val = step.value;\n        cache[iterations] = val;\n        if (fn(val, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n\n    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      return new Iterator(function()  {\n        if (iterations >= cache.length) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          cache[iterations] = step.value;\n        }\n        return iteratorValue(type, iterations, cache[iterations++]);\n      });\n    };\n\n\n\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq =\n      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :\n      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :\n      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :\n      typeof value === 'object' ? new ObjectSeq(value) :\n      undefined;\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of [k, v] entries, '+\n        'or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) ||\n      (typeof value === 'object' && new ObjectSeq(value));\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values, or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return (\n      isArrayLike(value) ? new ArraySeq(value) :\n      isIterator(value) ? new IteratorSeq(value) :\n      hasIterator(value) ? new IterableSeq(value) :\n      undefined\n    );\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  function fromJS(json, converter) {\n    return converter ?\n      fromJSWith(converter, json, '', {'': json}) :\n      fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' &&\n        typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n        return true;\n      }\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n    if (typeof valueA.equals === 'function' &&\n        typeof valueB.equals === 'function' &&\n        valueA.equals(valueB)) {\n      return true;\n    }\n    return false;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (\n      !isIterable(b) ||\n      a.size !== undefined && b.size !== undefined && a.size !== b.size ||\n      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||\n      isKeyed(a) !== isKeyed(b) ||\n      isIndexed(a) !== isIndexed(b) ||\n      isOrdered(a) !== isOrdered(b)\n    ) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function(v, k)  {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n    var bSize = b.__iterate(function(v, k)  {\n      if (notAssociative ? !a.has(v) :\n          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Repeat, IndexedSeq);\n\n    function Repeat(value, times) {\n      if (!(this instanceof Repeat)) {\n        return new Repeat(value, times);\n      }\n      this._value = value;\n      this.size = times === undefined ? Infinity : Math.max(0, times);\n      if (this.size === 0) {\n        if (EMPTY_REPEAT) {\n          return EMPTY_REPEAT;\n        }\n        EMPTY_REPEAT = this;\n      }\n    }\n\n    Repeat.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Repeat []';\n      }\n      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n    };\n\n    Repeat.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._value : notSetValue;\n    };\n\n    Repeat.prototype.includes = function(searchValue) {\n      return is(this._value, searchValue);\n    };\n\n    Repeat.prototype.slice = function(begin, end) {\n      var size = this.size;\n      return wholeSlice(begin, end, size) ? this :\n        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n    };\n\n    Repeat.prototype.reverse = function() {\n      return this;\n    };\n\n    Repeat.prototype.indexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return 0;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.lastIndexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return this.size;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.__iterate = function(fn, reverse) {\n      for (var ii = 0; ii < this.size; ii++) {\n        if (fn(this._value, ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}\n      );\n    };\n\n    Repeat.prototype.equals = function(other) {\n      return other instanceof Repeat ?\n        is(this._value, other._value) :\n        deepEqual(other);\n    };\n\n\n  var EMPTY_REPEAT;\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  createClass(Range, IndexedSeq);\n\n    function Range(start, end, step) {\n      if (!(this instanceof Range)) {\n        return new Range(start, end, step);\n      }\n      invariant(step !== 0, 'Cannot step a Range by 0');\n      start = start || 0;\n      if (end === undefined) {\n        end = Infinity;\n      }\n      step = step === undefined ? 1 : Math.abs(step);\n      if (end < start) {\n        step = -step;\n      }\n      this._start = start;\n      this._end = end;\n      this._step = step;\n      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n      if (this.size === 0) {\n        if (EMPTY_RANGE) {\n          return EMPTY_RANGE;\n        }\n        EMPTY_RANGE = this;\n      }\n    }\n\n    Range.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Range []';\n      }\n      return 'Range [ ' +\n        this._start + '...' + this._end +\n        (this._step !== 1 ? ' by ' + this._step : '') +\n      ' ]';\n    };\n\n    Range.prototype.get = function(index, notSetValue) {\n      return this.has(index) ?\n        this._start + wrapIndex(this, index) * this._step :\n        notSetValue;\n    };\n\n    Range.prototype.includes = function(searchValue) {\n      var possibleIndex = (searchValue - this._start) / this._step;\n      return possibleIndex >= 0 &&\n        possibleIndex < this.size &&\n        possibleIndex === Math.floor(possibleIndex);\n    };\n\n    Range.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      begin = resolveBegin(begin, this.size);\n      end = resolveEnd(end, this.size);\n      if (end <= begin) {\n        return new Range(0, 0);\n      }\n      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n    };\n\n    Range.prototype.indexOf = function(searchValue) {\n      var offsetValue = searchValue - this._start;\n      if (offsetValue % this._step === 0) {\n        var index = offsetValue / this._step;\n        if (index >= 0 && index < this.size) {\n          return index\n        }\n      }\n      return -1;\n    };\n\n    Range.prototype.lastIndexOf = function(searchValue) {\n      return this.indexOf(searchValue);\n    };\n\n    Range.prototype.__iterate = function(fn, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(value, ii, this) === false) {\n          return ii + 1;\n        }\n        value += reverse ? -step : step;\n      }\n      return ii;\n    };\n\n    Range.prototype.__iterator = function(type, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      var ii = 0;\n      return new Iterator(function()  {\n        var v = value;\n        value += reverse ? -step : step;\n        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n      });\n    };\n\n    Range.prototype.equals = function(other) {\n      return other instanceof Range ?\n        this._start === other._start &&\n        this._end === other._end &&\n        this._step === other._step :\n        deepEqual(this, other);\n    };\n\n\n  var EMPTY_RANGE;\n\n  createClass(Collection, Iterable);\n    function Collection() {\n      throw TypeError('Abstract');\n    }\n\n\n  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);function SetCollection() {}\n\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n\n  var imul =\n    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?\n    Math.imul :\n    function imul(a, b) {\n      a = a | 0; // int\n      b = b | 0; // int\n      var c = a & 0xffff;\n      var d = b & 0xffff;\n      // Shift by 0 fixes the sign on the high part.\n      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n    };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o;\n    if (type === 'number') {\n      if (o !== o || o === Infinity) {\n        return 0;\n      }\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash;\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = obj[UID_HASH_KEY];\n    if (hash !== undefined) {\n      return hash;\n    }\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash !== undefined) {\n        return hash;\n      }\n\n      hash = getIENodeHash(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined &&\n               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function() {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  }\n\n  // Get references to ES5 object methods.\n  var isExtensible = Object.isExtensible;\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = (function() {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }());\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1: // Element\n          return node.uniqueID;\n        case 9: // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n\n  var objHashUID = 0;\n\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function assertNotInfinite(size) {\n    invariant(\n      size !== Infinity,\n      'Cannot perform this action with an infinite size.'\n    );\n  }\n\n  createClass(Map, KeyedCollection);\n\n    // @pragma Construction\n\n    function Map(value) {\n      return value === null || value === undefined ? emptyMap() :\n        isMap(value) && !isOrdered(value) ? value :\n        emptyMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);\n      return emptyMap().withMutations(function(map ) {\n        for (var i = 0; i < keyValues.length; i += 2) {\n          if (i + 1 >= keyValues.length) {\n            throw new Error('Missing value for key: ' + keyValues[i]);\n          }\n          map.set(keyValues[i], keyValues[i + 1]);\n        }\n      });\n    };\n\n    Map.prototype.toString = function() {\n      return this.__toString('Map {', '}');\n    };\n\n    // @pragma Access\n\n    Map.prototype.get = function(k, notSetValue) {\n      return this._root ?\n        this._root.get(0, undefined, k, notSetValue) :\n        notSetValue;\n    };\n\n    // @pragma Modification\n\n    Map.prototype.set = function(k, v) {\n      return updateMap(this, k, v);\n    };\n\n    Map.prototype.setIn = function(keyPath, v) {\n      return this.updateIn(keyPath, NOT_SET, function()  {return v});\n    };\n\n    Map.prototype.remove = function(k) {\n      return updateMap(this, k, NOT_SET);\n    };\n\n    Map.prototype.deleteIn = function(keyPath) {\n      return this.updateIn(keyPath, function()  {return NOT_SET});\n    };\n\n    Map.prototype.update = function(k, notSetValue, updater) {\n      return arguments.length === 1 ?\n        k(this) :\n        this.updateIn([k], notSetValue, updater);\n    };\n\n    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n      if (!updater) {\n        updater = notSetValue;\n        notSetValue = undefined;\n      }\n      var updatedValue = updateInDeepMap(\n        this,\n        forceIterator(keyPath),\n        notSetValue,\n        updater\n      );\n      return updatedValue === NOT_SET ? undefined : updatedValue;\n    };\n\n    Map.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._root = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyMap();\n    };\n\n    // @pragma Composition\n\n    Map.prototype.merge = function(/*...iters*/) {\n      return mergeIntoMapWith(this, undefined, arguments);\n    };\n\n    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, merger, iters);\n    };\n\n    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.merge === 'function' ?\n          m.merge.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoMapWith(this, deepMerger, arguments);\n    };\n\n    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n    };\n\n    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.mergeDeep === 'function' ?\n          m.mergeDeep.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator));\n    };\n\n    Map.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator, mapper));\n    };\n\n    // @pragma Mutability\n\n    Map.prototype.withMutations = function(fn) {\n      var mutable = this.asMutable();\n      fn(mutable);\n      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n    };\n\n    Map.prototype.asMutable = function() {\n      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n    };\n\n    Map.prototype.asImmutable = function() {\n      return this.__ensureOwner();\n    };\n\n    Map.prototype.wasAltered = function() {\n      return this.__altered;\n    };\n\n    Map.prototype.__iterator = function(type, reverse) {\n      return new MapIterator(this, type, reverse);\n    };\n\n    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      this._root && this._root.iterate(function(entry ) {\n        iterations++;\n        return fn(entry[1], entry[0], this$0);\n      }, reverse);\n      return iterations;\n    };\n\n    Map.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeMap(this.size, this._root, ownerID, this.__hash);\n    };\n\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n\n  // #pragma Trie Nodes\n\n\n\n    function ArrayMapNode(ownerID, entries) {\n      this.ownerID = ownerID;\n      this.entries = entries;\n    }\n\n    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && entries.length === 1) {\n        return; // undefined\n      }\n\n      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n        return createNodes(ownerID, entries, key, value);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new ArrayMapNode(ownerID, newEntries);\n    };\n\n\n\n\n    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n      this.ownerID = ownerID;\n      this.bitmap = bitmap;\n      this.nodes = nodes;\n    }\n\n    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n      var bitmap = this.bitmap;\n      return (bitmap & bit) === 0 ? notSetValue :\n        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n    };\n\n    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var bit = 1 << keyHashFrag;\n      var bitmap = this.bitmap;\n      var exists = (bitmap & bit) !== 0;\n\n      if (!exists && value === NOT_SET) {\n        return this;\n      }\n\n      var idx = popCount(bitmap & (bit - 1));\n      var nodes = this.nodes;\n      var node = exists ? nodes[idx] : undefined;\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n      if (newNode === node) {\n        return this;\n      }\n\n      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n      }\n\n      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n        return nodes[idx ^ 1];\n      }\n\n      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n        return newNode;\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n      var newNodes = exists ? newNode ?\n        setIn(nodes, idx, newNode, isEditable) :\n        spliceOut(nodes, idx, isEditable) :\n        spliceIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.bitmap = newBitmap;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n    };\n\n\n\n\n    function HashArrayMapNode(ownerID, count, nodes) {\n      this.ownerID = ownerID;\n      this.count = count;\n      this.nodes = nodes;\n    }\n\n    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var node = this.nodes[idx];\n      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n    };\n\n    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var removed = value === NOT_SET;\n      var nodes = this.nodes;\n      var node = nodes[idx];\n\n      if (removed && !node) {\n        return this;\n      }\n\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n      if (newNode === node) {\n        return this;\n      }\n\n      var newCount = this.count;\n      if (!node) {\n        newCount++;\n      } else if (!newNode) {\n        newCount--;\n        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n          return packNodes(ownerID, nodes, newCount, idx);\n        }\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.count = newCount;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new HashArrayMapNode(ownerID, newCount, newNodes);\n    };\n\n\n\n\n    function HashCollisionNode(ownerID, keyHash, entries) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entries = entries;\n    }\n\n    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n\n      var removed = value === NOT_SET;\n\n      if (keyHash !== this.keyHash) {\n        if (removed) {\n          return this;\n        }\n        SetRef(didAlter);\n        SetRef(didChangeSize);\n        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n      }\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && len === 2) {\n        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n    };\n\n\n\n\n    function ValueNode(ownerID, keyHash, entry) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entry = entry;\n    }\n\n    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n    };\n\n    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n      var keyMatch = is(key, this.entry[0]);\n      if (keyMatch ? value === this.entry[1] : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n\n      if (removed) {\n        SetRef(didChangeSize);\n        return; // undefined\n      }\n\n      if (keyMatch) {\n        if (ownerID && ownerID === this.ownerID) {\n          this.entry[1] = value;\n          return this;\n        }\n        return new ValueNode(ownerID, this.keyHash, [key, value]);\n      }\n\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n    };\n\n\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate =\n  HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  }\n\n  BitmapIndexedNode.prototype.iterate =\n  HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  }\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  }\n\n  createClass(MapIterator, Iterator);\n\n    function MapIterator(map, type, reverse) {\n      this._type = type;\n      this._reverse = reverse;\n      this._stack = map._root && mapIteratorFrame(map._root);\n    }\n\n    MapIterator.prototype.next = function() {\n      var type = this._type;\n      var stack = this._stack;\n      while (stack) {\n        var node = stack.node;\n        var index = stack.index++;\n        var maxIndex;\n        if (node.entry) {\n          if (index === 0) {\n            return mapIteratorValue(type, node.entry);\n          }\n        } else if (node.entries) {\n          maxIndex = node.entries.length - 1;\n          if (index <= maxIndex) {\n            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n          }\n        } else {\n          maxIndex = node.nodes.length - 1;\n          if (index <= maxIndex) {\n            var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n            if (subNode) {\n              if (subNode.entry) {\n                return mapIteratorValue(type, subNode.entry);\n              }\n              stack = this._stack = mapIteratorFrame(subNode, stack);\n            }\n            continue;\n          }\n        }\n        stack = this._stack = this._stack.__prev;\n      }\n      return iteratorDone();\n    };\n\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n    var newNode;\n    var nodes = idx1 === idx2 ?\n      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :\n      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ?\n      existing.mergeDeep(value) :\n      is(existing, value) ? existing : value;\n  }\n\n  function deepMergerWith(merger) {\n    return function(existing, value, key)  {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function(x ) {return x.size !== 0});\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function(collection ) {\n      var mergeIntoMap = merger ?\n        function(value, key)  {\n          collection.update(key, NOT_SET, function(existing )\n            {return existing === NOT_SET ? value : merger(existing, value, key)}\n          );\n        } :\n        function(value, key)  {\n          collection.set(key, value);\n        }\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(\n      isNotSet || (existing && existing.set),\n      'invalid keyPath'\n    );\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(\n      nextExisting,\n      keyPathIter,\n      notSetValue,\n      updater\n    );\n    return nextUpdated === nextExisting ? existing :\n      nextUpdated === NOT_SET ? existing.remove(key) :\n      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - ((x >> 1) & 0x55555555);\n    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n    x = (x + (x >> 4)) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\n  createClass(List, IndexedCollection);\n\n    // @pragma Construction\n\n    function List(value) {\n      var empty = emptyList();\n      if (value === null || value === undefined) {\n        return empty;\n      }\n      if (isList(value)) {\n        return value;\n      }\n      var iter = IndexedIterable(value);\n      var size = iter.size;\n      if (size === 0) {\n        return empty;\n      }\n      assertNotInfinite(size);\n      if (size > 0 && size < SIZE) {\n        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n      }\n      return empty.withMutations(function(list ) {\n        list.setSize(size);\n        iter.forEach(function(v, i)  {return list.set(i, v)});\n      });\n    }\n\n    List.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    List.prototype.toString = function() {\n      return this.__toString('List [', ']');\n    };\n\n    // @pragma Access\n\n    List.prototype.get = function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      if (index >= 0 && index < this.size) {\n        index += this._origin;\n        var node = listNodeFor(this, index);\n        return node && node.array[index & MASK];\n      }\n      return notSetValue;\n    };\n\n    // @pragma Modification\n\n    List.prototype.set = function(index, value) {\n      return updateList(this, index, value);\n    };\n\n    List.prototype.remove = function(index) {\n      return !this.has(index) ? this :\n        index === 0 ? this.shift() :\n        index === this.size - 1 ? this.pop() :\n        this.splice(index, 1);\n    };\n\n    List.prototype.insert = function(index, value) {\n      return this.splice(index, 0, value);\n    };\n\n    List.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = this._origin = this._capacity = 0;\n        this._level = SHIFT;\n        this._root = this._tail = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyList();\n    };\n\n    List.prototype.push = function(/*...values*/) {\n      var values = arguments;\n      var oldSize = this.size;\n      return this.withMutations(function(list ) {\n        setListBounds(list, 0, oldSize + values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(oldSize + ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.pop = function() {\n      return setListBounds(this, 0, -1);\n    };\n\n    List.prototype.unshift = function(/*...values*/) {\n      var values = arguments;\n      return this.withMutations(function(list ) {\n        setListBounds(list, -values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.shift = function() {\n      return setListBounds(this, 1);\n    };\n\n    // @pragma Composition\n\n    List.prototype.merge = function(/*...iters*/) {\n      return mergeIntoListWith(this, undefined, arguments);\n    };\n\n    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, merger, iters);\n    };\n\n    List.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoListWith(this, deepMerger, arguments);\n    };\n\n    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, deepMergerWith(merger), iters);\n    };\n\n    List.prototype.setSize = function(size) {\n      return setListBounds(this, 0, size);\n    };\n\n    // @pragma Iteration\n\n    List.prototype.slice = function(begin, end) {\n      var size = this.size;\n      if (wholeSlice(begin, end, size)) {\n        return this;\n      }\n      return setListBounds(\n        this,\n        resolveBegin(begin, size),\n        resolveEnd(end, size)\n      );\n    };\n\n    List.prototype.__iterator = function(type, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      return new Iterator(function()  {\n        var value = values();\n        return value === DONE ?\n          iteratorDone() :\n          iteratorValue(type, index++, value);\n      });\n    };\n\n    List.prototype.__iterate = function(fn, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      var value;\n      while ((value = values()) !== DONE) {\n        if (fn(value, index++, this) === false) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    List.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        return this;\n      }\n      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n    };\n\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn =\n  ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n\n    function VNode(array, ownerID) {\n      this.array = array;\n      this.ownerID = ownerID;\n    }\n\n    // TODO: seems like these methods are very similar\n\n    VNode.prototype.removeBefore = function(ownerID, level, index) {\n      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n        return this;\n      }\n      var originIndex = (index >>> level) & MASK;\n      if (originIndex >= this.array.length) {\n        return new VNode([], ownerID);\n      }\n      var removingFirst = originIndex === 0;\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[originIndex];\n        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && removingFirst) {\n          return this;\n        }\n      }\n      if (removingFirst && !newChild) {\n        return this;\n      }\n      var editable = editableVNode(this, ownerID);\n      if (!removingFirst) {\n        for (var ii = 0; ii < originIndex; ii++) {\n          editable.array[ii] = undefined;\n        }\n      }\n      if (newChild) {\n        editable.array[originIndex] = newChild;\n      }\n      return editable;\n    };\n\n    VNode.prototype.removeAfter = function(ownerID, level, index) {\n      if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n        return this;\n      }\n      var sizeIndex = ((index - 1) >>> level) & MASK;\n      if (sizeIndex >= this.array.length) {\n        return this;\n      }\n\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[sizeIndex];\n        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n          return this;\n        }\n      }\n\n      var editable = editableVNode(this, ownerID);\n      editable.array.splice(sizeIndex + 1);\n      if (newChild) {\n        editable.array[sizeIndex] = newChild;\n      }\n      return editable;\n    };\n\n\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ?\n        iterateLeaf(node, offset) :\n        iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : (left - offset) >> level;\n      var to = ((right - offset) >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(\n            array && array[idx], level - SHIFT, offset + (idx << level)\n          );\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index !== index) {\n      return list;\n    }\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function(list ) {\n        index < 0 ?\n          setListBounds(list, index).set(0, value) :\n          setListBounds(list, 0, index + 1).set(index, value)\n      });\n    }\n\n    index += list._origin;\n\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = (index >>> level) & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << (list._level + SHIFT)) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[(rawIndex >>> level) & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might need creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might need creating a higher root.\n    while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ?\n      listNodeFor(list, newCapacity - 1) :\n      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = (oldTailOffset >>> level) & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = (newOrigin >>> newLevel) & MASK;\n        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n  }\n\n  createClass(OrderedMap, Map);\n\n    // @pragma Construction\n\n    function OrderedMap(value) {\n      return value === null || value === undefined ? emptyOrderedMap() :\n        isOrderedMap(value) ? value :\n        emptyOrderedMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    OrderedMap.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedMap.prototype.toString = function() {\n      return this.__toString('OrderedMap {', '}');\n    };\n\n    // @pragma Access\n\n    OrderedMap.prototype.get = function(k, notSetValue) {\n      var index = this._map.get(k);\n      return index !== undefined ? this._list.get(index)[1] : notSetValue;\n    };\n\n    // @pragma Modification\n\n    OrderedMap.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._map.clear();\n        this._list.clear();\n        return this;\n      }\n      return emptyOrderedMap();\n    };\n\n    OrderedMap.prototype.set = function(k, v) {\n      return updateOrderedMap(this, k, v);\n    };\n\n    OrderedMap.prototype.remove = function(k) {\n      return updateOrderedMap(this, k, NOT_SET);\n    };\n\n    OrderedMap.prototype.wasAltered = function() {\n      return this._map.wasAltered() || this._list.wasAltered();\n    };\n\n    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._list.__iterate(\n        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},\n        reverse\n      );\n    };\n\n    OrderedMap.prototype.__iterator = function(type, reverse) {\n      return this._list.fromEntrySeq().__iterator(type, reverse);\n    };\n\n    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      var newList = this._list.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        this._list = newList;\n        return this;\n      }\n      return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n    };\n\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) { // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});\n        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n    function ToKeyedSequence(indexed, useKeys) {\n      this._iter = indexed;\n      this._useKeys = useKeys;\n      this.size = indexed.size;\n    }\n\n    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n      return this._iter.get(key, notSetValue);\n    };\n\n    ToKeyedSequence.prototype.has = function(key) {\n      return this._iter.has(key);\n    };\n\n    ToKeyedSequence.prototype.valueSeq = function() {\n      return this._iter.valueSeq();\n    };\n\n    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;\n      var reversedSequence = reverseFactory(this, true);\n      if (!this._useKeys) {\n        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};\n      }\n      return reversedSequence;\n    };\n\n    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;\n      var mappedSequence = mapFactory(this, mapper, context);\n      if (!this._useKeys) {\n        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};\n      }\n      return mappedSequence;\n    };\n\n    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var ii;\n      return this._iter.__iterate(\n        this._useKeys ?\n          function(v, k)  {return fn(v, k, this$0)} :\n          ((ii = reverse ? resolveSize(this) : 0),\n            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),\n        reverse\n      );\n    };\n\n    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n      if (this._useKeys) {\n        return this._iter.__iterator(type, reverse);\n      }\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var ii = reverse ? resolveSize(this) : 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n      });\n    };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(ToIndexedSequence, IndexedSeq);\n    function ToIndexedSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToIndexedSequence.prototype.includes = function(value) {\n      return this._iter.includes(value);\n    };\n\n    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);\n    };\n\n    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, iterations++, step.value, step)\n      });\n    };\n\n\n\n  createClass(ToSetSequence, SetSeq);\n    function ToSetSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToSetSequence.prototype.has = function(key) {\n      return this._iter.includes(key);\n    };\n\n    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);\n    };\n\n    ToSetSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, step.value, step.value, step);\n      });\n    };\n\n\n\n  createClass(FromEntriesSequence, KeyedSeq);\n    function FromEntriesSequence(entries) {\n      this._iter = entries;\n      this.size = entries.size;\n    }\n\n    FromEntriesSequence.prototype.entrySeq = function() {\n      return this._iter.toSeq();\n    };\n\n    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(entry ) {\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return fn(\n            indexedIterable ? entry.get(1) : entry[1],\n            indexedIterable ? entry.get(0) : entry[0],\n            this$0\n          );\n        }\n      }, reverse);\n    };\n\n    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          // Check if entry exists first so array access doesn't throw for holes\n          // in the parent iteration.\n          if (entry) {\n            validateEntry(entry);\n            var indexedIterable = isIterable(entry);\n            return iteratorValue(\n              type,\n              indexedIterable ? entry.get(0) : entry[0],\n              indexedIterable ? entry.get(1) : entry[1],\n              step\n            );\n          }\n        }\n      });\n    };\n\n\n  ToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function()  {return iterable};\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function()  {return iterable.reverse()};\n      return reversedSequence;\n    };\n    flipSequence.has = function(key ) {return iterable.includes(key)};\n    flipSequence.includes = function(key ) {return iterable.has(key)};\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);\n    }\n    flipSequence.__iteratorUncached = function(type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new Iterator(function()  {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(\n        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n        reverse\n      );\n    }\n    return flipSequence;\n  }\n\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function(key ) {return iterable.has(key)};\n    mappedSequence.get = function(key, notSetValue)  {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ?\n        notSetValue :\n        mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(\n        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},\n        reverse\n      );\n    }\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(\n          type,\n          key,\n          mapper.call(context, entry[1], key, iterable),\n          step\n        );\n      });\n    }\n    return mappedSequence;\n  }\n\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function()  {return iterable};\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function()  {return iterable.flip()};\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function(key, notSetValue) \n      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};\n    reversedSequence.has = function(key )\n      {return iterable.has(useKeys ? key : -1 - key)};\n    reversedSequence.includes = function(value ) {return iterable.includes(value)};\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);\n    };\n    reversedSequence.__iterator =\n      function(type, reverse)  {return iterable.__iterator(type, !reverse)};\n    return reversedSequence;\n  }\n\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function(key ) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function(key, notSetValue)  {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?\n          v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    }\n    return filterSequence;\n  }\n\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        0,\n        function(a ) {return a + 1}\n      );\n    });\n    return groups.asImmutable();\n  }\n\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}\n      );\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});\n  }\n\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      if (end === Infinity) {\n        end = originalSize;\n      } else {\n        end = end | 0;\n      }\n    }\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n\n    var sliceSeq = makeSequence(iterable);\n\n    // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ?\n          iterable.get(index + resolvedBegin, notSetValue) :\n          notSetValue;\n      }\n    }\n\n    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k)  {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&\n                 iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function(type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    }\n\n    return sliceSeq;\n  }\n\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c) \n        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}\n      );\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new Iterator(function()  {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function(v ) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ?\n          keyedSeqFromValue(v) :\n          indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function(v ) {return v.size !== 0});\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable ||\n          isKeyedIterable && isKeyed(singleton) ||\n          isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(\n      function(sum, seq)  {\n        if (sum !== undefined) {\n          var size = seq.size;\n          if (size !== undefined) {\n            return sum + size;\n          }\n        }\n      },\n      0\n    );\n    return concatSeq;\n  }\n\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function(fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {var this$0 = this;\n        iter.__iterate(function(v, k)  {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    }\n    flatSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    }\n    return flatSequence;\n  }\n\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(\n      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}\n    ).flatten(true);\n  }\n\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 -1;\n    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k) \n        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&\n        fn(v, iterations++, this$0) !== false},\n        reverse\n      );\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new Iterator(function()  {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ?\n          iteratorValue(type, iterations++, separator) :\n          iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(\n      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}\n    ).toArray();\n    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(\n      isKeyedIterable ?\n      function(v, i)  { entries[i].length = 2; } :\n      function(v, i)  { entries[i] = v[1]; }\n    );\n    return isKeyedIterable ? KeyedSeq(entries) :\n      isIndexed(iterable) ? IndexedSeq(entries) :\n      SetSeq(entries);\n  }\n\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq()\n        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})\n        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;\n  }\n\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function(fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function(type, reverse) {\n      var iterators = iters.map(function(i )\n        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}\n      );\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function()  {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function(i ) {return i.next()});\n          isDone = steps.some(function(s ) {return s.done});\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(\n          type,\n          iterations++,\n          zipper.apply(null, steps.map(function(s ) {return s.value}))\n        );\n      });\n    };\n    return zipSequence\n  }\n\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable :\n      isIndexed(iterable) ? IndexedIterable :\n      SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create(\n      (\n        isKeyed(iterable) ? KeyedSeq :\n        isIndexed(iterable) ? IndexedSeq :\n        SetSeq\n      ).prototype\n    );\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n\n  createClass(Record, KeyedCollection);\n\n    function Record(defaultValues, name) {\n      var hasInitialized;\n\n      var RecordType = function Record(values) {\n        if (values instanceof RecordType) {\n          return values;\n        }\n        if (!(this instanceof RecordType)) {\n          return new RecordType(values);\n        }\n        if (!hasInitialized) {\n          hasInitialized = true;\n          var keys = Object.keys(defaultValues);\n          setProps(RecordTypePrototype, keys);\n          RecordTypePrototype.size = keys.length;\n          RecordTypePrototype._name = name;\n          RecordTypePrototype._keys = keys;\n          RecordTypePrototype._defaultValues = defaultValues;\n        }\n        this._map = Map(values);\n      };\n\n      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n      RecordTypePrototype.constructor = RecordType;\n\n      return RecordType;\n    }\n\n    Record.prototype.toString = function() {\n      return this.__toString(recordName(this) + ' {', '}');\n    };\n\n    // @pragma Access\n\n    Record.prototype.has = function(k) {\n      return this._defaultValues.hasOwnProperty(k);\n    };\n\n    Record.prototype.get = function(k, notSetValue) {\n      if (!this.has(k)) {\n        return notSetValue;\n      }\n      var defaultVal = this._defaultValues[k];\n      return this._map ? this._map.get(k, defaultVal) : defaultVal;\n    };\n\n    // @pragma Modification\n\n    Record.prototype.clear = function() {\n      if (this.__ownerID) {\n        this._map && this._map.clear();\n        return this;\n      }\n      var RecordType = this.constructor;\n      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n    };\n\n    Record.prototype.set = function(k, v) {\n      if (!this.has(k)) {\n        throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n      }\n      if (this._map && !this._map.has(k)) {\n        var defaultVal = this._defaultValues[k];\n        if (v === defaultVal) {\n          return this;\n        }\n      }\n      var newMap = this._map && this._map.set(k, v);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.remove = function(k) {\n      if (!this.has(k)) {\n        return this;\n      }\n      var newMap = this._map && this._map.remove(k);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);\n    };\n\n    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);\n    };\n\n    Record.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map && this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return makeRecord(this, newMap, ownerID);\n    };\n\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn =\n  RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {\n      // Object.defineProperty failed. Probably IE8.\n    }\n  }\n\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function() {\n        return this.get(name);\n      },\n      set: function(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n\n  createClass(Set, SetCollection);\n\n    // @pragma Construction\n\n    function Set(value) {\n      return value === null || value === undefined ? emptySet() :\n        isSet(value) && !isOrdered(value) ? value :\n        emptySet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    Set.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Set.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    Set.prototype.toString = function() {\n      return this.__toString('Set {', '}');\n    };\n\n    // @pragma Access\n\n    Set.prototype.has = function(value) {\n      return this._map.has(value);\n    };\n\n    // @pragma Modification\n\n    Set.prototype.add = function(value) {\n      return updateSet(this, this._map.set(value, true));\n    };\n\n    Set.prototype.remove = function(value) {\n      return updateSet(this, this._map.remove(value));\n    };\n\n    Set.prototype.clear = function() {\n      return updateSet(this, this._map.clear());\n    };\n\n    // @pragma Composition\n\n    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);\n      iters = iters.filter(function(x ) {return x.size !== 0});\n      if (iters.length === 0) {\n        return this;\n      }\n      if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n        return this.constructor(iters[0]);\n      }\n      return this.withMutations(function(set ) {\n        for (var ii = 0; ii < iters.length; ii++) {\n          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});\n        }\n      });\n    };\n\n    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (!iters.every(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (iters.some(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.merge = function() {\n      return this.union.apply(this, arguments);\n    };\n\n    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return this.union.apply(this, iters);\n    };\n\n    Set.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator));\n    };\n\n    Set.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator, mapper));\n    };\n\n    Set.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);\n    };\n\n    Set.prototype.__iterator = function(type, reverse) {\n      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);\n    };\n\n    Set.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return this.__make(newMap, ownerID);\n    };\n\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set :\n      newMap.size === 0 ? set.__empty() :\n      set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set);\n\n    // @pragma Construction\n\n    function OrderedSet(value) {\n      return value === null || value === undefined ? emptyOrderedSet() :\n        isOrderedSet(value) ? value :\n        emptyOrderedSet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    OrderedSet.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedSet.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    OrderedSet.prototype.toString = function() {\n      return this.__toString('OrderedSet {', '}');\n    };\n\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Stack, IndexedCollection);\n\n    // @pragma Construction\n\n    function Stack(value) {\n      return value === null || value === undefined ? emptyStack() :\n        isStack(value) ? value :\n        emptyStack().unshiftAll(value);\n    }\n\n    Stack.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Stack.prototype.toString = function() {\n      return this.__toString('Stack [', ']');\n    };\n\n    // @pragma Access\n\n    Stack.prototype.get = function(index, notSetValue) {\n      var head = this._head;\n      index = wrapIndex(this, index);\n      while (head && index--) {\n        head = head.next;\n      }\n      return head ? head.value : notSetValue;\n    };\n\n    Stack.prototype.peek = function() {\n      return this._head && this._head.value;\n    };\n\n    // @pragma Modification\n\n    Stack.prototype.push = function(/*...values*/) {\n      if (arguments.length === 0) {\n        return this;\n      }\n      var newSize = this.size + arguments.length;\n      var head = this._head;\n      for (var ii = arguments.length - 1; ii >= 0; ii--) {\n        head = {\n          value: arguments[ii],\n          next: head\n        };\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pushAll = function(iter) {\n      iter = IndexedIterable(iter);\n      if (iter.size === 0) {\n        return this;\n      }\n      assertNotInfinite(iter.size);\n      var newSize = this.size;\n      var head = this._head;\n      iter.reverse().forEach(function(value ) {\n        newSize++;\n        head = {\n          value: value,\n          next: head\n        };\n      });\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pop = function() {\n      return this.slice(1);\n    };\n\n    Stack.prototype.unshift = function(/*...values*/) {\n      return this.push.apply(this, arguments);\n    };\n\n    Stack.prototype.unshiftAll = function(iter) {\n      return this.pushAll(iter);\n    };\n\n    Stack.prototype.shift = function() {\n      return this.pop.apply(this, arguments);\n    };\n\n    Stack.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._head = undefined;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyStack();\n    };\n\n    Stack.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      var resolvedBegin = resolveBegin(begin, this.size);\n      var resolvedEnd = resolveEnd(end, this.size);\n      if (resolvedEnd !== this.size) {\n        // super.slice(begin, end);\n        return IndexedCollection.prototype.slice.call(this, begin, end);\n      }\n      var newSize = this.size - resolvedBegin;\n      var head = this._head;\n      while (resolvedBegin--) {\n        head = head.next;\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    // @pragma Mutability\n\n    Stack.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeStack(this.size, this._head, ownerID, this.__hash);\n    };\n\n    // @pragma Iteration\n\n    Stack.prototype.__iterate = function(fn, reverse) {\n      if (reverse) {\n        return this.reverse().__iterate(fn);\n      }\n      var iterations = 0;\n      var node = this._head;\n      while (node) {\n        if (fn(node.value, iterations++, this) === false) {\n          break;\n        }\n        node = node.next;\n      }\n      return iterations;\n    };\n\n    Stack.prototype.__iterator = function(type, reverse) {\n      if (reverse) {\n        return this.reverse().__iterator(type);\n      }\n      var iterations = 0;\n      var node = this._head;\n      return new Iterator(function()  {\n        if (node) {\n          var value = node.value;\n          node = node.next;\n          return iteratorValue(type, iterations++, value);\n        }\n        return iteratorDone();\n      });\n    };\n\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols &&\n      Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n\n  mixin(Iterable, {\n\n    // ### Conversion to other types\n\n    toArray: function() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });\n      return array;\n    },\n\n    toIndexedSeq: function() {\n      return new ToIndexedSequence(this);\n    },\n\n    toJS: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}\n      ).__toJS();\n    },\n\n    toJSON: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}\n      ).__toJS();\n    },\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, true);\n    },\n\n    toMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n\n    toObject: function() {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function(v, k)  { object[k] = v; });\n      return object;\n    },\n\n    toOrderedMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n\n    toOrderedSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSetSeq: function() {\n      return new ToSetSequence(this);\n    },\n\n    toSeq: function() {\n      return isIndexed(this) ? this.toIndexedSeq() :\n        isKeyed(this) ? this.toKeyedSeq() :\n        this.toSetSeq();\n    },\n\n    toStack: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toList: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n\n    // ### Common JavaScript methods and properties\n\n    toString: function() {\n      return '[Iterable]';\n    },\n\n    __toString: function(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function() {var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n\n    includes: function(searchValue) {\n      return this.some(function(value ) {return is(value, searchValue)});\n    },\n\n    entries: function() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n\n    every: function(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function(v, k, c)  {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n\n    find: function(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n\n    forEach: function(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n\n    join: function(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function(v ) {\n        isFirst ? (isFirst = false) : (joined += separator);\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n      return joined;\n    },\n\n    keys: function() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n\n    map: function(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n\n    reduce: function(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function(v, k, c)  {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n\n    reduceRight: function(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, true));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n\n    some: function(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n\n    sort: function(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n\n    values: function() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n\n\n    // ### More sequential methods\n\n    butLast: function() {\n      return this.slice(0, -1);\n    },\n\n    isEmpty: function() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});\n    },\n\n    count: function(predicate, context) {\n      return ensureSize(\n        predicate ? this.toSeq().filter(predicate, context) : this\n      );\n    },\n\n    countBy: function(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n\n    equals: function(other) {\n      return deepEqual(this, other);\n    },\n\n    entrySeq: function() {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};\n      return entriesSequence;\n    },\n\n    filterNot: function(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n\n    findEntry: function(predicate, context, notSetValue) {\n      var found = notSetValue;\n      this.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n\n    findKey: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n\n    findLast: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n\n    findLastEntry: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n    },\n\n    findLastKey: function(predicate, context) {\n      return this.toKeyedSeq().reverse().findKey(predicate, context);\n    },\n\n    first: function() {\n      return this.find(returnTrue);\n    },\n\n    flatMap: function(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n\n    fromEntrySeq: function() {\n      return new FromEntriesSequence(this);\n    },\n\n    get: function(searchKey, notSetValue) {\n      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);\n    },\n\n    getIn: function(searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n\n    groupBy: function(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n\n    has: function(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n\n    hasIn: function(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n\n    isSubset: function(iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function(value ) {return iter.includes(value)});\n    },\n\n    isSuperset: function(iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n\n    keyOf: function(searchValue) {\n      return this.findKey(function(value ) {return is(value, searchValue)});\n    },\n\n    keySeq: function() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n\n    last: function() {\n      return this.toSeq().reverse().first();\n    },\n\n    lastKeyOf: function(searchValue) {\n      return this.toKeyedSeq().reverse().keyOf(searchValue);\n    },\n\n    max: function(comparator) {\n      return maxFactory(this, comparator);\n    },\n\n    maxBy: function(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n\n    min: function(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n\n    minBy: function(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n\n    rest: function() {\n      return this.slice(1);\n    },\n\n    skip: function(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n\n    skipLast: function(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n\n    skipUntil: function(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n\n    sortBy: function(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n\n    take: function(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n\n    takeLast: function(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n\n    takeWhile: function(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n\n    takeUntil: function(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n\n    valueSeq: function() {\n      return this.toIndexedSeq();\n    },\n\n\n    // ### Hashable Object\n\n    hashCode: function() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    }\n\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect =\n  IterablePrototype.toSource = function() { return this.toString(); };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes;\n\n  mixin(KeyedIterable, {\n\n    // ### More sequential methods\n\n    flip: function() {\n      return reify(this, flipFactory(this));\n    },\n\n    mapEntries: function(mapper, context) {var this$0 = this;\n      var iterations = 0;\n      return reify(this,\n        this.toSeq().map(\n          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}\n        ).fromEntrySeq()\n      );\n    },\n\n    mapKeys: function(mapper, context) {var this$0 = this;\n      return reify(this,\n        this.toSeq().flip().map(\n          function(k, v)  {return mapper.call(context, k, v, this$0)}\n        ).flip()\n      );\n    }\n\n  });\n\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};\n\n\n\n  mixin(IndexedIterable, {\n\n    // ### Conversion to other types\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, false);\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n\n    findIndex: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    indexOf: function(searchValue) {\n      var key = this.keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    lastIndexOf: function(searchValue) {\n      var key = this.lastKeyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, false));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n\n    splice: function(index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n        return this;\n      }\n      // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(\n        this,\n        numArgs === 1 ?\n          spliced :\n          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n      );\n    },\n\n\n    // ### More collection methods\n\n    findLastIndex: function(predicate, context) {\n      var entry = this.findLastEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    first: function() {\n      return this.get(0);\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n\n    get: function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return (index < 0 || (this.size === Infinity ||\n          (this.size !== undefined && index > this.size))) ?\n        notSetValue :\n        this.find(function(_, key)  {return key === index}, undefined, notSetValue);\n    },\n\n    has: function(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ?\n        this.size === Infinity || index < this.size :\n        this.indexOf(index) !== -1\n      );\n    },\n\n    interpose: function(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n\n    interleave: function(/*...iterables*/) {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n\n    keySeq: function() {\n      return Range(0, this.size);\n    },\n\n    last: function() {\n      return this.get(-1);\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n\n    zip: function(/*, ...iterables */) {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n\n    zipWith: function(zipper/*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n\n  });\n\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n\n  mixin(SetIterable, {\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n\n    includes: function(value) {\n      return this.has(value);\n    },\n\n\n    // ### More sequential methods\n\n    keySeq: function() {\n      return this.valueSeq();\n    }\n\n  });\n\n  SetIterable.prototype.has = IterablePrototype.includes;\n  SetIterable.prototype.contains = SetIterable.prototype.includes;\n\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    }\n  }\n\n  function neg(predicate) {\n    return function() {\n      return -predicate.apply(this, arguments);\n    }\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(\n      keyed ?\n        ordered ?\n          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :\n          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :\n        ordered ?\n          function(v ) { h = 31 * h + hash(v) | 0; } :\n          function(v ) { h = h + hash(v) | 0; }\n    );\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n\n    Iterable: Iterable,\n\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n\n    is: is,\n    fromJS: fromJS\n\n  };\n\n  return Immutable;\n\n}));\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bloodhound.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 958cfb913c9a0c9b726a","/*\n * typeahead.js\n * https://github.com/twitter/typeahead.js\n * Copyright 2013-2014 Twitter, Inc. and other contributors; Licensed MIT\n */\n\nvar assign = require('object-assign');\n\nvar _ = {\n  isMsie: function() {\n    // from https://github.com/ded/bowser/blob/master/bowser.js\n    return (/(msie|trident)/i).test(navigator.userAgent) ?\n      navigator.userAgent.match(/(msie |rv:)(\\d+(.\\d+)?)/i)[2] : false;\n  },\n\n  isBlankString: function(str) { return !str || /^\\s*$/.test(str); },\n\n  // http://stackoverflow.com/a/6969486\n  escapeRegExChars: function(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n  },\n\n  isString: function(obj) { return typeof obj === 'string'; },\n\n  isNumber: function(obj) { return typeof obj === 'number'; },\n\n  isArray: Array.isArray,\n\n  isFunction: function(obj) {\n\t\treturn typeof obj === 'function';\n\t},\n\n  isObject: function(obj) {\n    return typeof obj === 'object';\n  },\n\n  isUndefined: function(obj) { return typeof obj === 'undefined'; },\n\n  isElement: function(obj) { return !!(obj && obj.nodeType === 1); },\n\n  isJQuery: function(obj) { return obj instanceof $; },\n\n  toStr: function toStr(s) {\n    return (_.isUndefined(s) || s === null) ? '' : s + '';\n  },\n\n  bind: function(fn, context) {\n    return fn.bind(context);\n  },\n\n  each: function(collection, cb) {\n    collection.forEach(cb);\n  },\n\n  map: function(array, fn) {\n    return array.map(fn);\n  },\n\n  filter: function(array, fn) {\n    return array.filter(fn);\n  },\n\n  every: function(obj, test) {\n    var result = true;\n\n    if (!obj) { return result; }\n\n    // $.each(obj, function(key, val) {\n    //   if (!(result = test.call(null, val, key, obj))) {\n    //     return false;\n    //   }\n    // });\n\n    for(var key in obj) {\n      if(obj.hasOwnProperty(key)) {\n        var val = obj[key];\n        if (!(result = test.call(null, val, key, obj))) {\n          return false;\n        }\n      }\n    }\n\n    return !!result;\n  },\n\n  some: function(obj, test) {\n    var result = false;\n\n    if (!obj) { return result; }\n\n    // $.each(obj, function(key, val) {\n    //   if (result = test.call(null, val, key, obj)) {\n    //     return false;\n    //   }\n    // });\n\n    for(var key in obj) {\n      if(obj.hasOwnProperty(key)) {\n        var val = obj[key];\n        if (result = test.call(null, val, key, obj)) {\n          return false;\n        }\n      }\n    }\n\n    return !!result;\n  },\n\n  mixin: require('object-assign'),\n\n  identity: function(x) { return x; },\n\n  clone: function(obj) { return assign({}, obj); },\n\n  getIdGenerator: function() {\n    var counter = 0;\n    return function() { return counter++; };\n  },\n\n  templatify: function templatify(obj) {\n    return _.isFunction(obj) ? obj : template;\n\n    function template() { return String(obj); }\n  },\n\n  defer: function(fn) { setTimeout(fn, 0); },\n\n  debounce: function(func, wait, immediate) {\n    var timeout, result;\n\n    return function() {\n      var context = this, args = arguments, later, callNow;\n\n      later = function() {\n        timeout = null;\n        if (!immediate) { result = func.apply(context, args); }\n      };\n\n      callNow = immediate && !timeout;\n\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n\n      if (callNow) { result = func.apply(context, args); }\n\n      return result;\n    };\n  },\n\n  throttle: function(func, wait) {\n    var context, args, timeout, result, previous, later;\n\n    previous = 0;\n    later = function() {\n      previous = new Date();\n      timeout = null;\n      result = func.apply(context, args);\n    };\n\n    return function() {\n      var now = new Date(),\n          remaining = wait - (now - previous);\n\n      context = this;\n      args = arguments;\n\n      if (remaining <= 0) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n      }\n\n      else if (!timeout) {\n        timeout = setTimeout(later, remaining);\n      }\n\n      return result;\n    };\n  },\n\n  stringify: function(val) {\n    return _.isString(val) ? val : JSON.stringify(val);\n  },\n\n  noop: function() {},\n\n  error: function(msg) {\n    throw new Error(msg);\n  }\n};\n\nmodule.exports = _;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils.js","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-assign/index.js\n// module id = 1\n// module chunks = 0","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   3.3.1\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  return typeof x === 'function' || typeof x === 'object' && x !== null;\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nvar _isArray = undefined;\nif (!Array.isArray) {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n} else {\n  _isArray = Array.isArray;\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = undefined;\nvar customSchedulerFn = undefined;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  return function () {\n    vertxNext(flush);\n  };\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = r('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var _arguments = arguments;\n\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n  if (_state) {\n    (function () {\n      var callback = _arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  _resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        _resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      _reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      _reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    _reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return _resolve(promise, value);\n    }, function (reason) {\n      return _reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$) {\n  if (maybeThenable.constructor === promise.constructor && then$$ === then && maybeThenable.constructor.resolve === resolve) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$ === GET_THEN_ERROR) {\n      _reject(promise, GET_THEN_ERROR.error);\n    } else if (then$$ === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$)) {\n      handleForeignThenable(promise, maybeThenable, then$$);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction _resolve(promise, value) {\n  if (promise === value) {\n    _reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction _reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      _reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      _resolve(promise, value);\n    } else if (failed) {\n      _reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      _reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      _resolve(promise, value);\n    }, function rejectPromise(reason) {\n      _reject(promise, reason);\n    });\n  } catch (e) {\n    _reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction Enumerator(Constructor, input) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop);\n\n  if (!this.promise[PROMISE_ID]) {\n    makePromise(this.promise);\n  }\n\n  if (isArray(input)) {\n    this._input = input;\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._result = new Array(this.length);\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate();\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    _reject(this.promise, validationError());\n  }\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n};\n\nEnumerator.prototype._enumerate = function () {\n  var length = this.length;\n  var _input = this._input;\n\n  for (var i = 0; this._state === PENDING && i < length; i++) {\n    this._eachEntry(_input[i], i);\n  }\n};\n\nEnumerator.prototype._eachEntry = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve$$ = c.resolve;\n\n  if (resolve$$ === resolve) {\n    var _then = getThen(entry);\n\n    if (_then === then && entry._state !== PENDING) {\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof _then !== 'function') {\n      this._remaining--;\n      this._result[i] = entry;\n    } else if (c === Promise) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, _then);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve$$) {\n        return resolve$$(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve$$(entry), i);\n  }\n};\n\nEnumerator.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (state === REJECTED) {\n      _reject(promise, value);\n    } else {\n      this._result[i] = value;\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  _reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise(resolver) {\n  this[PROMISE_ID] = nextId();\n  this._result = this._state = undefined;\n  this._subscribers = [];\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = resolve;\nPromise.reject = reject;\nPromise._setScheduler = setScheduler;\nPromise._setAsap = setAsap;\nPromise._asap = asap;\n\nPromise.prototype = {\n  constructor: Promise,\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\nfunction polyfill() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise;\n}\n\npolyfill();\n// Strange compat..\nPromise.polyfill = polyfill;\nPromise.Promise = Promise;\n\nreturn Promise;\n\n})));\n//# sourceMappingURL=es6-promise.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es6-promise/dist/es6-promise.js\n// module id = 2\n// module chunks = 0","var LruCache = require('./lru_cache');\nvar _ = require('./utils');\n\nvar pendingRequestsCount = 0;\nvar pendingRequests = {};\nvar maxPendingRequests = 6;\nvar sharedCache = new LruCache(10);\n\nfunction Transport(o) {\n  o = o || {};\n\n  this.cancelled = false;\n  this.lastReq = null;\n\n  this._send = o.transport;\n  this._get = o.limiter ? o.limiter(this._get) : this._get;\n\n  this._cache = o.cache === false ? new LruCache(0) : sharedCache;\n}\n\nTransport.setMaxPendingRequests = function setMaxPendingRequests(num) {\n  maxPendingRequests = num;\n};\n\nTransport.resetCache = function resetCache() {\n  sharedCache.reset();\n};\n\n_.mixin(Transport.prototype, {\n\n  _fingerprint: function(o) {\n    o = o || {};\n    return o.url + o.type + JSON.stringify(o.data || {}); \n  },\n\n  _get: function(o, cb) {\n    var that = this, fingerprint, jqXhr;\n\n    fingerprint = this._fingerprint(o);\n\n    // #149: don't make a network request if there has been a cancellation\n    // or if the url doesn't match the last url Transport#get was invoked with\n    if (this.cancelled || fingerprint !== this.lastReq) { return; }\n\n    // a request is already in progress, piggyback off of it\n    if (jqXhr = pendingRequests[fingerprint]) {\n      // jqXhr.done(done).fail(fail);\n      jqXhr.then(done, fail);\n    }\n\n    // under the pending request threshold, so fire off a request\n    else if (pendingRequestsCount < maxPendingRequests) {\n      pendingRequestsCount++;\n      pendingRequests[fingerprint] =\n        // this._send(o).done(done).fail(fail).always(always);\n        this._send(o).then(function(resp) {\n          done(resp);\n          always();\n        }, function() {\n          fail();\n          always();\n        });\n    }\n\n    // at the pending request threshold, so hang out in the on deck circle\n    else {\n      this.onDeckRequestArgs = [].slice.call(arguments, 0);\n    }\n\n    function done(resp) {\n      cb(null, resp);\n      that._cache.set(fingerprint, resp);\n    }\n\n    function fail() {\n      cb(true);\n    }\n\n    function always() {\n      pendingRequestsCount--;\n      delete pendingRequests[fingerprint];\n\n      // ensures request is always made for the last query\n      if (that.onDeckRequestArgs) {\n        that._get.apply(that, that.onDeckRequestArgs);\n        that.onDeckRequestArgs = null;\n      }\n    }\n  },\n\n  get: function(o, cb) {\n    var resp, fingerprint;\n\n    cb = cb || _.noop;\n    o = _.isString(o) ? { url: o } : (o || {});\n\n    fingerprint = this._fingerprint(o);\n\n    this.cancelled = false;\n    this.lastReq = fingerprint;\n\n    // in-memory cache hit\n    if (resp = this._cache.get(fingerprint)) {\n      cb(null, resp);\n    }\n\n    // go to network\n    else {\n      this._get(o, cb);\n    }\n  },\n\n  cancel: function() {\n    this.cancelled = true;\n  }\n});\n\nmodule.exports = Transport;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/transport.js","/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null != obj && 'object' == typeof obj;\n}\n\nmodule.exports = isObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/superagent/lib/is-object.js\n// module id = 4\n// module chunks = 0","module.exports = require('./lib/bloodhound');\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","var _ = require('./utils');\nvar Promise = require('es6-promise').Promise;\nvar Remote = require('./remote');\nvar Prefetch = require('./prefetch');\nvar tokenizers = require('./tokenizers');\nvar oParser = require('./options_parser');\nvar SearchIndex = require('./search_index');\nvar Transport = require('./transport');\n\nfunction Bloodhound(o) {\n  o = oParser(o);\n\n  this.sorter = o.sorter;\n  this.identify = o.identify;\n  this.sufficient = o.sufficient;\n\n  this.local = o.local;\n  this.remote = o.remote ? new Remote(o.remote) : null;\n  this.prefetch = o.prefetch ? new Prefetch(o.prefetch) : null;\n\n  // the backing data structure used for fast pattern matching\n  this.index = new SearchIndex({\n    identify: this.identify,\n    datumTokenizer: o.datumTokenizer,\n    queryTokenizer: o.queryTokenizer\n  });\n\n  // hold off on intialization if the intialize option was explicitly false\n  o.initialize !== false && this.initialize();\n}\n\nBloodhound.tokenizers = tokenizers;\n\n_.mixin(Bloodhound.prototype, {\n\n  // ### super secret stuff used for integration with jquery plugin\n\n  __ttAdapter: function ttAdapter() {\n    var that = this;\n\n    return this.remote ? withAsync : withoutAsync;\n\n    function withAsync(query, sync, async) {\n      return that.search(query, sync, async);\n    }\n\n    function withoutAsync(query, sync) {\n      return that.search(query, sync);\n    }\n  },\n\n  _loadPrefetch: function loadPrefetch() {\n    var that = this, promise, serialized;\n\n    if (!this.prefetch) {\n      return new Promise(function(resolve, reject) {\n        resolve();\n      });\n    }\n\n    else if (serialized = this.prefetch.fromCache()) {\n      this.index.bootstrap(serialized);\n      return new Promise(function(resolve, reject) {\n        resolve();\n      });\n    }\n\n    else {\n      // this.prefetch.fromNetwork(done);\n      return new Promise(function(resolve, reject) {\n\n        // todo: promise\n        that.prefetch.fromNetwork(function(err, data) {\n          if (err) return reject(err);\n\n          try {\n            that.add(data);\n            that.prefetch.store(that.index.serialize());\n            resolve();\n          } catch(e) {\n            reject(e);\n          }\n        });\n      });\n    }\n  },\n\n  _initialize: function() {\n    var that = this, deferred;\n\n    // in case this is a reinitialization, clear previous data\n    this.clear();\n\n    (this.initPromise = this._loadPrefetch())\n    .then(addLocalToIndex); // local must be added to index after prefetch\n\n    return this.initPromise;\n\n    function addLocalToIndex() { that.add(that.local); }\n  },\n\n  // ### public\n\n  initialize: function(force) {\n    return !this.initPromise || force ? this._initialize() : this.initPromise;\n  },\n\n  // TODO: before initialize what happens?\n  add: function(data) {\n    this.index.add(data);\n    return this;\n  },\n\n  remove: function(data) {\n    this.index.remove(data);\n    return this;\n  },\n\n  get: function(ids) {\n    ids = _.isArray(ids) ? ids : [].slice.call(arguments);\n    return this.index.get(ids);\n  },\n\n  search: function(query, sync, async) {\n    var that = this, local;\n\n    local = this.sorter(this.index.search(query));\n\n    // return a copy to guarantee no changes within this scope\n    // as this array will get used when processing the remote results\n    sync(this.remote ? local.slice() : local);\n\n    if (this.remote && local.length < this.sufficient) {\n      this.remote.get(query, processRemote);\n    }\n\n    else if (this.remote) {\n      // #149: prevents outdated rate-limited requests from being sent\n      this.remote.cancelLastRequest();\n    }\n\n    return this;\n\n    function processRemote(remote) {\n      var nonDuplicates = [];\n\n      // exclude duplicates\n      _.each(remote, function(r) {\n         !_.some(local, function(l) {\n          return that.identify(r) === that.identify(l);\n        }) && nonDuplicates.push(r);\n      });\n\n      async && async(nonDuplicates);\n    }\n  },\n\n  all: function() {\n    return this.index.all();\n  },\n\n  clear: function() {\n    this.index.reset();\n    return this;\n  },\n\n  clearPrefetchCache: function() {\n    this.prefetch && this.prefetch.clear();\n    return this;\n  },\n\n  clearRemoteCache: function() {\n    Transport.resetCache();\n    return this;\n  },\n\n  // DEPRECATED: will be removed in v1\n  ttAdapter: function() {\n    return this.__ttAdapter();\n  }\n});\n\nmodule.exports = Bloodhound;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/bloodhound.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 7\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 8\n// module chunks = 0","/*\n * typeahead.js\n * https://github.com/twitter/typeahead.js\n * Copyright 2013-2014 Twitter, Inc. and other contributors; Licensed MIT\n */\n\nvar _ = require('./utils');\nvar Transport = require('./transport');\n\nfunction Remote(o) {\n  this.url = o.url;\n  this.prepare = o.prepare;\n  this.transform = o.transform;\n\n  this.transport = new Transport({\n    cache: o.cache,\n    limiter: o.limiter,\n    transport: o.transport\n  });\n}\n\n_.mixin(Remote.prototype, {\n  // ### private\n\n  _settings: function settings() {\n    return {\n      url: this.url,\n      type: 'GET',\n      dataType: 'json'\n    };\n  },\n\n  get: function get(query, cb) {\n    var that = this, settings;\n\n    if (!cb) { return; }\n\n    query = query || '';\n    settings = this.prepare(query, this._settings());\n\n    return this.transport.get(settings, onResponse);\n\n    function onResponse(err, resp) {\n      err ? cb([]) : cb(that.transform(resp));\n    }\n  },\n\n  cancelLastRequest: function cancelLastRequest() {\n    this.transport.cancel();\n  }\n});\n\nmodule.exports = Remote;\n\n\n// WEBPACK FOOTER //\n// ./lib/remote.js","/*\n * typeahead.js\n * https://github.com/twitter/typeahead.js\n * Copyright 2013-2014 Twitter, Inc. and other contributors; Licensed MIT\n */\n\n// inspired by https://github.com/jharding/lru-cache\n\nvar _ = require('./utils');\n\nfunction LruCache(maxSize) {\n  this.maxSize = _.isNumber(maxSize) ? maxSize : 100;\n  this.reset();\n\n  // if max size is less than 0, provide a noop cache\n  if (this.maxSize <= 0) {\n    this.set = this.get = _.noop;\n  }\n}\n\n_.mixin(LruCache.prototype, {\n  set: function set(key, val) {\n    var tailItem = this.list.tail, node;\n\n    // at capacity\n    if (this.size >= this.maxSize) {\n      this.list.remove(tailItem);\n      delete this.hash[tailItem.key];\n\n      this.size--;\n    }\n\n    // writing over existing key\n    if (node = this.hash[key]) {\n      node.val = val;\n      this.list.moveToFront(node);\n    }\n\n    // new key\n    else {\n      node = new Node(key, val);\n\n      this.list.add(node);\n      this.hash[key] = node;\n\n      this.size++;\n    }\n  },\n\n  get: function get(key) {\n    var node = this.hash[key];\n\n    if (node) {\n      this.list.moveToFront(node);\n      return node.val;\n    }\n  },\n\n  reset: function reset() {\n    this.size = 0;\n    this.hash = {};\n    this.list = new List();\n  }\n});\n\nfunction List() {\n  this.head = this.tail = null;\n}\n\n_.mixin(List.prototype, {\n  add: function add(node) {\n    if (this.head) {\n      node.next = this.head;\n      this.head.prev = node;\n    }\n\n    this.head = node;\n    this.tail = this.tail || node;\n  },\n\n  remove: function remove(node) {\n    node.prev ? node.prev.next = node.next : this.head = node.next;\n    node.next ? node.next.prev = node.prev : this.tail = node.prev;\n  },\n\n  moveToFront: function(node) {\n    this.remove(node);\n    this.add(node);\n  }\n});\n\nfunction Node(key, val) {\n  this.key = key;\n  this.val = val;\n  this.prev = this.next = null;\n}\n\nmodule.exports = LruCache;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru_cache.js","var PersistentStorage = require('./persistent_storage');\nvar _ = require('./utils');\n\nvar keys = { data: 'data', protocol: 'protocol', thumbprint: 'thumbprint' };\nvar location = null;\n\n\nif(typeof window !== 'undefined') {\n  location = window.location;\n} else {\n  location = {\n    protocol: 'https:'\n  };\n}\n\n\n// constructor\n// -----------\n\n// defaults for options are handled in options_parser\nfunction Prefetch(o) {\n  this.url = o.url;\n  this.ttl = o.ttl;\n  this.cache = o.cache;\n  this.prepare = o.prepare;\n  this.transform = o.transform;\n  this.transport = o.transport;\n  this.thumbprint = o.thumbprint;\n\n  this.storage = new PersistentStorage(o.cacheKey);\n}\n\n_.mixin(Prefetch.prototype, {\n\n  _settings: function() {\n    return { url: this.url, type: 'GET', dataType: 'json' };\n  },\n\n  store: function(data) {\n    if (!this.cache) { return; }\n\n    this.storage.set(keys.data, data, this.ttl);\n    this.storage.set(keys.protocol, location.protocol, this.ttl);\n    this.storage.set(keys.thumbprint, this.thumbprint, this.ttl);\n  },\n\n  fromCache: function() {\n    var stored = {}, isExpired;\n\n    if (!this.cache) { return null; }\n\n    stored.data = this.storage.get(keys.data);\n    stored.protocol = this.storage.get(keys.protocol);\n    stored.thumbprint = this.storage.get(keys.thumbprint);\n\n    // the stored data is considered expired if the thumbprints\n    // don't match or if the protocol it was originally stored under\n    // has changed\n    isExpired =\n      stored.thumbprint !== this.thumbprint ||\n      stored.protocol !== location.protocol;\n\n    // TODO: if expired, remove from local storage\n\n    return stored.data && !isExpired ? stored.data : null;\n  },\n\n  fromNetwork: function(cb) {\n    var that = this, settings;\n\n    if (!cb) { return; }\n\n    settings = this.prepare(this._settings());\n\n    // this.transport(settings).fail(onError).done(onResponse);\n    this.transport(settings).then(onResponse, onError);\n\n    function onError() { cb(true); }\n    function onResponse(resp) { cb(null, that.transform(resp)); }\n  },\n\n  clear: function() {\n    this.storage.clear();\n    return this;\n  }\n});\n\nmodule.exports = Prefetch;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/prefetch.js","var storage2 = require('storage2');\nvar _ = require('./utils');\n\nvar LOCAL_STORAGE;\n\ntry {\n  LOCAL_STORAGE = storage2.localStorage;\n\n  // while in private browsing mode, some browsers make\n  // localStorage available, but throw an error when used\n  LOCAL_STORAGE.setItem('~~~', '!');\n  LOCAL_STORAGE.removeItem('~~~');\n} catch (err) {\n  LOCAL_STORAGE = null;\n}\n\n// constructor\n// -----------\n\nfunction PersistentStorage(namespace, override) {\n  this.prefix = ['__', namespace, '__'].join('');\n  this.ttlKey = '__ttl__';\n  this.keyMatcher = new RegExp('^' + _.escapeRegExChars(this.prefix));\n\n  // for testing purpose\n  this.ls = override || LOCAL_STORAGE;\n\n  // if local storage isn't available, everything becomes a noop\n  !this.ls && this._noop();\n}\n\n// instance methods\n// ----------------\n\n_.mixin(PersistentStorage.prototype, {\n  // ### private\n\n  _prefix: function(key) {\n    return this.prefix + key;\n  },\n\n  _ttlKey: function(key) {\n    return this._prefix(key) + this.ttlKey;\n  },\n\n  _noop: function() {\n    this.get =\n    this.set =\n    this.remove =\n    this.clear =\n    this.isExpired = _.noop;\n  },\n\n  _safeSet: function(key, val) {\n    try {\n      this.ls.setItem(key, val);\n    } catch (err) {\n      // hit the localstorage limit so clean up and better luck next time\n      if (err.name === 'QuotaExceededError') {\n        this.clear();\n        this._noop();\n      }\n    }\n  },\n\n  // ### public\n\n  get: function(key) {\n    if (this.isExpired(key)) {\n      this.remove(key);\n    }\n\n    return decode(this.ls.getItem(this._prefix(key)));\n  },\n\n  set: function(key, val, ttl) {\n    if (_.isNumber(ttl)) {\n      this._safeSet(this._ttlKey(key), encode(now() + ttl));\n    }\n\n    else {\n      this.ls.removeItem(this._ttlKey(key));\n    }\n\n    return this._safeSet(this._prefix(key), encode(val));\n  },\n\n  remove: function(key) {\n    this.ls.removeItem(this._ttlKey(key));\n    this.ls.removeItem(this._prefix(key));\n\n    return this;\n  },\n\n  clear: function() {\n    var i, keys = gatherMatchingKeys(this.keyMatcher);\n\n    for (i = keys.length; i--;) {\n      this.remove(keys[i]);\n    }\n\n    return this;\n  },\n\n  isExpired: function(key) {\n    var ttl = decode(this.ls.getItem(this._ttlKey(key)));\n\n    return _.isNumber(ttl) && now() > ttl ? true : false;\n  }\n});\n\n\n// helper functions\n// ----------------\n\nfunction now() {\n  return new Date().getTime();\n}\n\nfunction encode(val) {\n  // convert undefined to null to avoid issues with JSON.parse\n  return JSON.stringify(_.isUndefined(val) ? null : val);\n}\n\nfunction decode(val) {\n  return JSON.parse(val);\n  // return $.parseJSON(val);\n}\n\nfunction gatherMatchingKeys(keyMatcher) {\n  var i, key, keys = [], len = LOCAL_STORAGE.length;\n\n  for (i = 0; i < len; i++) {\n    if ((key = LOCAL_STORAGE.key(i)).match(keyMatcher)) {\n      keys.push(key.replace(keyMatcher, ''));\n    }\n  }\n\n  return keys;\n}\n\nmodule.exports = PersistentStorage;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/persistent_storage.js","var Storage = require('./storage');\nvar cookie = require('./cookie');\n\nvar _storage_support = true;\n\ntry {\n  window.localStorage.setItem('test', '42');\n  window.sessionStorage.setItem('test', '42');\n} catch (e) {\n  _storage_support = false;\n}\n\nif (_storage_support) {\n  module.exports = {\n    localStorage: window.localStorage,\n    sessionStorage: window.sessionStorage\n  };\n} else {\n  var lsCookie = cookie.read('localStorage');\n\n  var ls = new Storage(\n    lsCookie ? JSON.parse(lsCookie) : {}, // init\n    function(data) {\n      // set\n      cookie.create('localStorage', JSON.stringify(data), 365);\n    },\n    function() {\n      // clear\n      cookie.create('localStorage', '', 365);\n    }\n  );\n\n  var ss = new Storage();\n\n  module.exports = {\n    localStorage: ls,\n    sessionStorage: ss\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/storage2/lib/client.js\n// module id = 14\n// module chunks = 0","var numKeys = require('./num-keys');\n\nfunction Storage(obj, set, clear) {\n  this._obj = obj || {};\n  this._set = set;\n  this._clear = clear;\n\n  this.length = 0;\n}\n\nvar proto = Storage.prototype;\n\n// html5 storage api\n\nproto.setItem = function(k, v) {\n  k = encodeURIComponent(k);\n  this._obj[k] = v;\n\n  this._updateLength();\n  if (this._set) this._set(this._obj);\n};\n\nproto.getItem = function(k) {\n  k = encodeURIComponent(k);\n  return this._obj[k] === undefined ? null : this._obj[k];\n};\n\nproto.removeItem = function(k) {\n  k = encodeURIComponent(k);\n  delete this._obj[k];\n\n  this._updateLength();\n  if (this._set) this._set(this._obj);\n};\n\nproto.key = function(i) {\n  var ctr = 0;\n  for (var k in this._obj) {\n    if (ctr === i) return decodeURIComponent(k);\n    else ctr++;\n  }\n\n  return null;\n};\n\nproto.clear = function() {\n  delete this['_obj'];\n\n  if (this._clear) this._clear();\n};\n\n// private\nproto._updateLength = function() {\n  this.length = numKeys(this._obj);\n};\n\nmodule.exports = Storage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/storage2/lib/storage.js\n// module id = 15\n// module chunks = 0","module.exports = function(obj) {\n  var n = 0;\n  for (var k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      n += 1;\n    }\n  }\n\n  return n;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/storage2/lib/num-keys.js\n// module id = 16\n// module chunks = 0","function createCookie(name, value, days) {\n  var date, expires;\n\n  if (days) {\n    date = new Date();\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    expires = '; expires=' + date.toGMTString();\n  } else {\n    expires = '';\n  }\n  document.cookie = name + '=' + value + expires + '; path=/';\n}\n\nfunction readCookie(name) {\n  var nameEQ = name + '=',\n    ca = document.cookie.split(';'),\n    i,\n    c;\n\n  for (i = 0; i < ca.length; i++) {\n    c = ca[i];\n    while (c.charAt(0) === ' ') {\n      c = c.substring(1, c.length);\n    }\n\n    if (c.indexOf(nameEQ) === 0) {\n      return c.substring(nameEQ.length, c.length);\n    }\n  }\n  return null;\n}\n\nmodule.exports = {\n  create: createCookie,\n  read: readCookie\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/storage2/lib/cookie.js\n// module id = 17\n// module chunks = 0","/*\n * typeahead.js\n * https://github.com/twitter/typeahead.js\n * Copyright 2013-2014 Twitter, Inc. and other contributors; Licensed MIT\n */\n\nvar _ = require('./utils');\n\nfunction whitespace(str) {\n  str = _.toStr(str);\n  return str ? str.split(/\\s+/) : [];\n}\n\nfunction nonword(str) {\n  str = _.toStr(str);\n  return str ? str.split(/\\W+/) : [];\n}\n\nfunction getObjTokenizer(tokenizer) {\n  return function setKey(keys) {\n    keys = _.isArray(keys) ? keys : [].slice.call(arguments, 0);\n\n    return function tokenize(o) {\n      var tokens = [];\n\n      _.each(keys, function(k) {\n        tokens = tokens.concat(tokenizer(_.toStr(o[k])));\n      });\n\n      return tokens;\n    };\n  };\n}\n\nmodule.exports = {\n  nonword: nonword,\n  whitespace: whitespace,\n  obj: {\n    nonword: getObjTokenizer(nonword),\n    whitespace: getObjTokenizer(whitespace)\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/tokenizers.js","var _ = require('./utils');\nvar ajax = require('./ajax');\nvar VERSION = require('./version');\n\nmodule.exports = function(o) {\n  var defaults, sorter;\n\n  defaults = {\n    initialize: true,\n    identify: _.stringify,\n    datumTokenizer: null,\n    queryTokenizer: null,\n    sufficient: 5,\n    sorter: null,\n    local: [],\n    prefetch: null,\n    remote: null\n  };\n\n  o = _.mixin(defaults, o || {});\n\n  // throw error if required options are not set\n  !o.datumTokenizer && _.error('datumTokenizer is required');\n  !o.queryTokenizer && _.error('queryTokenizer is required');\n\n  sorter = o.sorter;\n  o.sorter = sorter ? function(x) { return x.sort(sorter); } : _.identity;\n\n  o.local = _.isFunction(o.local) ? o.local() : o.local;\n  o.prefetch = parsePrefetch(o.prefetch);\n  o.remote = parseRemote(o.remote);\n\n  return o;\n};\n\nfunction parsePrefetch(o) {\n  var defaults;\n\n  if (!o) { return null; }\n\n  defaults = {\n    url: null,\n    ttl: 24 * 60 * 60 * 1000, // 1 day\n    cache: true,\n    cacheKey: null,\n    thumbprint: '',\n    prepare: _.identity,\n    transform: _.identity,\n    transport: null\n  };\n\n  // support basic (url) and advanced configuration\n  o = _.isString(o) ? { url: o } : o;\n  o = _.mixin(defaults, o);\n\n  // throw error if required options are not set\n  !o.url && _.error('prefetch requires url to be set');\n\n  // DEPRECATED: filter will be dropped in v1\n  o.transform = o.filter || o.transform;\n\n  o.cacheKey = o.cacheKey || o.url;\n  o.thumbprint = VERSION + o.thumbprint;\n  o.transport = o.transport ? callbackToDeferred(o.transport) : ajax;\n\n  return o;\n}\n\nfunction parseRemote(o) {\n  var defaults;\n\n  if (!o) { return; }\n\n  defaults = {\n    url: null,\n    cache: true, // leave undocumented\n    prepare: null,\n    replace: null,\n    wildcard: null,\n    limiter: null,\n    rateLimitBy: 'debounce',\n    rateLimitWait: 300,\n    transform: _.identity,\n    transport: null\n  };\n\n  // support basic (url) and advanced configuration\n  o = _.isString(o) ? { url: o } : o;\n  o = _.mixin(defaults, o);\n\n  // throw error if required options are not set\n  !o.url && _.error('remote requires url to be set');\n\n  // DEPRECATED: filter will be dropped in v1\n  o.transform = o.filter || o.transform;\n\n  o.prepare = toRemotePrepare(o);\n  o.limiter = toLimiter(o);\n  o.transport = o.transport ? callbackToDeferred(o.transport) : ajax;\n\n  delete o.replace;\n  delete o.wildcard;\n  delete o.rateLimitBy;\n  delete o.rateLimitWait;\n\n  return o;\n}\n\nfunction toRemotePrepare(o) {\n  var prepare, replace, wildcard;\n\n  prepare = o.prepare;\n  replace = o.replace;\n  wildcard = o.wildcard;\n\n  if (prepare) { return prepare; }\n\n  if (replace) {\n    prepare = prepareByReplace;\n  }\n\n  else if (o.wildcard) {\n    prepare = prepareByWildcard;\n  }\n\n  else {\n    prepare = idenityPrepare;\n  }\n\n  return prepare;\n\n  function prepareByReplace(query, settings) {\n    settings.url = replace(settings.url, query);\n    return settings;\n  }\n\n  function prepareByWildcard(query, settings) {\n    settings.url = settings.url.replace(wildcard, encodeURIComponent(query));\n    return settings;\n  }\n\n  function idenityPrepare(query, settings) {\n    return settings;\n  }\n}\n\nfunction toLimiter(o) {\n  var limiter, method, wait;\n\n  limiter = o.limiter;\n  method = o.rateLimitBy;\n  wait = o.rateLimitWait;\n\n  if (!limiter) {\n    limiter = /^throttle$/i.test(method) ? throttle(wait) : debounce(wait);\n  }\n\n  return limiter;\n\n  function debounce(wait) {\n    return function(fn) {\n      return _.debounce(fn, wait);\n    };\n  }\n\n  function throttle(wait) {\n    return function (fn) {\n      return _.throttle(fn, wait);\n    };\n  }\n}\n\nfunction callbackToDeferred(fn) {\n  return function(o) {\n    // var deferred = $.Deferred();\n\n    // fn(o, onSuccess, onError);\n\n    // return deferred;\n\n    // function onSuccess(resp) {\n    //   // defer in case fn is synchronous, otherwise done\n    //   // and always handlers will be attached after the resolution\n    //   _.defer(function() { deferred.resolve(resp); });\n    // }\n\n    // function onError(err) {\n    //   // defer in case fn is synchronous, otherwise done\n    //   // and always handlers will be attached after the resolution\n    //   _.defer(function() { deferred.reject(err); });\n    // }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/options_parser.js","var Promise = require('es6-promise').Promise;\nvar request = require('superagent');\n\nmodule.exports = function(o) {\n  return new Promise(function(resolve, reject) {\n    request.get(o.url).end(function(err, res) {\n      if(err) return reject(err);\n      resolve(res.body);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ajax.js","/**\n * Module dependencies.\n */\n\nvar Emitter = require('emitter');\nvar reduce = require('reduce');\nvar requestBase = require('./request-base');\nvar isObject = require('./is-object');\n\n/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  root = this;\n}\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * TODO: future proof, move to compoent land\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isHost(obj) {\n  var str = {}.toString.call(obj);\n\n  switch (str) {\n    case '[object File]':\n    case '[object Blob]':\n    case '[object FormData]':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Expose `request`.\n */\n\nvar request = module.exports = require('./request').bind(null, Request);\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  return false;\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    if (null != obj[key]) {\n      pushEncodedKeyValuePair(pairs, key, obj[key]);\n        }\n      }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (Array.isArray(val)) {\n    return val.forEach(function(v) {\n      pushEncodedKeyValuePair(pairs, key, v);\n    });\n  }\n  pairs.push(encodeURIComponent(key)\n    + '=' + encodeURIComponent(val));\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var parts;\n  var pair;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    parts = pair.split('=');\n    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction type(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction params(str){\n  return reduce(str.split(/ *; */), function(obj, str){\n    var parts = str.split(/ *= */)\n      , key = parts.shift()\n      , val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req, options) {\n  options = options || {};\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  this.setStatusProperties(this.xhr.status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this.setHeaderProperties(this.header);\n  this.body = this.req.method != 'HEAD'\n    ? this.parseBody(this.text ? this.text : this.xhr.response)\n    : null;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponse.prototype.get = function(field){\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponse.prototype.setHeaderProperties = function(header){\n  // content-type\n  var ct = this.header['content-type'] || '';\n  this.type = type(ct);\n\n  // params\n  var obj = params(ct);\n  for (var key in obj) this[key] = obj[key];\n};\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype.parseBody = function(str){\n  var parse = request.parse[this.type];\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponse.prototype.setStatusProperties = function(status){\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  var type = status / 100 | 0;\n\n  // status / class\n  this.status = this.statusCode = status;\n  this.statusType = type;\n\n  // basics\n  this.info = 1 == type;\n  this.ok = 2 == type;\n  this.clientError = 4 == type;\n  this.serverError = 5 == type;\n  this.error = (4 == type || 5 == type)\n    ? this.toError()\n    : false;\n\n  // sugar\n  this.accepted = 202 == status;\n  this.noContent = 204 == status;\n  this.badRequest = 400 == status;\n  this.unauthorized = 401 == status;\n  this.notAcceptable = 406 == status;\n  this.notFound = 404 == status;\n  this.forbidden = 403 == status;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;\n      // issue #876: return the http status code if the response parsing fails\n      err.statusCode = self.xhr && self.xhr.status ? self.xhr.status : null;\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    if (err) {\n      return self.callback(err, res);\n    }\n\n    if (res.status >= 200 && res.status < 300) {\n      return self.callback(err, res);\n    }\n\n    var new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n    new_err.original = err;\n    new_err.response = res;\n    new_err.status = res.status;\n\n    self.callback(new_err, res);\n  });\n}\n\n/**\n * Mixin `Emitter` and `requestBase`.\n */\n\nEmitter(Request.prototype);\nfor (var key in requestBase) {\n  Request.prototype[key] = requestBase[key];\n}\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  if (this.aborted) return;\n  this.aborted = true;\n  this.xhr && this.xhr.abort();\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set responseType to `val`. Presently valid responseTypes are 'blob' and \n * 'arraybuffer'.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @param {Object} options with 'type' property 'auto' or 'basic' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (!options) {\n    options = {\n      type: 'basic'\n    }\n  }\n\n  switch (options.type) {\n    case 'basic':\n      var str = btoa(user + ':' + pass);\n      this.set('Authorization', 'Basic ' + str);\n    break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n    break;\n  }\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `filename`.\n *\n * ``` js\n * request.post('/upload')\n *   .attach(new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String} filename\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, filename){\n  this._getFormData().append(field, file, filename || file.name);\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n  *      request.post('/user')\n  *        .send('name=tobi')\n  *        .send('species=ferret')\n  *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.send = function(data){\n  var obj = isObject(data);\n  var type = this._header['content-type'];\n\n  // merge\n  if (obj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!obj || isHost(data)) return this;\n  if (!type) this.type('json');\n  return this;\n};\n\n/**\n * @deprecated\n */\nResponse.prototype.parse = function serialize(fn){\n  if (root.console) {\n    console.warn(\"Client-side parse() method has been renamed to serialize(). This method is not compatible with superagent v2.0\");\n  }\n  this.serialize(fn);\n  return this;\n};\n\nResponse.prototype.serialize = function serialize(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  this.clearTimeout();\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequest.prototype.timeoutError = function(){\n  var timeout = this._timeout;\n  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  this.callback(err);\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequest.prototype.withCredentials = function(){\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var query = this._query.join('&');\n  var timeout = this._timeout;\n  var data = this._formData || this._data;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    if (4 != xhr.readyState) return;\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (0 == status) {\n      if (self.timedout) return self.timeoutError();\n      if (self.aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(e){\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = 'download';\n    self.emit('progress', e);\n  };\n  if (this.hasListeners('progress')) {\n    xhr.onprogress = handleProgress;\n  }\n  try {\n    if (xhr.upload && this.hasListeners('progress')) {\n      xhr.upload.onprogress = handleProgress;\n    }\n  } catch(e) {\n    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n    // Reported here:\n    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n  }\n\n  // timeout\n  if (timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self.timedout = true;\n      self.abort();\n    }, timeout);\n  }\n\n  // querystring\n  if (query) {\n    query = request.serializeObject(query);\n    this.url += ~this.url.indexOf('?')\n      ? '&' + query\n      : '?' + query;\n  }\n\n  // initiate request\n  if (this.username && this.password) {\n    xhr.open(this.method, this.url, true, this.username, this.password);\n  } else {\n    xhr.open(this.method, this.url, true);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._parser || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) serialize = request.serialize['application/json'];\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n\n/**\n * Expose `Request`.\n */\n\nrequest.Request = Request;\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nfunction del(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/superagent/lib/client.js\n// module id = 21\n// module chunks = 0","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/component-emitter/index.js\n// module id = 22\n// module chunks = 0","\n/**\n * Reduce `arr` with `fn`.\n *\n * @param {Array} arr\n * @param {Function} fn\n * @param {Mixed} initial\n *\n * TODO: combatible error handling?\n */\n\nmodule.exports = function(arr, fn, initial){  \n  var idx = 0;\n  var len = arr.length;\n  var curr = arguments.length == 3\n    ? initial\n    : arr[idx++];\n\n  while (idx < len) {\n    curr = fn.call(null, curr, arr[idx], ++idx, arr);\n  }\n  \n  return curr;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/reduce-component/index.js\n// module id = 23\n// module chunks = 0","/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = require('./is-object');\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nexports.clearTimeout = function _clearTimeout(){\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n\n/**\n * Force given parser\n *\n * Sets the body parser no matter type.\n *\n * @param {Function}\n * @api public\n */\n\nexports.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\nexports.timeout = function timeout(ms){\n  this._timeout = ms;\n  return this;\n};\n\n/**\n * Faux promise support\n *\n * @param {Function} fulfill\n * @param {Function} reject\n * @return {Request}\n */\n\nexports.then = function then(fulfill, reject) {\n  return this.end(function(err, res) {\n    err ? reject(err) : fulfill(res);\n  });\n}\n\n/**\n * Allow for extension\n */\n\nexports.use = function use(fn) {\n  fn(this);\n  return this;\n}\n\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nexports.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nexports.getHeader = exports.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nexports.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nexports.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val` for \"multipart/form-data\"\n * request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n * ```\n *\n * @param {String} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nexports.field = function(name, val) {\n  this._getFormData().append(name, val);\n  return this;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/superagent/lib/request-base.js\n// module id = 24\n// module chunks = 0","// The node and browser modules expose versions of this with the\n// appropriate constructor function bound as first argument\n/**\n * Issue a request:\n *\n * Examples:\n *\n *    request('GET', '/users').end(callback)\n *    request('/users').end(callback)\n *    request('/users', callback)\n *\n * @param {String} method\n * @param {String|Function} url or callback\n * @return {Request}\n * @api public\n */\n\nfunction request(RequestConstructor, method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new RequestConstructor('GET', method).end(url);\n  }\n\n  // url first\n  if (2 == arguments.length) {\n    return new RequestConstructor('GET', method);\n  }\n\n  return new RequestConstructor(method, url);\n}\n\nmodule.exports = request;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/superagent/lib/request.js\n// module id = 25\n// module chunks = 0","/*\n * typeahead.js\n * https://github.com/twitter/typeahead.js\n * Copyright 2013-2014 Twitter, Inc. and other contributors; Licensed MIT\n */\n\nmodule.exports = '1.0.0';\n\n\n\n// WEBPACK FOOTER //\n// ./lib/version.js","var _ = require('./utils');\nvar Immutable = require('immutable')\n\nvar CHILDREN = 'c';\nvar IDS = 'i';\n\nfunction SearchIndex(o) {\n  o = o || {};\n\n  if (!o.datumTokenizer || !o.queryTokenizer) {\n    throw new Error('datumTokenizer and queryTokenizer are both required');\n  }\n\n  this.identify = o.identify || _.stringify;\n  this.datumTokenizer = o.datumTokenizer;\n  this.queryTokenizer = o.queryTokenizer;\n\n  this.reset();\n}\n\n_.mixin(SearchIndex.prototype, {\n\n  bootstrap: function(o) {\n    this.datums = o.datums;\n    this.trie = o.trie;\n  },\n\n  add: function(data) {\n    var that = this;\n\n    data = Immutable.List.isList(data) ? data : [data]\n\n    data.forEach(function(datum) {\n      var id, tokens;\n\n      that.datums[id = that.identify(datum)] = datum;\n      tokens = normalizeTokens(that.datumTokenizer(datum));\n\n      _.each(tokens, function(token) {\n        var node, chars, ch;\n\n        node = that.trie;\n        chars = token.split('');\n\n        while (ch = chars.shift()) {\n          node = node[CHILDREN][ch] || (node[CHILDREN][ch] = newNode());\n          node[IDS].push(id);\n        }\n      });\n    });\n  },\n\n  remove: function(data) {\n    var that = this;\n\n    data = Immutable.List.isList(data) ? data : [data]\n\n    data.forEach(function(datum) {\n      var tokens = normalizeTokens(that.datumTokenizer(datum));\n      var id = that.identify(datum)\n\n      _.each(tokens, function(token) {\n        var node, chars, ch, parent;\n\n        node = that.trie;\n        lastNode = null;\n        chars = token.split('');\n\n        while (ch = chars.shift()) {\n          node = node[CHILDREN][ch];\n\n          if (node) {\n            node[IDS] = _.filter(node[IDS], function(item) {\n              return item !== id\n            });\n\n            if (node[IDS] && node[IDS].length === 0) {\n              lastNode[CHILDREN][ch] = undefined\n              break;\n            }\n          }\n\n          lastNode = node\n        }\n      });\n\n      delete that.datums[id];\n    });\n  },\n\n  get: function(ids) {\n    var that = this;\n\n    return _.map(ids, function(id) { return that.datums[id]; });\n  },\n\n  search: function(query) {\n    var that = this, tokens, matches;\n\n    tokens = normalizeTokens(this.queryTokenizer(query));\n\n    _.each(tokens, function(token) {\n      var node, chars, ch, ids;\n\n      // previous tokens didn't share any matches\n      if (matches && matches.length === 0) {\n        return false;\n      }\n\n      node = that.trie;\n      chars = token.split('');\n\n      while (node && (ch = chars.shift())) {\n        node = node[CHILDREN][ch];\n      }\n\n      if (node && chars.length === 0) {\n        ids = node[IDS].slice(0);\n        matches = matches ? getIntersection(matches, ids) : ids;\n      }\n\n      // break early if we find out there are no possible matches\n      else {\n        matches = [];\n        return false;\n      }\n    });\n\n    return matches ?\n      _.map(unique(matches), function(id) { return that.datums[id]; }) : [];\n  },\n\n  all: function() {\n    var values = [];\n\n    for (var key in this.datums) {\n      values.push(this.datums[key]);\n    }\n\n    return values;\n  },\n\n  reset: function() {\n    this.datums = {};\n    this.trie = newNode();\n  },\n\n  serialize: function serialize() {\n    return { datums: this.datums, trie: this.trie };\n  }\n});\n\n\nfunction normalizeTokens(tokens) {\n // filter out falsy tokens\n  tokens = _.filter(tokens, function(token) { return !!token; });\n\n  // normalize tokens\n  tokens = _.map(tokens, function(token) { return token.toLowerCase(); });\n\n  return tokens;\n}\n\nfunction newNode() {\n  var node = {};\n\n  node[IDS] = [];\n  node[CHILDREN] = {};\n\n  return node;\n}\n\nfunction unique(array) {\n  var seen = {}, uniques = [];\n\n  for (var i = 0, len = array.length; i < len; i++) {\n    if (!seen[array[i]]) {\n      seen[array[i]] = true;\n      uniques.push(array[i]);\n    }\n  }\n\n  return uniques;\n}\n\nfunction getIntersection(arrayA, arrayB) {\n  var ai = 0, bi = 0, intersection = [];\n\n  arrayA = arrayA.sort();\n  arrayB = arrayB.sort();\n\n  var lenArrayA = arrayA.length, lenArrayB = arrayB.length;\n\n  while (ai < lenArrayA && bi < lenArrayB) {\n    if (arrayA[ai] < arrayB[bi]) {\n      ai++;\n    }\n\n    else if (arrayA[ai] > arrayB[bi]) {\n      bi++;\n    }\n\n    else {\n      intersection.push(arrayA[ai]);\n      ai++;\n      bi++;\n    }\n  }\n\n  return intersection;\n}\n\nmodule.exports = SearchIndex;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/search_index.js","/**\n *  Copyright (c) 2014-2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Immutable = factory());\n}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n\n  function Iterable(value) {\n      return isIterable(value) ? value : Seq(value);\n    }\n\n\n  createClass(KeyedIterable, Iterable);\n    function KeyedIterable(value) {\n      return isKeyed(value) ? value : KeyedSeq(value);\n    }\n\n\n  createClass(IndexedIterable, Iterable);\n    function IndexedIterable(value) {\n      return isIndexed(value) ? value : IndexedSeq(value);\n    }\n\n\n  createClass(SetIterable, Iterable);\n    function SetIterable(value) {\n      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n    }\n\n\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = { value: false };\n  var DID_ALTER = { value: false };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32−1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n      index = uint32Index;\n    }\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || (size !== undefined && begin <= -size)) &&\n      (end === undefined || (size !== undefined && end >= size));\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ?\n      defaultIndex :\n      index < 0 ?\n        Math.max(0, size + index) :\n        size === undefined ?\n          index :\n          Math.min(size, index);\n  }\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n\n  function Iterator(next) {\n      this.next = next;\n    }\n\n    Iterator.prototype.toString = function() {\n      return '[Iterator]';\n    };\n\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect =\n  Iterator.prototype.toSource = function () { return this.toString(); }\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n      value: value, done: false\n    });\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return { value: undefined, done: true };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (\n      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]\n    );\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n    function Seq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        isIterable(value) ? value.toSeq() : seqFromValue(value);\n    }\n\n    Seq.of = function(/*...values*/) {\n      return Seq(arguments);\n    };\n\n    Seq.prototype.toSeq = function() {\n      return this;\n    };\n\n    Seq.prototype.toString = function() {\n      return this.__toString('Seq {', '}');\n    };\n\n    Seq.prototype.cacheResult = function() {\n      if (!this._cache && this.__iterateUncached) {\n        this._cache = this.entrySeq().toArray();\n        this.size = this._cache.length;\n      }\n      return this;\n    };\n\n    // abstract __iterateUncached(fn, reverse)\n\n    Seq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, true);\n    };\n\n    // abstract __iteratorUncached(type, reverse)\n\n    Seq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, true);\n    };\n\n\n\n  createClass(KeyedSeq, Seq);\n    function KeyedSeq(value) {\n      return value === null || value === undefined ?\n        emptySequence().toKeyedSeq() :\n        isIterable(value) ?\n          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :\n          keyedSeqFromValue(value);\n    }\n\n    KeyedSeq.prototype.toKeyedSeq = function() {\n      return this;\n    };\n\n\n\n  createClass(IndexedSeq, Seq);\n    function IndexedSeq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n    }\n\n    IndexedSeq.of = function(/*...values*/) {\n      return IndexedSeq(arguments);\n    };\n\n    IndexedSeq.prototype.toIndexedSeq = function() {\n      return this;\n    };\n\n    IndexedSeq.prototype.toString = function() {\n      return this.__toString('Seq [', ']');\n    };\n\n    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, false);\n    };\n\n    IndexedSeq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, false);\n    };\n\n\n\n  createClass(SetSeq, Seq);\n    function SetSeq(value) {\n      return (\n        value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value\n      ).toSetSeq();\n    }\n\n    SetSeq.of = function(/*...values*/) {\n      return SetSeq(arguments);\n    };\n\n    SetSeq.prototype.toSetSeq = function() {\n      return this;\n    };\n\n\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\n\n\n  createClass(ArraySeq, IndexedSeq);\n    function ArraySeq(array) {\n      this._array = array;\n      this.size = array.length;\n    }\n\n    ArraySeq.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n    };\n\n    ArraySeq.prototype.__iterate = function(fn, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ArraySeq.prototype.__iterator = function(type, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}\n      );\n    };\n\n\n\n  createClass(ObjectSeq, KeyedSeq);\n    function ObjectSeq(object) {\n      var keys = Object.keys(object);\n      this._object = object;\n      this._keys = keys;\n      this.size = keys.length;\n    }\n\n    ObjectSeq.prototype.get = function(key, notSetValue) {\n      if (notSetValue !== undefined && !this.has(key)) {\n        return notSetValue;\n      }\n      return this._object[key];\n    };\n\n    ObjectSeq.prototype.has = function(key) {\n      return this._object.hasOwnProperty(key);\n    };\n\n    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        if (fn(object[key], key, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ObjectSeq.prototype.__iterator = function(type, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, key, object[key]);\n      });\n    };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(IterableSeq, IndexedSeq);\n    function IterableSeq(iterable) {\n      this._iterable = iterable;\n      this.size = iterable.length || iterable.size;\n    }\n\n    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      var iterations = 0;\n      if (isIterator(iterator)) {\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (fn(step.value, iterations++, this) === false) {\n            break;\n          }\n        }\n      }\n      return iterations;\n    };\n\n    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      if (!isIterator(iterator)) {\n        return new Iterator(iteratorDone);\n      }\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step : iteratorValue(type, iterations++, step.value);\n      });\n    };\n\n\n\n  createClass(IteratorSeq, IndexedSeq);\n    function IteratorSeq(iterator) {\n      this._iterator = iterator;\n      this._iteratorCache = [];\n    }\n\n    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      while (iterations < cache.length) {\n        if (fn(cache[iterations], iterations++, this) === false) {\n          return iterations;\n        }\n      }\n      var step;\n      while (!(step = iterator.next()).done) {\n        var val = step.value;\n        cache[iterations] = val;\n        if (fn(val, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n\n    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      return new Iterator(function()  {\n        if (iterations >= cache.length) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          cache[iterations] = step.value;\n        }\n        return iteratorValue(type, iterations, cache[iterations++]);\n      });\n    };\n\n\n\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq =\n      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :\n      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :\n      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :\n      typeof value === 'object' ? new ObjectSeq(value) :\n      undefined;\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of [k, v] entries, '+\n        'or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) ||\n      (typeof value === 'object' && new ObjectSeq(value));\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values, or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return (\n      isArrayLike(value) ? new ArraySeq(value) :\n      isIterator(value) ? new IteratorSeq(value) :\n      hasIterator(value) ? new IterableSeq(value) :\n      undefined\n    );\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  function fromJS(json, converter) {\n    return converter ?\n      fromJSWith(converter, json, '', {'': json}) :\n      fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' &&\n        typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n        return true;\n      }\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n    if (typeof valueA.equals === 'function' &&\n        typeof valueB.equals === 'function' &&\n        valueA.equals(valueB)) {\n      return true;\n    }\n    return false;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (\n      !isIterable(b) ||\n      a.size !== undefined && b.size !== undefined && a.size !== b.size ||\n      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||\n      isKeyed(a) !== isKeyed(b) ||\n      isIndexed(a) !== isIndexed(b) ||\n      isOrdered(a) !== isOrdered(b)\n    ) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function(v, k)  {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n    var bSize = b.__iterate(function(v, k)  {\n      if (notAssociative ? !a.has(v) :\n          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Repeat, IndexedSeq);\n\n    function Repeat(value, times) {\n      if (!(this instanceof Repeat)) {\n        return new Repeat(value, times);\n      }\n      this._value = value;\n      this.size = times === undefined ? Infinity : Math.max(0, times);\n      if (this.size === 0) {\n        if (EMPTY_REPEAT) {\n          return EMPTY_REPEAT;\n        }\n        EMPTY_REPEAT = this;\n      }\n    }\n\n    Repeat.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Repeat []';\n      }\n      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n    };\n\n    Repeat.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._value : notSetValue;\n    };\n\n    Repeat.prototype.includes = function(searchValue) {\n      return is(this._value, searchValue);\n    };\n\n    Repeat.prototype.slice = function(begin, end) {\n      var size = this.size;\n      return wholeSlice(begin, end, size) ? this :\n        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n    };\n\n    Repeat.prototype.reverse = function() {\n      return this;\n    };\n\n    Repeat.prototype.indexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return 0;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.lastIndexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return this.size;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.__iterate = function(fn, reverse) {\n      for (var ii = 0; ii < this.size; ii++) {\n        if (fn(this._value, ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}\n      );\n    };\n\n    Repeat.prototype.equals = function(other) {\n      return other instanceof Repeat ?\n        is(this._value, other._value) :\n        deepEqual(other);\n    };\n\n\n  var EMPTY_REPEAT;\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  createClass(Range, IndexedSeq);\n\n    function Range(start, end, step) {\n      if (!(this instanceof Range)) {\n        return new Range(start, end, step);\n      }\n      invariant(step !== 0, 'Cannot step a Range by 0');\n      start = start || 0;\n      if (end === undefined) {\n        end = Infinity;\n      }\n      step = step === undefined ? 1 : Math.abs(step);\n      if (end < start) {\n        step = -step;\n      }\n      this._start = start;\n      this._end = end;\n      this._step = step;\n      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n      if (this.size === 0) {\n        if (EMPTY_RANGE) {\n          return EMPTY_RANGE;\n        }\n        EMPTY_RANGE = this;\n      }\n    }\n\n    Range.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Range []';\n      }\n      return 'Range [ ' +\n        this._start + '...' + this._end +\n        (this._step !== 1 ? ' by ' + this._step : '') +\n      ' ]';\n    };\n\n    Range.prototype.get = function(index, notSetValue) {\n      return this.has(index) ?\n        this._start + wrapIndex(this, index) * this._step :\n        notSetValue;\n    };\n\n    Range.prototype.includes = function(searchValue) {\n      var possibleIndex = (searchValue - this._start) / this._step;\n      return possibleIndex >= 0 &&\n        possibleIndex < this.size &&\n        possibleIndex === Math.floor(possibleIndex);\n    };\n\n    Range.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      begin = resolveBegin(begin, this.size);\n      end = resolveEnd(end, this.size);\n      if (end <= begin) {\n        return new Range(0, 0);\n      }\n      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n    };\n\n    Range.prototype.indexOf = function(searchValue) {\n      var offsetValue = searchValue - this._start;\n      if (offsetValue % this._step === 0) {\n        var index = offsetValue / this._step;\n        if (index >= 0 && index < this.size) {\n          return index\n        }\n      }\n      return -1;\n    };\n\n    Range.prototype.lastIndexOf = function(searchValue) {\n      return this.indexOf(searchValue);\n    };\n\n    Range.prototype.__iterate = function(fn, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(value, ii, this) === false) {\n          return ii + 1;\n        }\n        value += reverse ? -step : step;\n      }\n      return ii;\n    };\n\n    Range.prototype.__iterator = function(type, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      var ii = 0;\n      return new Iterator(function()  {\n        var v = value;\n        value += reverse ? -step : step;\n        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n      });\n    };\n\n    Range.prototype.equals = function(other) {\n      return other instanceof Range ?\n        this._start === other._start &&\n        this._end === other._end &&\n        this._step === other._step :\n        deepEqual(this, other);\n    };\n\n\n  var EMPTY_RANGE;\n\n  createClass(Collection, Iterable);\n    function Collection() {\n      throw TypeError('Abstract');\n    }\n\n\n  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);function SetCollection() {}\n\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n\n  var imul =\n    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?\n    Math.imul :\n    function imul(a, b) {\n      a = a | 0; // int\n      b = b | 0; // int\n      var c = a & 0xffff;\n      var d = b & 0xffff;\n      // Shift by 0 fixes the sign on the high part.\n      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n    };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o;\n    if (type === 'number') {\n      if (o !== o || o === Infinity) {\n        return 0;\n      }\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash;\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = obj[UID_HASH_KEY];\n    if (hash !== undefined) {\n      return hash;\n    }\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash !== undefined) {\n        return hash;\n      }\n\n      hash = getIENodeHash(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined &&\n               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function() {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  }\n\n  // Get references to ES5 object methods.\n  var isExtensible = Object.isExtensible;\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = (function() {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }());\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1: // Element\n          return node.uniqueID;\n        case 9: // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n\n  var objHashUID = 0;\n\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function assertNotInfinite(size) {\n    invariant(\n      size !== Infinity,\n      'Cannot perform this action with an infinite size.'\n    );\n  }\n\n  createClass(Map, KeyedCollection);\n\n    // @pragma Construction\n\n    function Map(value) {\n      return value === null || value === undefined ? emptyMap() :\n        isMap(value) && !isOrdered(value) ? value :\n        emptyMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);\n      return emptyMap().withMutations(function(map ) {\n        for (var i = 0; i < keyValues.length; i += 2) {\n          if (i + 1 >= keyValues.length) {\n            throw new Error('Missing value for key: ' + keyValues[i]);\n          }\n          map.set(keyValues[i], keyValues[i + 1]);\n        }\n      });\n    };\n\n    Map.prototype.toString = function() {\n      return this.__toString('Map {', '}');\n    };\n\n    // @pragma Access\n\n    Map.prototype.get = function(k, notSetValue) {\n      return this._root ?\n        this._root.get(0, undefined, k, notSetValue) :\n        notSetValue;\n    };\n\n    // @pragma Modification\n\n    Map.prototype.set = function(k, v) {\n      return updateMap(this, k, v);\n    };\n\n    Map.prototype.setIn = function(keyPath, v) {\n      return this.updateIn(keyPath, NOT_SET, function()  {return v});\n    };\n\n    Map.prototype.remove = function(k) {\n      return updateMap(this, k, NOT_SET);\n    };\n\n    Map.prototype.deleteIn = function(keyPath) {\n      return this.updateIn(keyPath, function()  {return NOT_SET});\n    };\n\n    Map.prototype.update = function(k, notSetValue, updater) {\n      return arguments.length === 1 ?\n        k(this) :\n        this.updateIn([k], notSetValue, updater);\n    };\n\n    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n      if (!updater) {\n        updater = notSetValue;\n        notSetValue = undefined;\n      }\n      var updatedValue = updateInDeepMap(\n        this,\n        forceIterator(keyPath),\n        notSetValue,\n        updater\n      );\n      return updatedValue === NOT_SET ? undefined : updatedValue;\n    };\n\n    Map.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._root = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyMap();\n    };\n\n    // @pragma Composition\n\n    Map.prototype.merge = function(/*...iters*/) {\n      return mergeIntoMapWith(this, undefined, arguments);\n    };\n\n    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, merger, iters);\n    };\n\n    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.merge === 'function' ?\n          m.merge.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoMapWith(this, deepMerger, arguments);\n    };\n\n    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n    };\n\n    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.mergeDeep === 'function' ?\n          m.mergeDeep.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator));\n    };\n\n    Map.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator, mapper));\n    };\n\n    // @pragma Mutability\n\n    Map.prototype.withMutations = function(fn) {\n      var mutable = this.asMutable();\n      fn(mutable);\n      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n    };\n\n    Map.prototype.asMutable = function() {\n      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n    };\n\n    Map.prototype.asImmutable = function() {\n      return this.__ensureOwner();\n    };\n\n    Map.prototype.wasAltered = function() {\n      return this.__altered;\n    };\n\n    Map.prototype.__iterator = function(type, reverse) {\n      return new MapIterator(this, type, reverse);\n    };\n\n    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      this._root && this._root.iterate(function(entry ) {\n        iterations++;\n        return fn(entry[1], entry[0], this$0);\n      }, reverse);\n      return iterations;\n    };\n\n    Map.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeMap(this.size, this._root, ownerID, this.__hash);\n    };\n\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n\n  // #pragma Trie Nodes\n\n\n\n    function ArrayMapNode(ownerID, entries) {\n      this.ownerID = ownerID;\n      this.entries = entries;\n    }\n\n    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && entries.length === 1) {\n        return; // undefined\n      }\n\n      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n        return createNodes(ownerID, entries, key, value);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new ArrayMapNode(ownerID, newEntries);\n    };\n\n\n\n\n    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n      this.ownerID = ownerID;\n      this.bitmap = bitmap;\n      this.nodes = nodes;\n    }\n\n    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n      var bitmap = this.bitmap;\n      return (bitmap & bit) === 0 ? notSetValue :\n        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n    };\n\n    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var bit = 1 << keyHashFrag;\n      var bitmap = this.bitmap;\n      var exists = (bitmap & bit) !== 0;\n\n      if (!exists && value === NOT_SET) {\n        return this;\n      }\n\n      var idx = popCount(bitmap & (bit - 1));\n      var nodes = this.nodes;\n      var node = exists ? nodes[idx] : undefined;\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n      if (newNode === node) {\n        return this;\n      }\n\n      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n      }\n\n      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n        return nodes[idx ^ 1];\n      }\n\n      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n        return newNode;\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n      var newNodes = exists ? newNode ?\n        setIn(nodes, idx, newNode, isEditable) :\n        spliceOut(nodes, idx, isEditable) :\n        spliceIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.bitmap = newBitmap;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n    };\n\n\n\n\n    function HashArrayMapNode(ownerID, count, nodes) {\n      this.ownerID = ownerID;\n      this.count = count;\n      this.nodes = nodes;\n    }\n\n    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var node = this.nodes[idx];\n      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n    };\n\n    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var removed = value === NOT_SET;\n      var nodes = this.nodes;\n      var node = nodes[idx];\n\n      if (removed && !node) {\n        return this;\n      }\n\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n      if (newNode === node) {\n        return this;\n      }\n\n      var newCount = this.count;\n      if (!node) {\n        newCount++;\n      } else if (!newNode) {\n        newCount--;\n        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n          return packNodes(ownerID, nodes, newCount, idx);\n        }\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.count = newCount;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new HashArrayMapNode(ownerID, newCount, newNodes);\n    };\n\n\n\n\n    function HashCollisionNode(ownerID, keyHash, entries) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entries = entries;\n    }\n\n    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n\n      var removed = value === NOT_SET;\n\n      if (keyHash !== this.keyHash) {\n        if (removed) {\n          return this;\n        }\n        SetRef(didAlter);\n        SetRef(didChangeSize);\n        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n      }\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && len === 2) {\n        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n    };\n\n\n\n\n    function ValueNode(ownerID, keyHash, entry) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entry = entry;\n    }\n\n    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n    };\n\n    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n      var keyMatch = is(key, this.entry[0]);\n      if (keyMatch ? value === this.entry[1] : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n\n      if (removed) {\n        SetRef(didChangeSize);\n        return; // undefined\n      }\n\n      if (keyMatch) {\n        if (ownerID && ownerID === this.ownerID) {\n          this.entry[1] = value;\n          return this;\n        }\n        return new ValueNode(ownerID, this.keyHash, [key, value]);\n      }\n\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n    };\n\n\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate =\n  HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  }\n\n  BitmapIndexedNode.prototype.iterate =\n  HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  }\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  }\n\n  createClass(MapIterator, Iterator);\n\n    function MapIterator(map, type, reverse) {\n      this._type = type;\n      this._reverse = reverse;\n      this._stack = map._root && mapIteratorFrame(map._root);\n    }\n\n    MapIterator.prototype.next = function() {\n      var type = this._type;\n      var stack = this._stack;\n      while (stack) {\n        var node = stack.node;\n        var index = stack.index++;\n        var maxIndex;\n        if (node.entry) {\n          if (index === 0) {\n            return mapIteratorValue(type, node.entry);\n          }\n        } else if (node.entries) {\n          maxIndex = node.entries.length - 1;\n          if (index <= maxIndex) {\n            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n          }\n        } else {\n          maxIndex = node.nodes.length - 1;\n          if (index <= maxIndex) {\n            var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n            if (subNode) {\n              if (subNode.entry) {\n                return mapIteratorValue(type, subNode.entry);\n              }\n              stack = this._stack = mapIteratorFrame(subNode, stack);\n            }\n            continue;\n          }\n        }\n        stack = this._stack = this._stack.__prev;\n      }\n      return iteratorDone();\n    };\n\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n    var newNode;\n    var nodes = idx1 === idx2 ?\n      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :\n      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ?\n      existing.mergeDeep(value) :\n      is(existing, value) ? existing : value;\n  }\n\n  function deepMergerWith(merger) {\n    return function(existing, value, key)  {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function(x ) {return x.size !== 0});\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function(collection ) {\n      var mergeIntoMap = merger ?\n        function(value, key)  {\n          collection.update(key, NOT_SET, function(existing )\n            {return existing === NOT_SET ? value : merger(existing, value, key)}\n          );\n        } :\n        function(value, key)  {\n          collection.set(key, value);\n        }\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(\n      isNotSet || (existing && existing.set),\n      'invalid keyPath'\n    );\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(\n      nextExisting,\n      keyPathIter,\n      notSetValue,\n      updater\n    );\n    return nextUpdated === nextExisting ? existing :\n      nextUpdated === NOT_SET ? existing.remove(key) :\n      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - ((x >> 1) & 0x55555555);\n    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n    x = (x + (x >> 4)) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\n  createClass(List, IndexedCollection);\n\n    // @pragma Construction\n\n    function List(value) {\n      var empty = emptyList();\n      if (value === null || value === undefined) {\n        return empty;\n      }\n      if (isList(value)) {\n        return value;\n      }\n      var iter = IndexedIterable(value);\n      var size = iter.size;\n      if (size === 0) {\n        return empty;\n      }\n      assertNotInfinite(size);\n      if (size > 0 && size < SIZE) {\n        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n      }\n      return empty.withMutations(function(list ) {\n        list.setSize(size);\n        iter.forEach(function(v, i)  {return list.set(i, v)});\n      });\n    }\n\n    List.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    List.prototype.toString = function() {\n      return this.__toString('List [', ']');\n    };\n\n    // @pragma Access\n\n    List.prototype.get = function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      if (index >= 0 && index < this.size) {\n        index += this._origin;\n        var node = listNodeFor(this, index);\n        return node && node.array[index & MASK];\n      }\n      return notSetValue;\n    };\n\n    // @pragma Modification\n\n    List.prototype.set = function(index, value) {\n      return updateList(this, index, value);\n    };\n\n    List.prototype.remove = function(index) {\n      return !this.has(index) ? this :\n        index === 0 ? this.shift() :\n        index === this.size - 1 ? this.pop() :\n        this.splice(index, 1);\n    };\n\n    List.prototype.insert = function(index, value) {\n      return this.splice(index, 0, value);\n    };\n\n    List.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = this._origin = this._capacity = 0;\n        this._level = SHIFT;\n        this._root = this._tail = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyList();\n    };\n\n    List.prototype.push = function(/*...values*/) {\n      var values = arguments;\n      var oldSize = this.size;\n      return this.withMutations(function(list ) {\n        setListBounds(list, 0, oldSize + values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(oldSize + ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.pop = function() {\n      return setListBounds(this, 0, -1);\n    };\n\n    List.prototype.unshift = function(/*...values*/) {\n      var values = arguments;\n      return this.withMutations(function(list ) {\n        setListBounds(list, -values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.shift = function() {\n      return setListBounds(this, 1);\n    };\n\n    // @pragma Composition\n\n    List.prototype.merge = function(/*...iters*/) {\n      return mergeIntoListWith(this, undefined, arguments);\n    };\n\n    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, merger, iters);\n    };\n\n    List.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoListWith(this, deepMerger, arguments);\n    };\n\n    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, deepMergerWith(merger), iters);\n    };\n\n    List.prototype.setSize = function(size) {\n      return setListBounds(this, 0, size);\n    };\n\n    // @pragma Iteration\n\n    List.prototype.slice = function(begin, end) {\n      var size = this.size;\n      if (wholeSlice(begin, end, size)) {\n        return this;\n      }\n      return setListBounds(\n        this,\n        resolveBegin(begin, size),\n        resolveEnd(end, size)\n      );\n    };\n\n    List.prototype.__iterator = function(type, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      return new Iterator(function()  {\n        var value = values();\n        return value === DONE ?\n          iteratorDone() :\n          iteratorValue(type, index++, value);\n      });\n    };\n\n    List.prototype.__iterate = function(fn, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      var value;\n      while ((value = values()) !== DONE) {\n        if (fn(value, index++, this) === false) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    List.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        return this;\n      }\n      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n    };\n\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn =\n  ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n\n    function VNode(array, ownerID) {\n      this.array = array;\n      this.ownerID = ownerID;\n    }\n\n    // TODO: seems like these methods are very similar\n\n    VNode.prototype.removeBefore = function(ownerID, level, index) {\n      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n        return this;\n      }\n      var originIndex = (index >>> level) & MASK;\n      if (originIndex >= this.array.length) {\n        return new VNode([], ownerID);\n      }\n      var removingFirst = originIndex === 0;\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[originIndex];\n        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && removingFirst) {\n          return this;\n        }\n      }\n      if (removingFirst && !newChild) {\n        return this;\n      }\n      var editable = editableVNode(this, ownerID);\n      if (!removingFirst) {\n        for (var ii = 0; ii < originIndex; ii++) {\n          editable.array[ii] = undefined;\n        }\n      }\n      if (newChild) {\n        editable.array[originIndex] = newChild;\n      }\n      return editable;\n    };\n\n    VNode.prototype.removeAfter = function(ownerID, level, index) {\n      if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n        return this;\n      }\n      var sizeIndex = ((index - 1) >>> level) & MASK;\n      if (sizeIndex >= this.array.length) {\n        return this;\n      }\n\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[sizeIndex];\n        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n          return this;\n        }\n      }\n\n      var editable = editableVNode(this, ownerID);\n      editable.array.splice(sizeIndex + 1);\n      if (newChild) {\n        editable.array[sizeIndex] = newChild;\n      }\n      return editable;\n    };\n\n\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ?\n        iterateLeaf(node, offset) :\n        iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : (left - offset) >> level;\n      var to = ((right - offset) >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(\n            array && array[idx], level - SHIFT, offset + (idx << level)\n          );\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index !== index) {\n      return list;\n    }\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function(list ) {\n        index < 0 ?\n          setListBounds(list, index).set(0, value) :\n          setListBounds(list, 0, index + 1).set(index, value)\n      });\n    }\n\n    index += list._origin;\n\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = (index >>> level) & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << (list._level + SHIFT)) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[(rawIndex >>> level) & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might need creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might need creating a higher root.\n    while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ?\n      listNodeFor(list, newCapacity - 1) :\n      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = (oldTailOffset >>> level) & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = (newOrigin >>> newLevel) & MASK;\n        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n  }\n\n  createClass(OrderedMap, Map);\n\n    // @pragma Construction\n\n    function OrderedMap(value) {\n      return value === null || value === undefined ? emptyOrderedMap() :\n        isOrderedMap(value) ? value :\n        emptyOrderedMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    OrderedMap.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedMap.prototype.toString = function() {\n      return this.__toString('OrderedMap {', '}');\n    };\n\n    // @pragma Access\n\n    OrderedMap.prototype.get = function(k, notSetValue) {\n      var index = this._map.get(k);\n      return index !== undefined ? this._list.get(index)[1] : notSetValue;\n    };\n\n    // @pragma Modification\n\n    OrderedMap.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._map.clear();\n        this._list.clear();\n        return this;\n      }\n      return emptyOrderedMap();\n    };\n\n    OrderedMap.prototype.set = function(k, v) {\n      return updateOrderedMap(this, k, v);\n    };\n\n    OrderedMap.prototype.remove = function(k) {\n      return updateOrderedMap(this, k, NOT_SET);\n    };\n\n    OrderedMap.prototype.wasAltered = function() {\n      return this._map.wasAltered() || this._list.wasAltered();\n    };\n\n    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._list.__iterate(\n        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},\n        reverse\n      );\n    };\n\n    OrderedMap.prototype.__iterator = function(type, reverse) {\n      return this._list.fromEntrySeq().__iterator(type, reverse);\n    };\n\n    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      var newList = this._list.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        this._list = newList;\n        return this;\n      }\n      return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n    };\n\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) { // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});\n        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n    function ToKeyedSequence(indexed, useKeys) {\n      this._iter = indexed;\n      this._useKeys = useKeys;\n      this.size = indexed.size;\n    }\n\n    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n      return this._iter.get(key, notSetValue);\n    };\n\n    ToKeyedSequence.prototype.has = function(key) {\n      return this._iter.has(key);\n    };\n\n    ToKeyedSequence.prototype.valueSeq = function() {\n      return this._iter.valueSeq();\n    };\n\n    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;\n      var reversedSequence = reverseFactory(this, true);\n      if (!this._useKeys) {\n        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};\n      }\n      return reversedSequence;\n    };\n\n    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;\n      var mappedSequence = mapFactory(this, mapper, context);\n      if (!this._useKeys) {\n        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};\n      }\n      return mappedSequence;\n    };\n\n    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var ii;\n      return this._iter.__iterate(\n        this._useKeys ?\n          function(v, k)  {return fn(v, k, this$0)} :\n          ((ii = reverse ? resolveSize(this) : 0),\n            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),\n        reverse\n      );\n    };\n\n    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n      if (this._useKeys) {\n        return this._iter.__iterator(type, reverse);\n      }\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var ii = reverse ? resolveSize(this) : 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n      });\n    };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(ToIndexedSequence, IndexedSeq);\n    function ToIndexedSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToIndexedSequence.prototype.includes = function(value) {\n      return this._iter.includes(value);\n    };\n\n    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);\n    };\n\n    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, iterations++, step.value, step)\n      });\n    };\n\n\n\n  createClass(ToSetSequence, SetSeq);\n    function ToSetSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToSetSequence.prototype.has = function(key) {\n      return this._iter.includes(key);\n    };\n\n    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);\n    };\n\n    ToSetSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, step.value, step.value, step);\n      });\n    };\n\n\n\n  createClass(FromEntriesSequence, KeyedSeq);\n    function FromEntriesSequence(entries) {\n      this._iter = entries;\n      this.size = entries.size;\n    }\n\n    FromEntriesSequence.prototype.entrySeq = function() {\n      return this._iter.toSeq();\n    };\n\n    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(entry ) {\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return fn(\n            indexedIterable ? entry.get(1) : entry[1],\n            indexedIterable ? entry.get(0) : entry[0],\n            this$0\n          );\n        }\n      }, reverse);\n    };\n\n    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          // Check if entry exists first so array access doesn't throw for holes\n          // in the parent iteration.\n          if (entry) {\n            validateEntry(entry);\n            var indexedIterable = isIterable(entry);\n            return iteratorValue(\n              type,\n              indexedIterable ? entry.get(0) : entry[0],\n              indexedIterable ? entry.get(1) : entry[1],\n              step\n            );\n          }\n        }\n      });\n    };\n\n\n  ToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function()  {return iterable};\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function()  {return iterable.reverse()};\n      return reversedSequence;\n    };\n    flipSequence.has = function(key ) {return iterable.includes(key)};\n    flipSequence.includes = function(key ) {return iterable.has(key)};\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);\n    }\n    flipSequence.__iteratorUncached = function(type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new Iterator(function()  {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(\n        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n        reverse\n      );\n    }\n    return flipSequence;\n  }\n\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function(key ) {return iterable.has(key)};\n    mappedSequence.get = function(key, notSetValue)  {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ?\n        notSetValue :\n        mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(\n        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},\n        reverse\n      );\n    }\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(\n          type,\n          key,\n          mapper.call(context, entry[1], key, iterable),\n          step\n        );\n      });\n    }\n    return mappedSequence;\n  }\n\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function()  {return iterable};\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function()  {return iterable.flip()};\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function(key, notSetValue) \n      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};\n    reversedSequence.has = function(key )\n      {return iterable.has(useKeys ? key : -1 - key)};\n    reversedSequence.includes = function(value ) {return iterable.includes(value)};\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);\n    };\n    reversedSequence.__iterator =\n      function(type, reverse)  {return iterable.__iterator(type, !reverse)};\n    return reversedSequence;\n  }\n\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function(key ) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function(key, notSetValue)  {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?\n          v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    }\n    return filterSequence;\n  }\n\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        0,\n        function(a ) {return a + 1}\n      );\n    });\n    return groups.asImmutable();\n  }\n\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}\n      );\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});\n  }\n\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      if (end === Infinity) {\n        end = originalSize;\n      } else {\n        end = end | 0;\n      }\n    }\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n\n    var sliceSeq = makeSequence(iterable);\n\n    // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ?\n          iterable.get(index + resolvedBegin, notSetValue) :\n          notSetValue;\n      }\n    }\n\n    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k)  {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&\n                 iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function(type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    }\n\n    return sliceSeq;\n  }\n\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c) \n        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}\n      );\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new Iterator(function()  {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function(v ) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ?\n          keyedSeqFromValue(v) :\n          indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function(v ) {return v.size !== 0});\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable ||\n          isKeyedIterable && isKeyed(singleton) ||\n          isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(\n      function(sum, seq)  {\n        if (sum !== undefined) {\n          var size = seq.size;\n          if (size !== undefined) {\n            return sum + size;\n          }\n        }\n      },\n      0\n    );\n    return concatSeq;\n  }\n\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function(fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {var this$0 = this;\n        iter.__iterate(function(v, k)  {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    }\n    flatSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    }\n    return flatSequence;\n  }\n\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(\n      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}\n    ).flatten(true);\n  }\n\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 -1;\n    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k) \n        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&\n        fn(v, iterations++, this$0) !== false},\n        reverse\n      );\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new Iterator(function()  {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ?\n          iteratorValue(type, iterations++, separator) :\n          iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(\n      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}\n    ).toArray();\n    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(\n      isKeyedIterable ?\n      function(v, i)  { entries[i].length = 2; } :\n      function(v, i)  { entries[i] = v[1]; }\n    );\n    return isKeyedIterable ? KeyedSeq(entries) :\n      isIndexed(iterable) ? IndexedSeq(entries) :\n      SetSeq(entries);\n  }\n\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq()\n        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})\n        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;\n  }\n\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function(fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function(type, reverse) {\n      var iterators = iters.map(function(i )\n        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}\n      );\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function()  {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function(i ) {return i.next()});\n          isDone = steps.some(function(s ) {return s.done});\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(\n          type,\n          iterations++,\n          zipper.apply(null, steps.map(function(s ) {return s.value}))\n        );\n      });\n    };\n    return zipSequence\n  }\n\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable :\n      isIndexed(iterable) ? IndexedIterable :\n      SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create(\n      (\n        isKeyed(iterable) ? KeyedSeq :\n        isIndexed(iterable) ? IndexedSeq :\n        SetSeq\n      ).prototype\n    );\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n\n  createClass(Record, KeyedCollection);\n\n    function Record(defaultValues, name) {\n      var hasInitialized;\n\n      var RecordType = function Record(values) {\n        if (values instanceof RecordType) {\n          return values;\n        }\n        if (!(this instanceof RecordType)) {\n          return new RecordType(values);\n        }\n        if (!hasInitialized) {\n          hasInitialized = true;\n          var keys = Object.keys(defaultValues);\n          setProps(RecordTypePrototype, keys);\n          RecordTypePrototype.size = keys.length;\n          RecordTypePrototype._name = name;\n          RecordTypePrototype._keys = keys;\n          RecordTypePrototype._defaultValues = defaultValues;\n        }\n        this._map = Map(values);\n      };\n\n      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n      RecordTypePrototype.constructor = RecordType;\n\n      return RecordType;\n    }\n\n    Record.prototype.toString = function() {\n      return this.__toString(recordName(this) + ' {', '}');\n    };\n\n    // @pragma Access\n\n    Record.prototype.has = function(k) {\n      return this._defaultValues.hasOwnProperty(k);\n    };\n\n    Record.prototype.get = function(k, notSetValue) {\n      if (!this.has(k)) {\n        return notSetValue;\n      }\n      var defaultVal = this._defaultValues[k];\n      return this._map ? this._map.get(k, defaultVal) : defaultVal;\n    };\n\n    // @pragma Modification\n\n    Record.prototype.clear = function() {\n      if (this.__ownerID) {\n        this._map && this._map.clear();\n        return this;\n      }\n      var RecordType = this.constructor;\n      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n    };\n\n    Record.prototype.set = function(k, v) {\n      if (!this.has(k)) {\n        throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n      }\n      if (this._map && !this._map.has(k)) {\n        var defaultVal = this._defaultValues[k];\n        if (v === defaultVal) {\n          return this;\n        }\n      }\n      var newMap = this._map && this._map.set(k, v);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.remove = function(k) {\n      if (!this.has(k)) {\n        return this;\n      }\n      var newMap = this._map && this._map.remove(k);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);\n    };\n\n    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);\n    };\n\n    Record.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map && this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return makeRecord(this, newMap, ownerID);\n    };\n\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn =\n  RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {\n      // Object.defineProperty failed. Probably IE8.\n    }\n  }\n\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function() {\n        return this.get(name);\n      },\n      set: function(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n\n  createClass(Set, SetCollection);\n\n    // @pragma Construction\n\n    function Set(value) {\n      return value === null || value === undefined ? emptySet() :\n        isSet(value) && !isOrdered(value) ? value :\n        emptySet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    Set.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Set.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    Set.prototype.toString = function() {\n      return this.__toString('Set {', '}');\n    };\n\n    // @pragma Access\n\n    Set.prototype.has = function(value) {\n      return this._map.has(value);\n    };\n\n    // @pragma Modification\n\n    Set.prototype.add = function(value) {\n      return updateSet(this, this._map.set(value, true));\n    };\n\n    Set.prototype.remove = function(value) {\n      return updateSet(this, this._map.remove(value));\n    };\n\n    Set.prototype.clear = function() {\n      return updateSet(this, this._map.clear());\n    };\n\n    // @pragma Composition\n\n    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);\n      iters = iters.filter(function(x ) {return x.size !== 0});\n      if (iters.length === 0) {\n        return this;\n      }\n      if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n        return this.constructor(iters[0]);\n      }\n      return this.withMutations(function(set ) {\n        for (var ii = 0; ii < iters.length; ii++) {\n          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});\n        }\n      });\n    };\n\n    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (!iters.every(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (iters.some(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.merge = function() {\n      return this.union.apply(this, arguments);\n    };\n\n    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return this.union.apply(this, iters);\n    };\n\n    Set.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator));\n    };\n\n    Set.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator, mapper));\n    };\n\n    Set.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);\n    };\n\n    Set.prototype.__iterator = function(type, reverse) {\n      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);\n    };\n\n    Set.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return this.__make(newMap, ownerID);\n    };\n\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set :\n      newMap.size === 0 ? set.__empty() :\n      set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set);\n\n    // @pragma Construction\n\n    function OrderedSet(value) {\n      return value === null || value === undefined ? emptyOrderedSet() :\n        isOrderedSet(value) ? value :\n        emptyOrderedSet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    OrderedSet.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedSet.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    OrderedSet.prototype.toString = function() {\n      return this.__toString('OrderedSet {', '}');\n    };\n\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Stack, IndexedCollection);\n\n    // @pragma Construction\n\n    function Stack(value) {\n      return value === null || value === undefined ? emptyStack() :\n        isStack(value) ? value :\n        emptyStack().unshiftAll(value);\n    }\n\n    Stack.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Stack.prototype.toString = function() {\n      return this.__toString('Stack [', ']');\n    };\n\n    // @pragma Access\n\n    Stack.prototype.get = function(index, notSetValue) {\n      var head = this._head;\n      index = wrapIndex(this, index);\n      while (head && index--) {\n        head = head.next;\n      }\n      return head ? head.value : notSetValue;\n    };\n\n    Stack.prototype.peek = function() {\n      return this._head && this._head.value;\n    };\n\n    // @pragma Modification\n\n    Stack.prototype.push = function(/*...values*/) {\n      if (arguments.length === 0) {\n        return this;\n      }\n      var newSize = this.size + arguments.length;\n      var head = this._head;\n      for (var ii = arguments.length - 1; ii >= 0; ii--) {\n        head = {\n          value: arguments[ii],\n          next: head\n        };\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pushAll = function(iter) {\n      iter = IndexedIterable(iter);\n      if (iter.size === 0) {\n        return this;\n      }\n      assertNotInfinite(iter.size);\n      var newSize = this.size;\n      var head = this._head;\n      iter.reverse().forEach(function(value ) {\n        newSize++;\n        head = {\n          value: value,\n          next: head\n        };\n      });\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pop = function() {\n      return this.slice(1);\n    };\n\n    Stack.prototype.unshift = function(/*...values*/) {\n      return this.push.apply(this, arguments);\n    };\n\n    Stack.prototype.unshiftAll = function(iter) {\n      return this.pushAll(iter);\n    };\n\n    Stack.prototype.shift = function() {\n      return this.pop.apply(this, arguments);\n    };\n\n    Stack.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._head = undefined;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyStack();\n    };\n\n    Stack.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      var resolvedBegin = resolveBegin(begin, this.size);\n      var resolvedEnd = resolveEnd(end, this.size);\n      if (resolvedEnd !== this.size) {\n        // super.slice(begin, end);\n        return IndexedCollection.prototype.slice.call(this, begin, end);\n      }\n      var newSize = this.size - resolvedBegin;\n      var head = this._head;\n      while (resolvedBegin--) {\n        head = head.next;\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    // @pragma Mutability\n\n    Stack.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeStack(this.size, this._head, ownerID, this.__hash);\n    };\n\n    // @pragma Iteration\n\n    Stack.prototype.__iterate = function(fn, reverse) {\n      if (reverse) {\n        return this.reverse().__iterate(fn);\n      }\n      var iterations = 0;\n      var node = this._head;\n      while (node) {\n        if (fn(node.value, iterations++, this) === false) {\n          break;\n        }\n        node = node.next;\n      }\n      return iterations;\n    };\n\n    Stack.prototype.__iterator = function(type, reverse) {\n      if (reverse) {\n        return this.reverse().__iterator(type);\n      }\n      var iterations = 0;\n      var node = this._head;\n      return new Iterator(function()  {\n        if (node) {\n          var value = node.value;\n          node = node.next;\n          return iteratorValue(type, iterations++, value);\n        }\n        return iteratorDone();\n      });\n    };\n\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols &&\n      Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n\n  mixin(Iterable, {\n\n    // ### Conversion to other types\n\n    toArray: function() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });\n      return array;\n    },\n\n    toIndexedSeq: function() {\n      return new ToIndexedSequence(this);\n    },\n\n    toJS: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}\n      ).__toJS();\n    },\n\n    toJSON: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}\n      ).__toJS();\n    },\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, true);\n    },\n\n    toMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n\n    toObject: function() {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function(v, k)  { object[k] = v; });\n      return object;\n    },\n\n    toOrderedMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n\n    toOrderedSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSetSeq: function() {\n      return new ToSetSequence(this);\n    },\n\n    toSeq: function() {\n      return isIndexed(this) ? this.toIndexedSeq() :\n        isKeyed(this) ? this.toKeyedSeq() :\n        this.toSetSeq();\n    },\n\n    toStack: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toList: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n\n    // ### Common JavaScript methods and properties\n\n    toString: function() {\n      return '[Iterable]';\n    },\n\n    __toString: function(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function() {var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n\n    includes: function(searchValue) {\n      return this.some(function(value ) {return is(value, searchValue)});\n    },\n\n    entries: function() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n\n    every: function(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function(v, k, c)  {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n\n    find: function(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n\n    forEach: function(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n\n    join: function(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function(v ) {\n        isFirst ? (isFirst = false) : (joined += separator);\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n      return joined;\n    },\n\n    keys: function() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n\n    map: function(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n\n    reduce: function(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function(v, k, c)  {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n\n    reduceRight: function(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, true));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n\n    some: function(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n\n    sort: function(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n\n    values: function() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n\n\n    // ### More sequential methods\n\n    butLast: function() {\n      return this.slice(0, -1);\n    },\n\n    isEmpty: function() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});\n    },\n\n    count: function(predicate, context) {\n      return ensureSize(\n        predicate ? this.toSeq().filter(predicate, context) : this\n      );\n    },\n\n    countBy: function(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n\n    equals: function(other) {\n      return deepEqual(this, other);\n    },\n\n    entrySeq: function() {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};\n      return entriesSequence;\n    },\n\n    filterNot: function(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n\n    findEntry: function(predicate, context, notSetValue) {\n      var found = notSetValue;\n      this.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n\n    findKey: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n\n    findLast: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n\n    findLastEntry: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n    },\n\n    findLastKey: function(predicate, context) {\n      return this.toKeyedSeq().reverse().findKey(predicate, context);\n    },\n\n    first: function() {\n      return this.find(returnTrue);\n    },\n\n    flatMap: function(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n\n    fromEntrySeq: function() {\n      return new FromEntriesSequence(this);\n    },\n\n    get: function(searchKey, notSetValue) {\n      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);\n    },\n\n    getIn: function(searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n\n    groupBy: function(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n\n    has: function(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n\n    hasIn: function(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n\n    isSubset: function(iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function(value ) {return iter.includes(value)});\n    },\n\n    isSuperset: function(iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n\n    keyOf: function(searchValue) {\n      return this.findKey(function(value ) {return is(value, searchValue)});\n    },\n\n    keySeq: function() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n\n    last: function() {\n      return this.toSeq().reverse().first();\n    },\n\n    lastKeyOf: function(searchValue) {\n      return this.toKeyedSeq().reverse().keyOf(searchValue);\n    },\n\n    max: function(comparator) {\n      return maxFactory(this, comparator);\n    },\n\n    maxBy: function(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n\n    min: function(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n\n    minBy: function(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n\n    rest: function() {\n      return this.slice(1);\n    },\n\n    skip: function(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n\n    skipLast: function(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n\n    skipUntil: function(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n\n    sortBy: function(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n\n    take: function(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n\n    takeLast: function(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n\n    takeWhile: function(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n\n    takeUntil: function(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n\n    valueSeq: function() {\n      return this.toIndexedSeq();\n    },\n\n\n    // ### Hashable Object\n\n    hashCode: function() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    }\n\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect =\n  IterablePrototype.toSource = function() { return this.toString(); };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes;\n\n  mixin(KeyedIterable, {\n\n    // ### More sequential methods\n\n    flip: function() {\n      return reify(this, flipFactory(this));\n    },\n\n    mapEntries: function(mapper, context) {var this$0 = this;\n      var iterations = 0;\n      return reify(this,\n        this.toSeq().map(\n          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}\n        ).fromEntrySeq()\n      );\n    },\n\n    mapKeys: function(mapper, context) {var this$0 = this;\n      return reify(this,\n        this.toSeq().flip().map(\n          function(k, v)  {return mapper.call(context, k, v, this$0)}\n        ).flip()\n      );\n    }\n\n  });\n\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};\n\n\n\n  mixin(IndexedIterable, {\n\n    // ### Conversion to other types\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, false);\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n\n    findIndex: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    indexOf: function(searchValue) {\n      var key = this.keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    lastIndexOf: function(searchValue) {\n      var key = this.lastKeyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, false));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n\n    splice: function(index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n        return this;\n      }\n      // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(\n        this,\n        numArgs === 1 ?\n          spliced :\n          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n      );\n    },\n\n\n    // ### More collection methods\n\n    findLastIndex: function(predicate, context) {\n      var entry = this.findLastEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    first: function() {\n      return this.get(0);\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n\n    get: function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return (index < 0 || (this.size === Infinity ||\n          (this.size !== undefined && index > this.size))) ?\n        notSetValue :\n        this.find(function(_, key)  {return key === index}, undefined, notSetValue);\n    },\n\n    has: function(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ?\n        this.size === Infinity || index < this.size :\n        this.indexOf(index) !== -1\n      );\n    },\n\n    interpose: function(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n\n    interleave: function(/*...iterables*/) {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n\n    keySeq: function() {\n      return Range(0, this.size);\n    },\n\n    last: function() {\n      return this.get(-1);\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n\n    zip: function(/*, ...iterables */) {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n\n    zipWith: function(zipper/*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n\n  });\n\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n\n  mixin(SetIterable, {\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n\n    includes: function(value) {\n      return this.has(value);\n    },\n\n\n    // ### More sequential methods\n\n    keySeq: function() {\n      return this.valueSeq();\n    }\n\n  });\n\n  SetIterable.prototype.has = IterablePrototype.includes;\n  SetIterable.prototype.contains = SetIterable.prototype.includes;\n\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    }\n  }\n\n  function neg(predicate) {\n    return function() {\n      return -predicate.apply(this, arguments);\n    }\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(\n      keyed ?\n        ordered ?\n          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :\n          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :\n        ordered ?\n          function(v ) { h = 31 * h + hash(v) | 0; } :\n          function(v ) { h = h + hash(v) | 0; }\n    );\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n\n    Iterable: Iterable,\n\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n\n    is: is,\n    fromJS: fromJS\n\n  };\n\n  return Immutable;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/immutable/dist/immutable.js\n// module id = 28\n// module chunks = 0"],"sourceRoot":""}